<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Renci.SshNet">
      <assemblydata version="0.1.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>ad816c5e-6f13-4589-9f3e-59523f8b77a4</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SshNet</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.CLSCompliantAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>SSH.NET</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Renci</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright © Renci 2011</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Renci.SshNet">
      <apidata name="Renci.SshNet" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.AuthenticationMethod" />
        <element api="T:Renci.SshNet.AuthenticationResult" />
        <element api="T:Renci.SshNet.BaseClient" />
        <element api="T:Renci.SshNet.CommandAsyncResult" />
        <element api="T:Renci.SshNet.CipherInfo" />
        <element api="T:Renci.SshNet.Extensions" />
        <element api="T:Renci.SshNet.ConnectionInfo" />
        <element api="T:Renci.SshNet.ShellStream" />
        <element api="T:Renci.SshNet.ExpectAsyncResult" />
        <element api="T:Renci.SshNet.SftpClient" />
        <element api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" />
        <element api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" />
        <element api="T:Renci.SshNet.NoneAuthenticationMethod" />
        <element api="T:Renci.SshNet.PasswordAuthenticationMethod" />
        <element api="T:Renci.SshNet.ExpectAction" />
        <element api="T:Renci.SshNet.ForwardedPort" />
        <element api="T:Renci.SshNet.ForwardedPortDynamic" />
        <element api="T:Renci.SshNet.ForwardedPortLocal" />
        <element api="T:Renci.SshNet.PasswordConnectionInfo" />
        <element api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" />
        <element api="T:Renci.SshNet.PrivateKeyConnectionInfo" />
        <element api="T:Renci.SshNet.ProxyTypes" />
        <element api="T:Renci.SshNet.ScpClient" />
        <element api="T:Renci.SshNet.ForwardedPortRemote" />
        <element api="T:Renci.SshNet.MessageEventArgs`1" />
        <element api="T:Renci.SshNet.NetConfClient" />
        <element api="T:Renci.SshNet.PrivateKeyFile" />
        <element api="T:Renci.SshNet.Session" />
        <element api="T:Renci.SshNet.Shell" />
        <element api="T:Renci.SshNet.SshClient" />
        <element api="T:Renci.SshNet.SshCommand" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.AuthenticationMethod">
      <apidata name="AuthenticationMethod" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" ref="true" />
          <type api="T:Renci.SshNet.NoneAuthenticationMethod" ref="true" />
          <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
          <type api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.AuthenticationMethod.#ctor(System.String)" />
        <element api="M:Renci.SshNet.AuthenticationMethod.Authenticate(Renci.SshNet.Session)" />
        <element api="P:Renci.SshNet.AuthenticationMethod.Name" />
        <element api="P:Renci.SshNet.AuthenticationMethod.Username" />
        <element api="P:Renci.SshNet.AuthenticationMethod.ErrorMessage" />
        <element api="P:Renci.SshNet.AuthenticationMethod.AllowedAuthentications" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.AuthenticationMethod.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.AuthenticationMethod.AllowedAuthentications">
      <apidata name="AllowedAuthentications" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_AllowedAuthentications" />
      <setter name="set_AllowedAuthentications" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.AuthenticationMethod.Authenticate(Renci.SshNet.Session)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.AuthenticationMethod.ErrorMessage">
      <apidata name="ErrorMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ErrorMessage" />
      <setter name="set_ErrorMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.AuthenticationMethod.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.AuthenticationMethod.Username">
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.AuthenticationResult">
      <apidata name="AuthenticationResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Renci.SshNet.AuthenticationResult.Success" />
        <element api="F:Renci.SshNet.AuthenticationResult.PartialSuccess" />
        <element api="F:Renci.SshNet.AuthenticationResult.Failure" />
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.AuthenticationResult.Failure">
      <apidata name="Failure" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.AuthenticationResult.PartialSuccess">
      <apidata name="PartialSuccess" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.AuthenticationResult.Success">
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.BaseClient">
      <apidata name="BaseClient" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.SftpClient" ref="true" />
          <type api="T:Renci.SshNet.ScpClient" ref="true" />
          <type api="T:Renci.SshNet.NetConfClient" ref="true" />
          <type api="T:Renci.SshNet.SshClient" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.BaseClient.#ctor(Renci.SshNet.ConnectionInfo)" />
        <element api="M:Renci.SshNet.BaseClient.Connect" />
        <element api="M:Renci.SshNet.BaseClient.Disconnect" />
        <element api="M:Renci.SshNet.BaseClient.SendKeepAlive" />
        <element api="M:Renci.SshNet.BaseClient.OnConnecting" />
        <element api="M:Renci.SshNet.BaseClient.OnConnected" />
        <element api="M:Renci.SshNet.BaseClient.OnDisconnecting" />
        <element api="M:Renci.SshNet.BaseClient.OnDisconnected" />
        <element api="M:Renci.SshNet.BaseClient.EnsureConnection" />
        <element api="M:Renci.SshNet.BaseClient.Dispose" />
        <element api="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.BaseClient.Finalize" />
        <element api="P:Renci.SshNet.BaseClient.Session" />
        <element api="P:Renci.SshNet.BaseClient.ConnectionInfo" />
        <element api="P:Renci.SshNet.BaseClient.IsConnected" />
        <element api="P:Renci.SshNet.BaseClient.KeepAliveInterval" />
        <element api="E:Renci.SshNet.BaseClient.ErrorOccurred" />
        <element api="E:Renci.SshNet.BaseClient.HostKeyReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.#ctor(Renci.SshNet.ConnectionInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="connectionInfo">
          <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.Connect">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.BaseClient.ConnectionInfo">
      <apidata name="ConnectionInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ConnectionInfo" />
      <setter name="set_ConnectionInfo" />
      <returns>
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.Disconnect">
      <apidata name="Disconnect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.EnsureConnection">
      <apidata name="EnsureConnection" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.BaseClient.ErrorOccurred">
      <apidata name="ErrorOccurred" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ErrorOccurred" />
      <remover name="remove_ErrorOccurred" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.BaseClient.HostKeyReceived">
      <apidata name="HostKeyReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_HostKeyReceived" />
      <remover name="remove_HostKeyReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.BaseClient.IsConnected">
      <apidata name="IsConnected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsConnected" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.BaseClient.KeepAliveInterval">
      <apidata name="KeepAliveInterval" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeepAliveInterval" />
      <setter name="set_KeepAliveInterval" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.OnConnected">
      <apidata name="OnConnected" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.OnConnecting">
      <apidata name="OnConnecting" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.OnDisconnected">
      <apidata name="OnDisconnected" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.OnDisconnecting">
      <apidata name="OnDisconnecting" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.BaseClient.SendKeepAlive">
      <apidata name="SendKeepAlive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.BaseClient.Session">
      <apidata name="Session" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Session" />
      <setter name="set_Session" />
      <returns>
        <type api="T:Renci.SshNet.Session" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.BaseClient" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.CipherInfo">
      <apidata name="CipherInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.CipherInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Byte[],Renci.SshNet.Security.Cryptography.BlockCipher})" />
        <element api="P:Renci.SshNet.CipherInfo.KeySize" />
        <element api="P:Renci.SshNet.CipherInfo.Cipher" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.CipherInfo.#ctor(System.Int32,System.Func{System.Byte[],System.Byte[],Renci.SshNet.Security.Cryptography.BlockCipher})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="keySize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cipher">
          <type api="T:System.Func`3" ref="true">
            <specialization>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
              <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CipherInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.CipherInfo.Cipher">
      <apidata name="Cipher" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Cipher" />
      <setter name="set_Cipher" />
      <returns>
        <type api="T:System.Func`3" ref="true">
          <specialization>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
            <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CipherInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.CipherInfo.KeySize">
      <apidata name="KeySize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_KeySize" />
      <setter name="set_KeySize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CipherInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.CommandAsyncResult">
      <apidata name="CommandAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IAsyncResult" ref="true" />
      </implements>
      <elements>
        <element api="P:Renci.SshNet.CommandAsyncResult.BytesReceived" />
        <element api="P:Renci.SshNet.CommandAsyncResult.BytesSent" />
        <element api="P:Renci.SshNet.CommandAsyncResult.AsyncState" />
        <element api="P:Renci.SshNet.CommandAsyncResult.AsyncWaitHandle" />
        <element api="P:Renci.SshNet.CommandAsyncResult.CompletedSynchronously" />
        <element api="P:Renci.SshNet.CommandAsyncResult.IsCompleted" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.CommandAsyncResult.AsyncState">
      <apidata name="AsyncState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_AsyncState" />
      <setter name="set_AsyncState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncState">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CommandAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.CommandAsyncResult.AsyncWaitHandle">
      <apidata name="AsyncWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_AsyncWaitHandle" />
      <setter name="set_AsyncWaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncWaitHandle">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CommandAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.CommandAsyncResult.BytesReceived">
      <apidata name="BytesReceived" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BytesReceived" />
      <setter name="set_BytesReceived" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CommandAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.CommandAsyncResult.BytesSent">
      <apidata name="BytesSent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BytesSent" />
      <setter name="set_BytesSent" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CommandAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.CommandAsyncResult.CompletedSynchronously">
      <apidata name="CompletedSynchronously" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CompletedSynchronously" />
      <setter name="set_CompletedSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.CompletedSynchronously">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CommandAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.CommandAsyncResult.IsCompleted">
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_IsCompleted" />
      <setter name="set_IsCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.IsCompleted">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.CommandAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ConnectionInfo">
      <apidata name="ConnectionInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
          <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
          <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.AuthenticationMethod[])" />
        <element api="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.AuthenticationMethod[])" />
        <element api="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.AuthenticationMethod[])" />
        <element api="M:Renci.SshNet.ConnectionInfo.Authenticate(Renci.SshNet.Session)" />
        <element api="P:Renci.SshNet.ConnectionInfo.KeyExchangeAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.Encryptions" />
        <element api="P:Renci.SshNet.ConnectionInfo.HmacAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.HostKeyAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.AuthenticationMethods" />
        <element api="P:Renci.SshNet.ConnectionInfo.CompressionAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.ChannelRequests" />
        <element api="P:Renci.SshNet.ConnectionInfo.IsAuthenticated" />
        <element api="P:Renci.SshNet.ConnectionInfo.Host" />
        <element api="P:Renci.SshNet.ConnectionInfo.Port" />
        <element api="P:Renci.SshNet.ConnectionInfo.Username" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyType" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyHost" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyPort" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyUsername" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyPassword" />
        <element api="P:Renci.SshNet.ConnectionInfo.Timeout" />
        <element api="P:Renci.SshNet.ConnectionInfo.RetryAttempts" />
        <element api="P:Renci.SshNet.ConnectionInfo.MaxSessions" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentKeyExchangeAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerEncryption" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientEncryption" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerHmacAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientHmacAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentHostKeyAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerCompressionAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.ServerVersion" />
        <element api="P:Renci.SshNet.ConnectionInfo.ClientVersion" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientCompressionAlgorithm" />
        <element api="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.AuthenticationMethod[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationMethods" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.AuthenticationMethod[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationMethods" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.AuthenticationMethod[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="authenticationMethods" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ConnectionInfo.Authenticate(Renci.SshNet.Session)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner">
      <apidata name="AuthenticationBanner" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AuthenticationBanner" />
      <remover name="remove_AuthenticationBanner" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.AuthenticationBannerEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.AuthenticationBannerEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.AuthenticationMethods">
      <apidata name="AuthenticationMethods" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_AuthenticationMethods" />
      <setter name="set_AuthenticationMethods" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.ChannelRequests">
      <apidata name="ChannelRequests" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ChannelRequests" />
      <setter name="set_ChannelRequests" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.ClientVersion">
      <apidata name="ClientVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_ClientVersion" />
      <setter name="set_ClientVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CompressionAlgorithms">
      <apidata name="CompressionAlgorithms" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_CompressionAlgorithms" />
      <setter name="set_CompressionAlgorithms" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CurrentClientCompressionAlgorithm">
      <apidata name="CurrentClientCompressionAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CurrentClientCompressionAlgorithm" />
      <setter name="set_CurrentClientCompressionAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CurrentClientEncryption">
      <apidata name="CurrentClientEncryption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CurrentClientEncryption" />
      <setter name="set_CurrentClientEncryption" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CurrentClientHmacAlgorithm">
      <apidata name="CurrentClientHmacAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CurrentClientHmacAlgorithm" />
      <setter name="set_CurrentClientHmacAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CurrentHostKeyAlgorithm">
      <apidata name="CurrentHostKeyAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CurrentHostKeyAlgorithm" />
      <setter name="set_CurrentHostKeyAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CurrentKeyExchangeAlgorithm">
      <apidata name="CurrentKeyExchangeAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CurrentKeyExchangeAlgorithm" />
      <setter name="set_CurrentKeyExchangeAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CurrentServerCompressionAlgorithm">
      <apidata name="CurrentServerCompressionAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CurrentServerCompressionAlgorithm" />
      <setter name="set_CurrentServerCompressionAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CurrentServerEncryption">
      <apidata name="CurrentServerEncryption" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CurrentServerEncryption" />
      <setter name="set_CurrentServerEncryption" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.CurrentServerHmacAlgorithm">
      <apidata name="CurrentServerHmacAlgorithm" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CurrentServerHmacAlgorithm" />
      <setter name="set_CurrentServerHmacAlgorithm" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.Encryptions">
      <apidata name="Encryptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Encryptions" />
      <setter name="set_Encryptions" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:Renci.SshNet.CipherInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.HmacAlgorithms">
      <apidata name="HmacAlgorithms" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_HmacAlgorithms" />
      <setter name="set_HmacAlgorithms" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Func`2" ref="true">
              <specialization>
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.Host">
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Host" />
      <setter name="set_Host" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.HostKeyAlgorithms">
      <apidata name="HostKeyAlgorithms" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_HostKeyAlgorithms" />
      <setter name="set_HostKeyAlgorithms" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Func`2" ref="true">
              <specialization>
                <arrayOf rank="1">
                  <type api="T:System.Byte" ref="false" />
                </arrayOf>
                <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.IsAuthenticated">
      <apidata name="IsAuthenticated" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsAuthenticated" />
      <setter name="set_IsAuthenticated" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.KeyExchangeAlgorithms">
      <apidata name="KeyExchangeAlgorithms" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_KeyExchangeAlgorithms" />
      <setter name="set_KeyExchangeAlgorithms" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.MaxSessions">
      <apidata name="MaxSessions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxSessions" />
      <setter name="set_MaxSessions" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.Port">
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.ProxyHost">
      <apidata name="ProxyHost" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ProxyHost" />
      <setter name="set_ProxyHost" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.ProxyPassword">
      <apidata name="ProxyPassword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ProxyPassword" />
      <setter name="set_ProxyPassword" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.ProxyPort">
      <apidata name="ProxyPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ProxyPort" />
      <setter name="set_ProxyPort" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.ProxyType">
      <apidata name="ProxyType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ProxyType" />
      <setter name="set_ProxyType" />
      <returns>
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.ProxyUsername">
      <apidata name="ProxyUsername" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ProxyUsername" />
      <setter name="set_ProxyUsername" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.RetryAttempts">
      <apidata name="RetryAttempts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RetryAttempts" />
      <setter name="set_RetryAttempts" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.ServerVersion">
      <apidata name="ServerVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_ServerVersion" />
      <setter name="set_ServerVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.Timeout">
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ConnectionInfo.Username">
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ExpectAction">
      <apidata name="ExpectAction" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.ExpectAction.#ctor(System.Text.RegularExpressions.Regex,System.Action{System.String})" />
        <element api="M:Renci.SshNet.ExpectAction.#ctor(System.String,System.Action{System.String})" />
        <element api="P:Renci.SshNet.ExpectAction.Expect" />
        <element api="P:Renci.SshNet.ExpectAction.Action" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ExpectAction.#ctor(System.String,System.Action{System.String})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="expect">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ExpectAction" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ExpectAction.#ctor(System.Text.RegularExpressions.Regex,System.Action{System.String})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="expect">
          <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
        </parameter>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ExpectAction" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ExpectAction.Action">
      <apidata name="Action" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Action" />
      <setter name="set_Action" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ExpectAction" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ExpectAction.Expect">
      <apidata name="Expect" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Expect" />
      <setter name="set_Expect" />
      <returns>
        <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ExpectAction" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ExpectAsyncResult">
      <apidata name="ExpectAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IAsyncResult" ref="true" />
      </implements>
      <elements>
        <element api="P:Renci.SshNet.ExpectAsyncResult.AsyncState" />
        <element api="P:Renci.SshNet.ExpectAsyncResult.AsyncWaitHandle" />
        <element api="P:Renci.SshNet.ExpectAsyncResult.CompletedSynchronously" />
        <element api="P:Renci.SshNet.ExpectAsyncResult.IsCompleted" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ExpectAsyncResult.AsyncState">
      <apidata name="AsyncState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_AsyncState" />
      <setter name="set_AsyncState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncState">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ExpectAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ExpectAsyncResult.AsyncWaitHandle">
      <apidata name="AsyncWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_AsyncWaitHandle" />
      <setter name="set_AsyncWaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncWaitHandle">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ExpectAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ExpectAsyncResult.CompletedSynchronously">
      <apidata name="CompletedSynchronously" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_CompletedSynchronously" />
      <setter name="set_CompletedSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.CompletedSynchronously">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ExpectAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ExpectAsyncResult.IsCompleted">
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="assembly" />
      <getter name="get_IsCompleted" />
      <setter name="set_IsCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.IsCompleted">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ExpectAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Extensions">
      <apidata name="Extensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Renci.SshNet.ForwardedPort">
      <apidata name="ForwardedPort" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
          <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
          <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.ForwardedPort.Start" />
        <element api="M:Renci.SshNet.ForwardedPort.Stop" />
        <element api="M:Renci.SshNet.ForwardedPort.RaiseExceptionEvent(System.Exception)" />
        <element api="M:Renci.SshNet.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)" />
        <element api="M:Renci.SshNet.ForwardedPort.#ctor" />
        <element api="P:Renci.SshNet.ForwardedPort.IsStarted" />
        <element api="E:Renci.SshNet.ForwardedPort.Exception" />
        <element api="E:Renci.SshNet.ForwardedPort.RequestReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPort.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.ForwardedPort.Exception">
      <apidata name="Exception" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Exception" />
      <remover name="remove_Exception" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPort.IsStarted">
      <apidata name="IsStarted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_IsStarted" />
      <setter name="set_IsStarted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPort.RaiseExceptionEvent(System.Exception)">
      <apidata name="RaiseExceptionEvent" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="execption">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)">
      <apidata name="RaiseRequestReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.ForwardedPort.RequestReceived">
      <apidata name="RequestReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RequestReceived" />
      <remover name="remove_RequestReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.PortForwardEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.PortForwardEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPort.Start">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPort.Stop">
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ForwardedPortDynamic">
      <apidata name="ForwardedPortDynamic" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.ForwardedPortDynamic.#ctor(System.UInt32)" />
        <element api="M:Renci.SshNet.ForwardedPortDynamic.#ctor(System.String,System.UInt32)" />
        <element api="M:Renci.SshNet.ForwardedPortDynamic.Start" />
        <element api="M:Renci.SshNet.ForwardedPortDynamic.Stop" />
        <element api="M:Renci.SshNet.ForwardedPortDynamic.Dispose" />
        <element api="M:Renci.SshNet.ForwardedPortDynamic.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.ForwardedPortDynamic.Finalize" />
        <element api="P:Renci.SshNet.ForwardedPortDynamic.BoundHost" />
        <element api="P:Renci.SshNet.ForwardedPortDynamic.BoundPort" />
        <element api="M:Renci.SshNet.ForwardedPort.RaiseExceptionEvent(System.Exception)" />
        <element api="M:Renci.SshNet.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)" />
        <element api="P:Renci.SshNet.ForwardedPort.IsStarted" />
        <element api="E:Renci.SshNet.ForwardedPort.Exception" />
        <element api="E:Renci.SshNet.ForwardedPort.RequestReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortDynamic.#ctor(System.String,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortDynamic.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="port">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortDynamic.BoundHost">
      <apidata name="BoundHost" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_BoundHost" />
      <setter name="set_BoundHost" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortDynamic.BoundPort">
      <apidata name="BoundPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_BoundPort" />
      <setter name="set_BoundPort" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortDynamic.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortDynamic.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortDynamic.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortDynamic.Start">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.ForwardedPort.Start">
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortDynamic.Stop">
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.ForwardedPort.Stop">
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortDynamic" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ForwardedPortLocal">
      <apidata name="ForwardedPortLocal" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.UInt32,System.String,System.UInt32)" />
        <element api="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.String,System.UInt32,System.String,System.UInt32)" />
        <element api="M:Renci.SshNet.ForwardedPortLocal.Start" />
        <element api="M:Renci.SshNet.ForwardedPortLocal.Stop" />
        <element api="M:Renci.SshNet.ForwardedPortLocal.Dispose" />
        <element api="M:Renci.SshNet.ForwardedPortLocal.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.ForwardedPortLocal.Finalize" />
        <element api="P:Renci.SshNet.ForwardedPortLocal.BoundHost" />
        <element api="P:Renci.SshNet.ForwardedPortLocal.BoundPort" />
        <element api="P:Renci.SshNet.ForwardedPortLocal.Host" />
        <element api="P:Renci.SshNet.ForwardedPortLocal.Port" />
        <element api="M:Renci.SshNet.ForwardedPort.RaiseExceptionEvent(System.Exception)" />
        <element api="M:Renci.SshNet.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)" />
        <element api="P:Renci.SshNet.ForwardedPort.IsStarted" />
        <element api="E:Renci.SshNet.ForwardedPort.Exception" />
        <element api="E:Renci.SshNet.ForwardedPort.RequestReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="boundHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="boundPort">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortLocal.#ctor(System.UInt32,System.String,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="boundPort">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortLocal.BoundHost">
      <apidata name="BoundHost" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_BoundHost" />
      <setter name="set_BoundHost" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortLocal.BoundPort">
      <apidata name="BoundPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_BoundPort" />
      <setter name="set_BoundPort" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortLocal.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortLocal.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortLocal.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortLocal.Host">
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Host" />
      <setter name="set_Host" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortLocal.Port">
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortLocal.Start">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.ForwardedPort.Start">
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortLocal.Stop">
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.ForwardedPort.Stop">
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortLocal" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ForwardedPortRemote">
      <apidata name="ForwardedPortRemote" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.ForwardedPortRemote.#ctor(System.UInt32,System.String,System.UInt32)" />
        <element api="M:Renci.SshNet.ForwardedPortRemote.#ctor(System.String,System.UInt32,System.String,System.UInt32)" />
        <element api="M:Renci.SshNet.ForwardedPortRemote.Start" />
        <element api="M:Renci.SshNet.ForwardedPortRemote.Stop" />
        <element api="M:Renci.SshNet.ForwardedPortRemote.Dispose" />
        <element api="M:Renci.SshNet.ForwardedPortRemote.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.ForwardedPortRemote.Finalize" />
        <element api="P:Renci.SshNet.ForwardedPortRemote.BoundHost" />
        <element api="P:Renci.SshNet.ForwardedPortRemote.BoundPort" />
        <element api="P:Renci.SshNet.ForwardedPortRemote.Host" />
        <element api="P:Renci.SshNet.ForwardedPortRemote.Port" />
        <element api="M:Renci.SshNet.ForwardedPort.RaiseExceptionEvent(System.Exception)" />
        <element api="M:Renci.SshNet.ForwardedPort.RaiseRequestReceived(System.String,System.UInt32)" />
        <element api="P:Renci.SshNet.ForwardedPort.IsStarted" />
        <element api="E:Renci.SshNet.ForwardedPort.Exception" />
        <element api="E:Renci.SshNet.ForwardedPort.RequestReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortRemote.#ctor(System.String,System.UInt32,System.String,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="boundHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="boundPort">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortRemote.#ctor(System.UInt32,System.String,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="boundPort">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortRemote.BoundHost">
      <apidata name="BoundHost" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_BoundHost" />
      <setter name="set_BoundHost" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortRemote.BoundPort">
      <apidata name="BoundPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_BoundPort" />
      <setter name="set_BoundPort" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortRemote.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortRemote.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortRemote.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortRemote.Host">
      <apidata name="Host" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Host" />
      <setter name="set_Host" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ForwardedPortRemote.Port">
      <apidata name="Port" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Port" />
      <setter name="set_Port" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortRemote.Start">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.ForwardedPort.Start">
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ForwardedPortRemote.Stop">
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.ForwardedPort.Stop">
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ForwardedPortRemote" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod">
      <apidata name="KeyboardInteractiveAuthenticationMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.#ctor(System.String)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Authenticate(Renci.SshNet.Session)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Dispose" />
        <element api="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Finalize" />
        <element api="P:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Name" />
        <element api="E:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.AuthenticationPrompt" />
        <element api="P:Renci.SshNet.AuthenticationMethod.Username" />
        <element api="P:Renci.SshNet.AuthenticationMethod.ErrorMessage" />
        <element api="P:Renci.SshNet.AuthenticationMethod.AllowedAuthentications" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.AuthenticationMethod.Authenticate(Renci.SshNet.Session)">
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.AuthenticationPrompt">
      <apidata name="AuthenticationPrompt" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AuthenticationPrompt" />
      <remover name="remove_AuthenticationPrompt" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.KeyboardInteractiveAuthenticationMethod.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.AuthenticationMethod.Name">
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.KeyboardInteractiveConnectionInfo">
      <apidata name="KeyboardInteractiveConnectionInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Finalize" />
        <element api="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt" />
        <element api="M:Renci.SshNet.ConnectionInfo.Authenticate(Renci.SshNet.Session)" />
        <element api="P:Renci.SshNet.ConnectionInfo.KeyExchangeAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.Encryptions" />
        <element api="P:Renci.SshNet.ConnectionInfo.HmacAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.HostKeyAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.AuthenticationMethods" />
        <element api="P:Renci.SshNet.ConnectionInfo.CompressionAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.ChannelRequests" />
        <element api="P:Renci.SshNet.ConnectionInfo.IsAuthenticated" />
        <element api="P:Renci.SshNet.ConnectionInfo.Host" />
        <element api="P:Renci.SshNet.ConnectionInfo.Port" />
        <element api="P:Renci.SshNet.ConnectionInfo.Username" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyType" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyHost" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyPort" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyUsername" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyPassword" />
        <element api="P:Renci.SshNet.ConnectionInfo.Timeout" />
        <element api="P:Renci.SshNet.ConnectionInfo.RetryAttempts" />
        <element api="P:Renci.SshNet.ConnectionInfo.MaxSessions" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentKeyExchangeAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerEncryption" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientEncryption" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerHmacAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientHmacAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentHostKeyAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerCompressionAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.ServerVersion" />
        <element api="P:Renci.SshNet.ConnectionInfo.ClientVersion" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientCompressionAlgorithm" />
        <element api="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.KeyboardInteractiveConnectionInfo.AuthenticationPrompt">
      <apidata name="AuthenticationPrompt" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_AuthenticationPrompt" />
      <remover name="remove_AuthenticationPrompt" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.KeyboardInteractiveConnectionInfo.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.KeyboardInteractiveConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.MessageEventArgs`1">
      <apidata name="MessageEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T" />
      </templates>
      <elements>
        <element api="M:Renci.SshNet.MessageEventArgs`1.#ctor(`0)" />
        <element api="P:Renci.SshNet.MessageEventArgs`1.Message" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.MessageEventArgs`1.#ctor(`0)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <template name="T" index="0" api="T:Renci.SshNet.MessageEventArgs`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.MessageEventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.MessageEventArgs`1.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <template name="T" index="0" api="T:Renci.SshNet.MessageEventArgs`1" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.MessageEventArgs`1" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.NetConfClient">
      <apidata name="NetConfClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.NetConfClient.#ctor(Renci.SshNet.ConnectionInfo)" />
        <element api="M:Renci.SshNet.NetConfClient.#ctor(System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.NetConfClient.#ctor(System.String,System.String,System.String)" />
        <element api="M:Renci.SshNet.NetConfClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.NetConfClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.NetConfClient.SendReceiveRpc(System.Xml.XmlDocument)" />
        <element api="M:Renci.SshNet.NetConfClient.SendReceiveRpc(System.String)" />
        <element api="M:Renci.SshNet.NetConfClient.SendCloseRpc" />
        <element api="M:Renci.SshNet.NetConfClient.OnConnected" />
        <element api="M:Renci.SshNet.NetConfClient.OnDisconnecting" />
        <element api="M:Renci.SshNet.NetConfClient.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.BaseClient.Dispose" />
        <element api="P:Renci.SshNet.NetConfClient.OperationTimeout" />
        <element api="P:Renci.SshNet.NetConfClient.ServerCapabilities" />
        <element api="P:Renci.SshNet.NetConfClient.ClientCapabilities" />
        <element api="P:Renci.SshNet.NetConfClient.AutomaticMessageIdHandling" />
        <element api="M:Renci.SshNet.BaseClient.Connect" />
        <element api="M:Renci.SshNet.BaseClient.Disconnect" />
        <element api="M:Renci.SshNet.BaseClient.SendKeepAlive" />
        <element api="M:Renci.SshNet.BaseClient.OnConnecting" />
        <element api="M:Renci.SshNet.BaseClient.OnDisconnected" />
        <element api="M:Renci.SshNet.BaseClient.EnsureConnection" />
        <element api="M:Renci.SshNet.BaseClient.Finalize" />
        <element api="P:Renci.SshNet.BaseClient.Session" />
        <element api="P:Renci.SshNet.BaseClient.ConnectionInfo" />
        <element api="P:Renci.SshNet.BaseClient.IsConnected" />
        <element api="P:Renci.SshNet.BaseClient.KeepAliveInterval" />
        <element api="E:Renci.SshNet.BaseClient.ErrorOccurred" />
        <element api="E:Renci.SshNet.BaseClient.HostKeyReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.#ctor(Renci.SshNet.ConnectionInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="connectionInfo">
          <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.#ctor(System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.NetConfClient.AutomaticMessageIdHandling">
      <apidata name="AutomaticMessageIdHandling" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutomaticMessageIdHandling" />
      <setter name="set_AutomaticMessageIdHandling" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.NetConfClient.ClientCapabilities">
      <apidata name="ClientCapabilities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientCapabilities" />
      <returns>
        <type api="T:System.Xml.XmlDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.OnConnected">
      <apidata name="OnConnected" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.OnConnected">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.OnDisconnecting">
      <apidata name="OnDisconnecting" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.OnDisconnecting">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.NetConfClient.OperationTimeout">
      <apidata name="OperationTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationTimeout" />
      <setter name="set_OperationTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.SendCloseRpc">
      <apidata name="SendCloseRpc" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Xml.XmlDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.SendReceiveRpc(System.String)">
      <apidata name="SendReceiveRpc" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="xml">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NetConfClient.SendReceiveRpc(System.Xml.XmlDocument)">
      <apidata name="SendReceiveRpc" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="rpc">
          <type api="T:System.Xml.XmlDocument" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.NetConfClient.ServerCapabilities">
      <apidata name="ServerCapabilities" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ServerCapabilities" />
      <returns>
        <type api="T:System.Xml.XmlDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NetConfClient" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.NoneAuthenticationMethod">
      <apidata name="NoneAuthenticationMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.NoneAuthenticationMethod.#ctor(System.String)" />
        <element api="M:Renci.SshNet.NoneAuthenticationMethod.Authenticate(Renci.SshNet.Session)" />
        <element api="M:Renci.SshNet.NoneAuthenticationMethod.Dispose" />
        <element api="M:Renci.SshNet.NoneAuthenticationMethod.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.NoneAuthenticationMethod.Finalize" />
        <element api="P:Renci.SshNet.NoneAuthenticationMethod.Name" />
        <element api="P:Renci.SshNet.AuthenticationMethod.Username" />
        <element api="P:Renci.SshNet.AuthenticationMethod.ErrorMessage" />
        <element api="P:Renci.SshNet.AuthenticationMethod.AllowedAuthentications" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NoneAuthenticationMethod.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NoneAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NoneAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.AuthenticationMethod.Authenticate(Renci.SshNet.Session)">
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NoneAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NoneAuthenticationMethod.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NoneAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NoneAuthenticationMethod.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NoneAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.NoneAuthenticationMethod.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NoneAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.NoneAuthenticationMethod.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.AuthenticationMethod.Name">
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.NoneAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.PasswordAuthenticationMethod">
      <apidata name="PasswordAuthenticationMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.PasswordAuthenticationMethod.#ctor(System.String,System.String)" />
        <element api="M:Renci.SshNet.PasswordAuthenticationMethod.#ctor(System.String,System.Byte[])" />
        <element api="M:Renci.SshNet.PasswordAuthenticationMethod.Authenticate(Renci.SshNet.Session)" />
        <element api="M:Renci.SshNet.PasswordAuthenticationMethod.Dispose" />
        <element api="M:Renci.SshNet.PasswordAuthenticationMethod.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.PasswordAuthenticationMethod.Finalize" />
        <element api="P:Renci.SshNet.PasswordAuthenticationMethod.Name" />
        <element api="E:Renci.SshNet.PasswordAuthenticationMethod.PasswordExpired" />
        <element api="P:Renci.SshNet.AuthenticationMethod.Username" />
        <element api="P:Renci.SshNet.AuthenticationMethod.ErrorMessage" />
        <element api="P:Renci.SshNet.AuthenticationMethod.AllowedAuthentications" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordAuthenticationMethod.#ctor(System.String,System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordAuthenticationMethod.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.AuthenticationMethod.Authenticate(Renci.SshNet.Session)">
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordAuthenticationMethod.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordAuthenticationMethod.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordAuthenticationMethod.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.PasswordAuthenticationMethod.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.AuthenticationMethod.Name">
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.PasswordAuthenticationMethod.PasswordExpired">
      <apidata name="PasswordExpired" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_PasswordExpired" />
      <remover name="remove_PasswordExpired" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.PasswordConnectionInfo">
      <apidata name="PasswordConnectionInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[])" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[])" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.Dispose" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.PasswordConnectionInfo.Finalize" />
        <element api="E:Renci.SshNet.PasswordConnectionInfo.PasswordExpired" />
        <element api="M:Renci.SshNet.ConnectionInfo.Authenticate(Renci.SshNet.Session)" />
        <element api="P:Renci.SshNet.ConnectionInfo.KeyExchangeAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.Encryptions" />
        <element api="P:Renci.SshNet.ConnectionInfo.HmacAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.HostKeyAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.AuthenticationMethods" />
        <element api="P:Renci.SshNet.ConnectionInfo.CompressionAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.ChannelRequests" />
        <element api="P:Renci.SshNet.ConnectionInfo.IsAuthenticated" />
        <element api="P:Renci.SshNet.ConnectionInfo.Host" />
        <element api="P:Renci.SshNet.ConnectionInfo.Port" />
        <element api="P:Renci.SshNet.ConnectionInfo.Username" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyType" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyHost" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyPort" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyUsername" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyPassword" />
        <element api="P:Renci.SshNet.ConnectionInfo.Timeout" />
        <element api="P:Renci.SshNet.ConnectionInfo.RetryAttempts" />
        <element api="P:Renci.SshNet.ConnectionInfo.MaxSessions" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentKeyExchangeAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerEncryption" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientEncryption" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerHmacAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientHmacAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentHostKeyAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerCompressionAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.ServerVersion" />
        <element api="P:Renci.SshNet.ConnectionInfo.ClientVersion" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientCompressionAlgorithm" />
        <element api="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.Int32,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.Byte[],Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.#ctor(System.String,System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PasswordConnectionInfo.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.PasswordConnectionInfo.PasswordExpired">
      <apidata name="PasswordExpired" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_PasswordExpired" />
      <remover name="remove_PasswordExpired" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PasswordConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.PrivateKeyAuthenticationMethod">
      <apidata name="PrivateKeyAuthenticationMethod" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.PrivateKeyAuthenticationMethod.#ctor(System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Authenticate(Renci.SshNet.Session)" />
        <element api="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Dispose" />
        <element api="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Finalize" />
        <element api="P:Renci.SshNet.PrivateKeyAuthenticationMethod.Name" />
        <element api="P:Renci.SshNet.PrivateKeyAuthenticationMethod.KeyFiles" />
        <element api="P:Renci.SshNet.AuthenticationMethod.Username" />
        <element api="P:Renci.SshNet.AuthenticationMethod.ErrorMessage" />
        <element api="P:Renci.SshNet.AuthenticationMethod.AllowedAuthentications" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyAuthenticationMethod.#ctor(System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Authenticate(Renci.SshNet.Session)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.AuthenticationMethod.Authenticate(Renci.SshNet.Session)">
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.AuthenticationResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyAuthenticationMethod.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.PrivateKeyAuthenticationMethod.KeyFiles">
      <apidata name="KeyFiles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_KeyFiles" />
      <setter name="set_KeyFiles" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.PrivateKeyAuthenticationMethod.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.AuthenticationMethod.Name">
          <type api="T:Renci.SshNet.AuthenticationMethod" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyAuthenticationMethod" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.PrivateKeyConnectionInfo">
      <apidata name="PrivateKeyConnectionInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.Dispose" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.PrivateKeyConnectionInfo.Finalize" />
        <element api="P:Renci.SshNet.PrivateKeyConnectionInfo.KeyFiles" />
        <element api="M:Renci.SshNet.ConnectionInfo.Authenticate(Renci.SshNet.Session)" />
        <element api="P:Renci.SshNet.ConnectionInfo.KeyExchangeAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.Encryptions" />
        <element api="P:Renci.SshNet.ConnectionInfo.HmacAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.HostKeyAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.AuthenticationMethods" />
        <element api="P:Renci.SshNet.ConnectionInfo.CompressionAlgorithms" />
        <element api="P:Renci.SshNet.ConnectionInfo.ChannelRequests" />
        <element api="P:Renci.SshNet.ConnectionInfo.IsAuthenticated" />
        <element api="P:Renci.SshNet.ConnectionInfo.Host" />
        <element api="P:Renci.SshNet.ConnectionInfo.Port" />
        <element api="P:Renci.SshNet.ConnectionInfo.Username" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyType" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyHost" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyPort" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyUsername" />
        <element api="P:Renci.SshNet.ConnectionInfo.ProxyPassword" />
        <element api="P:Renci.SshNet.ConnectionInfo.Timeout" />
        <element api="P:Renci.SshNet.ConnectionInfo.RetryAttempts" />
        <element api="P:Renci.SshNet.ConnectionInfo.MaxSessions" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentKeyExchangeAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerEncryption" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientEncryption" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerHmacAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientHmacAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentHostKeyAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentServerCompressionAlgorithm" />
        <element api="P:Renci.SshNet.ConnectionInfo.ServerVersion" />
        <element api="P:Renci.SshNet.ConnectionInfo.ClientVersion" />
        <element api="P:Renci.SshNet.ConnectionInfo.CurrentClientCompressionAlgorithm" />
        <element api="E:Renci.SshNet.ConnectionInfo.AuthenticationBanner" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.Int32,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.#ctor(System.String,System.String,Renci.SshNet.ProxyTypes,System.String,System.Int32,System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyType">
          <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
        </parameter>
        <parameter name="proxyHost">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPort">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="proxyUsername">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="proxyPassword">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyConnectionInfo.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.PrivateKeyConnectionInfo.KeyFiles">
      <apidata name="KeyFiles" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_KeyFiles" />
      <setter name="set_KeyFiles" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyConnectionInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.PrivateKeyFile">
      <apidata name="PrivateKeyFile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.PrivateKeyFile.#ctor(System.IO.Stream)" />
        <element api="M:Renci.SshNet.PrivateKeyFile.#ctor(System.String)" />
        <element api="M:Renci.SshNet.PrivateKeyFile.#ctor(System.String,System.String)" />
        <element api="M:Renci.SshNet.PrivateKeyFile.#ctor(System.IO.Stream,System.String)" />
        <element api="M:Renci.SshNet.PrivateKeyFile.Dispose" />
        <element api="M:Renci.SshNet.PrivateKeyFile.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.PrivateKeyFile.Finalize" />
        <element api="P:Renci.SshNet.PrivateKeyFile.HostKey" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyFile.#ctor(System.IO.Stream)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="privateKey">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyFile.#ctor(System.IO.Stream,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="privateKey">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="passPhrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyFile.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyFile.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="passPhrase">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyFile.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyFile.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.PrivateKeyFile.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.PrivateKeyFile.HostKey">
      <apidata name="HostKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_HostKey" />
      <setter name="set_HostKey" />
      <returns>
        <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ProxyTypes">
      <apidata name="ProxyTypes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Renci.SshNet.ProxyTypes.None" />
        <element api="F:Renci.SshNet.ProxyTypes.Socks4" />
        <element api="F:Renci.SshNet.ProxyTypes.Socks5" />
        <element api="F:Renci.SshNet.ProxyTypes.Http" />
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.ProxyTypes.Http">
      <apidata name="Http" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.ProxyTypes.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.ProxyTypes.Socks4">
      <apidata name="Socks4" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.ProxyTypes.Socks5">
      <apidata name="Socks5" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ProxyTypes" ref="false" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ScpClient">
      <apidata name="ScpClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.ScpClient.#ctor(Renci.SshNet.ConnectionInfo)" />
        <element api="M:Renci.SshNet.ScpClient.#ctor(System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.ScpClient.#ctor(System.String,System.String,System.String)" />
        <element api="M:Renci.SshNet.ScpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.ScpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.ScpClient.Upload(System.IO.Stream,System.String)" />
        <element api="M:Renci.SshNet.ScpClient.Upload(System.IO.FileInfo,System.String)" />
        <element api="M:Renci.SshNet.ScpClient.Upload(System.IO.DirectoryInfo,System.String)" />
        <element api="M:Renci.SshNet.ScpClient.Download(System.String,System.IO.Stream)" />
        <element api="M:Renci.SshNet.ScpClient.Download(System.String,System.IO.FileInfo)" />
        <element api="M:Renci.SshNet.ScpClient.Download(System.String,System.IO.DirectoryInfo)" />
        <element api="M:Renci.SshNet.ScpClient.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.BaseClient.Dispose" />
        <element api="P:Renci.SshNet.ScpClient.OperationTimeout" />
        <element api="P:Renci.SshNet.ScpClient.BufferSize" />
        <element api="E:Renci.SshNet.ScpClient.Downloading" />
        <element api="E:Renci.SshNet.ScpClient.Uploading" />
        <element api="M:Renci.SshNet.BaseClient.Connect" />
        <element api="M:Renci.SshNet.BaseClient.Disconnect" />
        <element api="M:Renci.SshNet.BaseClient.SendKeepAlive" />
        <element api="M:Renci.SshNet.BaseClient.OnConnecting" />
        <element api="M:Renci.SshNet.BaseClient.OnConnected" />
        <element api="M:Renci.SshNet.BaseClient.OnDisconnecting" />
        <element api="M:Renci.SshNet.BaseClient.OnDisconnected" />
        <element api="M:Renci.SshNet.BaseClient.EnsureConnection" />
        <element api="M:Renci.SshNet.BaseClient.Finalize" />
        <element api="P:Renci.SshNet.BaseClient.Session" />
        <element api="P:Renci.SshNet.BaseClient.ConnectionInfo" />
        <element api="P:Renci.SshNet.BaseClient.IsConnected" />
        <element api="P:Renci.SshNet.BaseClient.KeepAliveInterval" />
        <element api="E:Renci.SshNet.BaseClient.ErrorOccurred" />
        <element api="E:Renci.SshNet.BaseClient.HostKeyReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.#ctor(Renci.SshNet.ConnectionInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="connectionInfo">
          <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.#ctor(System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ScpClient.BufferSize">
      <apidata name="BufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BufferSize" />
      <setter name="set_BufferSize" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.Download(System.String,System.IO.DirectoryInfo)">
      <apidata name="Download" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directoryName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="directoryInfo">
          <type api="T:System.IO.DirectoryInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.Download(System.String,System.IO.FileInfo)">
      <apidata name="Download" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileInfo">
          <type api="T:System.IO.FileInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.Download(System.String,System.IO.Stream)">
      <apidata name="Download" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destination">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.ScpClient.Downloading">
      <apidata name="Downloading" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Downloading" />
      <remover name="remove_Downloading" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ScpDownloadEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ScpDownloadEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ScpClient.OperationTimeout">
      <apidata name="OperationTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationTimeout" />
      <setter name="set_OperationTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.Upload(System.IO.DirectoryInfo,System.String)">
      <apidata name="Upload" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="directoryInfo">
          <type api="T:System.IO.DirectoryInfo" ref="true" />
        </parameter>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.Upload(System.IO.FileInfo,System.String)">
      <apidata name="Upload" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileInfo">
          <type api="T:System.IO.FileInfo" ref="true" />
        </parameter>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ScpClient.Upload(System.IO.Stream,System.String)">
      <apidata name="Upload" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="source">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.ScpClient.Uploading">
      <apidata name="Uploading" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Uploading" />
      <remover name="remove_Uploading" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ScpUploadEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ScpUploadEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ScpClient" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Session">
      <apidata name="Session" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="F:Renci.SshNet.Session.MAXIMUM_PACKET_SIZE" />
        <element api="F:Renci.SshNet.Session.MAXIMUM_PAYLOAD_SIZE" />
        <element api="M:Renci.SshNet.Session.Connect" />
        <element api="M:Renci.SshNet.Session.Disconnect" />
        <element api="M:Renci.SshNet.Session.OnDisconnectReceived(Renci.SshNet.Messages.Transport.DisconnectMessage)" />
        <element api="M:Renci.SshNet.Session.OnIgnoreReceived(Renci.SshNet.Messages.Transport.IgnoreMessage)" />
        <element api="M:Renci.SshNet.Session.OnUnimplementedReceived(Renci.SshNet.Messages.Transport.UnimplementedMessage)" />
        <element api="M:Renci.SshNet.Session.OnDebugReceived(Renci.SshNet.Messages.Transport.DebugMessage)" />
        <element api="M:Renci.SshNet.Session.OnServiceRequestReceived(Renci.SshNet.Messages.Transport.ServiceRequestMessage)" />
        <element api="M:Renci.SshNet.Session.OnServiceAcceptReceived(Renci.SshNet.Messages.Transport.ServiceAcceptMessage)" />
        <element api="M:Renci.SshNet.Session.OnKeyExchangeInitReceived(Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)" />
        <element api="M:Renci.SshNet.Session.OnNewKeysReceived(Renci.SshNet.Messages.Transport.NewKeysMessage)" />
        <element api="M:Renci.SshNet.Session.OnUserAuthenticationRequestReceived(Renci.SshNet.Messages.Authentication.RequestMessage)" />
        <element api="M:Renci.SshNet.Session.OnUserAuthenticationFailureReceived(Renci.SshNet.Messages.Authentication.FailureMessage)" />
        <element api="M:Renci.SshNet.Session.OnUserAuthenticationSuccessReceived(Renci.SshNet.Messages.Authentication.SuccessMessage)" />
        <element api="M:Renci.SshNet.Session.OnUserAuthenticationBannerReceived(Renci.SshNet.Messages.Authentication.BannerMessage)" />
        <element api="M:Renci.SshNet.Session.OnGlobalRequestReceived(Renci.SshNet.Messages.Connection.GlobalRequestMessage)" />
        <element api="M:Renci.SshNet.Session.OnRequestSuccessReceived(Renci.SshNet.Messages.Connection.RequestSuccessMessage)" />
        <element api="M:Renci.SshNet.Session.OnRequestFailureReceived(Renci.SshNet.Messages.Connection.RequestFailureMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelOpenReceived(Renci.SshNet.Messages.Connection.ChannelOpenMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelOpenConfirmationReceived(Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelOpenFailureReceived(Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelWindowAdjustReceived(Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelDataReceived(Renci.SshNet.Messages.Connection.ChannelDataMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelExtendedDataReceived(Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelEofReceived(Renci.SshNet.Messages.Connection.ChannelEofMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelCloseReceived(Renci.SshNet.Messages.Connection.ChannelCloseMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelRequestReceived(Renci.SshNet.Messages.Connection.ChannelRequestMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelSuccessReceived(Renci.SshNet.Messages.Connection.ChannelSuccessMessage)" />
        <element api="M:Renci.SshNet.Session.OnChannelFailureReceived(Renci.SshNet.Messages.Connection.ChannelFailureMessage)" />
        <element api="M:Renci.SshNet.Session.OnMessageReceived(Renci.SshNet.Messages.Message)" />
        <element api="M:Renci.SshNet.Session.RegisterMessage(System.String)" />
        <element api="M:Renci.SshNet.Session.UnRegisterMessage(System.String)" />
        <element api="M:Renci.SshNet.Session.Dispose" />
        <element api="M:Renci.SshNet.Session.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Session.Finalize" />
        <element api="P:Renci.SshNet.Session.SessionSemaphore" />
        <element api="P:Renci.SshNet.Session.IsConnected" />
        <element api="P:Renci.SshNet.Session.SessionId" />
        <element api="P:Renci.SshNet.Session.ClientInitMessage" />
        <element api="P:Renci.SshNet.Session.ServerVersion" />
        <element api="P:Renci.SshNet.Session.ClientVersion" />
        <element api="P:Renci.SshNet.Session.ConnectionInfo" />
        <element api="E:Renci.SshNet.Session.ErrorOccured" />
        <element api="E:Renci.SshNet.Session.Disconnected" />
        <element api="E:Renci.SshNet.Session.HostKeyReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Session.ClientInitMessage">
      <apidata name="ClientInitMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ClientInitMessage" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Message" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Session.ClientVersion">
      <apidata name="ClientVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ClientVersion" />
      <setter name="set_ClientVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.Connect">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Session.ConnectionInfo">
      <apidata name="ConnectionInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ConnectionInfo" />
      <setter name="set_ConnectionInfo" />
      <returns>
        <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.Disconnect">
      <apidata name="Disconnect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Session.Disconnected">
      <apidata name="Disconnected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disconnected" />
      <remover name="remove_Disconnected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Session.ErrorOccured">
      <apidata name="ErrorOccured" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ErrorOccured" />
      <remover name="remove_ErrorOccured" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Session.HostKeyReceived">
      <apidata name="HostKeyReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_HostKeyReceived" />
      <remover name="remove_HostKeyReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Session.IsConnected">
      <apidata name="IsConnected" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsConnected" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Session.MAXIMUM_PACKET_SIZE">
      <apidata name="MAXIMUM_PACKET_SIZE" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Session.MAXIMUM_PAYLOAD_SIZE">
      <apidata name="MAXIMUM_PAYLOAD_SIZE" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelCloseReceived(Renci.SshNet.Messages.Connection.ChannelCloseMessage)">
      <apidata name="OnChannelCloseReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelDataReceived(Renci.SshNet.Messages.Connection.ChannelDataMessage)">
      <apidata name="OnChannelDataReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelDataMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelEofReceived(Renci.SshNet.Messages.Connection.ChannelEofMessage)">
      <apidata name="OnChannelEofReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelEofMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelExtendedDataReceived(Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage)">
      <apidata name="OnChannelExtendedDataReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelFailureReceived(Renci.SshNet.Messages.Connection.ChannelFailureMessage)">
      <apidata name="OnChannelFailureReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelOpenConfirmationReceived(Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage)">
      <apidata name="OnChannelOpenConfirmationReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelOpenFailureReceived(Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage)">
      <apidata name="OnChannelOpenFailureReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelOpenReceived(Renci.SshNet.Messages.Connection.ChannelOpenMessage)">
      <apidata name="OnChannelOpenReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelRequestReceived(Renci.SshNet.Messages.Connection.ChannelRequestMessage)">
      <apidata name="OnChannelRequestReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelSuccessReceived(Renci.SshNet.Messages.Connection.ChannelSuccessMessage)">
      <apidata name="OnChannelSuccessReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnChannelWindowAdjustReceived(Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage)">
      <apidata name="OnChannelWindowAdjustReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnDebugReceived(Renci.SshNet.Messages.Transport.DebugMessage)">
      <apidata name="OnDebugReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.DebugMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnDisconnectReceived(Renci.SshNet.Messages.Transport.DisconnectMessage)">
      <apidata name="OnDisconnectReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnGlobalRequestReceived(Renci.SshNet.Messages.Connection.GlobalRequestMessage)">
      <apidata name="OnGlobalRequestReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnIgnoreReceived(Renci.SshNet.Messages.Transport.IgnoreMessage)">
      <apidata name="OnIgnoreReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.IgnoreMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnKeyExchangeInitReceived(Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
      <apidata name="OnKeyExchangeInitReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnMessageReceived(Renci.SshNet.Messages.Message)">
      <apidata name="OnMessageReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnNewKeysReceived(Renci.SshNet.Messages.Transport.NewKeysMessage)">
      <apidata name="OnNewKeysReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.NewKeysMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnRequestFailureReceived(Renci.SshNet.Messages.Connection.RequestFailureMessage)">
      <apidata name="OnRequestFailureReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.RequestFailureMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnRequestSuccessReceived(Renci.SshNet.Messages.Connection.RequestSuccessMessage)">
      <apidata name="OnRequestSuccessReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnServiceAcceptReceived(Renci.SshNet.Messages.Transport.ServiceAcceptMessage)">
      <apidata name="OnServiceAcceptReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnServiceRequestReceived(Renci.SshNet.Messages.Transport.ServiceRequestMessage)">
      <apidata name="OnServiceRequestReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnUnimplementedReceived(Renci.SshNet.Messages.Transport.UnimplementedMessage)">
      <apidata name="OnUnimplementedReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.UnimplementedMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnUserAuthenticationBannerReceived(Renci.SshNet.Messages.Authentication.BannerMessage)">
      <apidata name="OnUserAuthenticationBannerReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Authentication.BannerMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnUserAuthenticationFailureReceived(Renci.SshNet.Messages.Authentication.FailureMessage)">
      <apidata name="OnUserAuthenticationFailureReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Authentication.FailureMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnUserAuthenticationRequestReceived(Renci.SshNet.Messages.Authentication.RequestMessage)">
      <apidata name="OnUserAuthenticationRequestReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.OnUserAuthenticationSuccessReceived(Renci.SshNet.Messages.Authentication.SuccessMessage)">
      <apidata name="OnUserAuthenticationSuccessReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Authentication.SuccessMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.RegisterMessage(System.String)">
      <apidata name="RegisterMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Session.ServerVersion">
      <apidata name="ServerVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ServerVersion" />
      <setter name="set_ServerVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Session.SessionId">
      <apidata name="SessionId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_SessionId" />
      <setter name="set_SessionId" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Session.SessionSemaphore">
      <apidata name="SessionSemaphore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SessionSemaphore" />
      <returns>
        <type api="T:Renci.SshNet.Common.SemaphoreLight" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Session.UnRegisterMessage(System.String)">
      <apidata name="UnRegisterMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="messageName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Session" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.SftpClient">
      <apidata name="SftpClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.SftpClient.SynchronizeDirectories(System.String,System.String,System.String)" />
        <element api="M:Renci.SshNet.SftpClient.BeginSynchronizeDirectories(System.String,System.String,System.String,System.AsyncCallback,System.Object)" />
        <element api="M:Renci.SshNet.SftpClient.EndSynchronizeDirectories(System.IAsyncResult)" />
        <element api="M:Renci.SshNet.SftpClient.#ctor(Renci.SshNet.ConnectionInfo)" />
        <element api="M:Renci.SshNet.SftpClient.#ctor(System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.SftpClient.#ctor(System.String,System.String,System.String)" />
        <element api="M:Renci.SshNet.SftpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.SftpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.SftpClient.ChangeDirectory(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.ChangePermissions(System.String,System.Int16)" />
        <element api="M:Renci.SshNet.SftpClient.CreateDirectory(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.DeleteDirectory(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.DeleteFile(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.RenameFile(System.String,System.String)" />
        <element api="M:Renci.SshNet.SftpClient.RenameFile(System.String,System.String,System.Boolean)" />
        <element api="M:Renci.SshNet.SftpClient.SymbolicLink(System.String,System.String)" />
        <element api="M:Renci.SshNet.SftpClient.ListDirectory(System.String,System.Action{System.Int32})" />
        <element api="M:Renci.SshNet.SftpClient.BeginListDirectory(System.String,System.AsyncCallback,System.Object,System.Action{System.Int32})" />
        <element api="M:Renci.SshNet.SftpClient.EndListDirectory(System.IAsyncResult)" />
        <element api="M:Renci.SshNet.SftpClient.Get(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.Exists(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.DownloadFile(System.String,System.IO.Stream,System.Action{System.UInt64})" />
        <element api="M:Renci.SshNet.SftpClient.BeginDownloadFile(System.String,System.IO.Stream,System.AsyncCallback,System.Object,System.Action{System.UInt64})" />
        <element api="M:Renci.SshNet.SftpClient.EndDownloadFile(System.IAsyncResult)" />
        <element api="M:Renci.SshNet.SftpClient.UploadFile(System.IO.Stream,System.String,System.Action{System.UInt64})" />
        <element api="M:Renci.SshNet.SftpClient.UploadFile(System.IO.Stream,System.String,System.Boolean,System.Action{System.UInt64})" />
        <element api="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String,System.AsyncCallback,System.Object,System.Action{System.UInt64})" />
        <element api="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String,System.Boolean,System.AsyncCallback,System.Object,System.Action{System.UInt64})" />
        <element api="M:Renci.SshNet.SftpClient.EndUploadFile(System.IAsyncResult)" />
        <element api="M:Renci.SshNet.SftpClient.GetStatus(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:Renci.SshNet.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.AppendAllText(System.String,System.String)" />
        <element api="M:Renci.SshNet.SftpClient.AppendAllText(System.String,System.String,System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.AppendText(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.AppendText(System.String,System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.Create(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.Create(System.String,System.Int32)" />
        <element api="M:Renci.SshNet.SftpClient.CreateText(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.CreateText(System.String,System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.Delete(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.GetLastAccessTime(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.GetLastAccessTimeUtc(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.GetLastWriteTime(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.GetLastWriteTimeUtc(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.Open(System.String,System.IO.FileMode)" />
        <element api="M:Renci.SshNet.SftpClient.Open(System.String,System.IO.FileMode,System.IO.FileAccess)" />
        <element api="M:Renci.SshNet.SftpClient.OpenRead(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.OpenText(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.OpenWrite(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.ReadAllBytes(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.ReadAllLines(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.ReadAllLines(System.String,System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.ReadAllText(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.ReadAllText(System.String,System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.ReadLines(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.ReadLines(System.String,System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.SetLastAccessTime(System.String,System.DateTime)" />
        <element api="M:Renci.SshNet.SftpClient.SetLastAccessTimeUtc(System.String,System.DateTime)" />
        <element api="M:Renci.SshNet.SftpClient.SetLastWriteTime(System.String,System.DateTime)" />
        <element api="M:Renci.SshNet.SftpClient.SetLastWriteTimeUtc(System.String,System.DateTime)" />
        <element api="M:Renci.SshNet.SftpClient.WriteAllBytes(System.String,System.Byte[])" />
        <element api="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})" />
        <element api="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.String[])" />
        <element api="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.String[],System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.WriteAllText(System.String,System.String)" />
        <element api="M:Renci.SshNet.SftpClient.WriteAllText(System.String,System.String,System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SftpClient.GetAttributes(System.String)" />
        <element api="M:Renci.SshNet.SftpClient.SetAttributes(System.String,Renci.SshNet.Sftp.SftpFileAttributes)" />
        <element api="M:Renci.SshNet.SftpClient.OnConnected" />
        <element api="M:Renci.SshNet.SftpClient.OnDisconnecting" />
        <element api="M:Renci.SshNet.SftpClient.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.BaseClient.Dispose" />
        <element api="P:Renci.SshNet.SftpClient.OperationTimeout" />
        <element api="P:Renci.SshNet.SftpClient.BufferSize" />
        <element api="P:Renci.SshNet.SftpClient.WorkingDirectory" />
        <element api="P:Renci.SshNet.SftpClient.ProtocolVersion" />
        <element api="M:Renci.SshNet.BaseClient.Connect" />
        <element api="M:Renci.SshNet.BaseClient.Disconnect" />
        <element api="M:Renci.SshNet.BaseClient.SendKeepAlive" />
        <element api="M:Renci.SshNet.BaseClient.OnConnecting" />
        <element api="M:Renci.SshNet.BaseClient.OnDisconnected" />
        <element api="M:Renci.SshNet.BaseClient.EnsureConnection" />
        <element api="M:Renci.SshNet.BaseClient.Finalize" />
        <element api="P:Renci.SshNet.BaseClient.Session" />
        <element api="P:Renci.SshNet.BaseClient.ConnectionInfo" />
        <element api="P:Renci.SshNet.BaseClient.IsConnected" />
        <element api="P:Renci.SshNet.BaseClient.KeepAliveInterval" />
        <element api="E:Renci.SshNet.BaseClient.ErrorOccurred" />
        <element api="E:Renci.SshNet.BaseClient.HostKeyReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.#ctor(Renci.SshNet.ConnectionInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="connectionInfo">
          <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.#ctor(System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <apidata name="AppendAllLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.AppendAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <apidata name="AppendAllLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.AppendAllText(System.String,System.String)">
      <apidata name="AppendAllText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.AppendAllText(System.String,System.String,System.Text.Encoding)">
      <apidata name="AppendAllText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.AppendText(System.String)">
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.AppendText(System.String,System.Text.Encoding)">
      <apidata name="AppendText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.BeginDownloadFile(System.String,System.IO.Stream,System.AsyncCallback,System.Object,System.Action{System.UInt64})">
      <apidata name="BeginDownloadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="downloadCallback" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.UInt64" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.BeginListDirectory(System.String,System.AsyncCallback,System.Object,System.Action{System.Int32})">
      <apidata name="BeginListDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="listCallback" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.BeginSynchronizeDirectories(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
      <apidata name="BeginSynchronizeDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourcePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String,System.AsyncCallback,System.Object,System.Action{System.UInt64})">
      <apidata name="BeginUploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="uploadCallback" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.UInt64" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.BeginUploadFile(System.IO.Stream,System.String,System.Boolean,System.AsyncCallback,System.Object,System.Action{System.UInt64})">
      <apidata name="BeginUploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="canOverride">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="uploadCallback" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.UInt64" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SftpClient.BufferSize">
      <apidata name="BufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BufferSize" />
      <setter name="set_BufferSize" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ChangeDirectory(System.String)">
      <apidata name="ChangeDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ChangePermissions(System.String,System.Int16)">
      <apidata name="ChangePermissions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.Create(System.String)">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.Create(System.String,System.Int32)">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.CreateDirectory(System.String)">
      <apidata name="CreateDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.CreateText(System.String)">
      <apidata name="CreateText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.CreateText(System.String,System.Text.Encoding)">
      <apidata name="CreateText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.Delete(System.String)">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.DeleteDirectory(System.String)">
      <apidata name="DeleteDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.DeleteFile(System.String)">
      <apidata name="DeleteFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.DownloadFile(System.String,System.IO.Stream,System.Action{System.UInt64})">
      <apidata name="DownloadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="downloadCallback" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.UInt64" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.EndDownloadFile(System.IAsyncResult)">
      <apidata name="EndDownloadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.EndListDirectory(System.IAsyncResult)">
      <apidata name="EndListDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.EndSynchronizeDirectories(System.IAsyncResult)">
      <apidata name="EndSynchronizeDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.FileInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.EndUploadFile(System.IAsyncResult)">
      <apidata name="EndUploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.Exists(System.String)">
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.Get(System.String)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.GetAttributes(System.String)">
      <apidata name="GetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.GetLastAccessTime(System.String)">
      <apidata name="GetLastAccessTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.GetLastAccessTimeUtc(System.String)">
      <apidata name="GetLastAccessTimeUtc" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.GetLastWriteTime(System.String)">
      <apidata name="GetLastWriteTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.GetLastWriteTimeUtc(System.String)">
      <apidata name="GetLastWriteTimeUtc" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.GetStatus(System.String)">
      <apidata name="GetStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ListDirectory(System.String,System.Action{System.Int32})">
      <apidata name="ListDirectory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="listCallback" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.Int32" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.OnConnected">
      <apidata name="OnConnected" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.OnConnected">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.OnDisconnecting">
      <apidata name="OnDisconnecting" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.OnDisconnecting">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.Open(System.String,System.IO.FileMode)">
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.Open(System.String,System.IO.FileMode,System.IO.FileAccess)">
      <apidata name="Open" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:System.IO.FileMode" ref="false" />
        </parameter>
        <parameter name="access">
          <type api="T:System.IO.FileAccess" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.OpenRead(System.String)">
      <apidata name="OpenRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.OpenText(System.String)">
      <apidata name="OpenText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IO.StreamReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.OpenWrite(System.String)">
      <apidata name="OpenWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SftpClient.OperationTimeout">
      <apidata name="OperationTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OperationTimeout" />
      <setter name="set_OperationTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SftpClient.ProtocolVersion">
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ProtocolVersion" />
      <setter name="set_ProtocolVersion" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ReadAllBytes(System.String)">
      <apidata name="ReadAllBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ReadAllLines(System.String)">
      <apidata name="ReadAllLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ReadAllLines(System.String,System.Text.Encoding)">
      <apidata name="ReadAllLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ReadAllText(System.String)">
      <apidata name="ReadAllText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ReadAllText(System.String,System.Text.Encoding)">
      <apidata name="ReadAllText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ReadLines(System.String)">
      <apidata name="ReadLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.ReadLines(System.String,System.Text.Encoding)">
      <apidata name="ReadLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.RenameFile(System.String,System.String)">
      <apidata name="RenameFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="oldPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.RenameFile(System.String,System.String,System.Boolean)">
      <apidata name="RenameFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="oldPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="newPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="isPosix">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.SetAttributes(System.String,Renci.SshNet.Sftp.SftpFileAttributes)">
      <apidata name="SetAttributes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fileAttributes">
          <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.SetLastAccessTime(System.String,System.DateTime)">
      <apidata name="SetLastAccessTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lastAccessTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Note: This method currently throws NotImplementedException because it has not yet been implemented.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Renci.SshNet.SftpClient.SetLastAccessTimeUtc(System.String,System.DateTime)">
      <apidata name="SetLastAccessTimeUtc" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lastAccessTimeUtc">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Note: This method currently throws NotImplementedException because it has not yet been implemented.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Renci.SshNet.SftpClient.SetLastWriteTime(System.String,System.DateTime)">
      <apidata name="SetLastWriteTime" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lastWriteTime">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Note: This method currently throws NotImplementedException because it has not yet been implemented.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Renci.SshNet.SftpClient.SetLastWriteTimeUtc(System.String,System.DateTime)">
      <apidata name="SetLastWriteTimeUtc" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="lastWriteTimeUtc">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Note: This method currently throws NotImplementedException because it has not yet been implemented.</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Renci.SshNet.SftpClient.SymbolicLink(System.String,System.String)">
      <apidata name="SymbolicLink" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="linkPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.SynchronizeDirectories(System.String,System.String,System.String)">
      <apidata name="SynchronizeDirectories" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="sourcePath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="destinationPath">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="searchPattern">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.IO.FileInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.UploadFile(System.IO.Stream,System.String,System.Action{System.UInt64})">
      <apidata name="UploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="uploadCallback" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.UInt64" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.UploadFile(System.IO.Stream,System.String,System.Boolean,System.Action{System.UInt64})">
      <apidata name="UploadFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="canOverride">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="uploadCallback" optional="true">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.UInt64" ref="false" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SftpClient.WorkingDirectory">
      <apidata name="WorkingDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_WorkingDirectory" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.WriteAllBytes(System.String,System.Byte[])">
      <apidata name="WriteAllBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <apidata name="WriteAllLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.Collections.Generic.IEnumerable{System.String},System.Text.Encoding)">
      <apidata name="WriteAllLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.String[])">
      <apidata name="WriteAllLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.WriteAllLines(System.String,System.String[],System.Text.Encoding)">
      <apidata name="WriteAllLines" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.WriteAllText(System.String,System.String)">
      <apidata name="WriteAllText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SftpClient.WriteAllText(System.String,System.String,System.Text.Encoding)">
      <apidata name="WriteAllText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="contents">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SftpClient" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Shell">
      <apidata name="Shell" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Shell.Start" />
        <element api="M:Renci.SshNet.Shell.Stop" />
        <element api="M:Renci.SshNet.Shell.Dispose" />
        <element api="M:Renci.SshNet.Shell.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Shell.Finalize" />
        <element api="P:Renci.SshNet.Shell.IsStarted" />
        <element api="E:Renci.SshNet.Shell.Starting" />
        <element api="E:Renci.SshNet.Shell.Started" />
        <element api="E:Renci.SshNet.Shell.Stopping" />
        <element api="E:Renci.SshNet.Shell.Stopped" />
        <element api="E:Renci.SshNet.Shell.ErrorOccurred" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Shell.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Shell.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Shell.ErrorOccurred">
      <apidata name="ErrorOccurred" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ErrorOccurred" />
      <remover name="remove_ErrorOccurred" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Shell.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Shell.IsStarted">
      <apidata name="IsStarted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsStarted" />
      <setter name="set_IsStarted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Shell.Start">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Shell.Started">
      <apidata name="Started" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Started" />
      <remover name="remove_Started" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Shell.Starting">
      <apidata name="Starting" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Starting" />
      <remover name="remove_Starting" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Shell.Stop">
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Shell.Stopped">
      <apidata name="Stopped" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Stopped" />
      <remover name="remove_Stopped" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Shell.Stopping">
      <apidata name="Stopping" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Stopping" />
      <remover name="remove_Stopping" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.ShellStream">
      <apidata name="ShellStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.ShellStream.Flush" />
        <element api="M:Renci.SshNet.ShellStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.ShellStream.Read" />
        <element api="M:Renci.SshNet.ShellStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:Renci.SshNet.ShellStream.SetLength(System.Int64)" />
        <element api="M:Renci.SshNet.ShellStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.ShellStream.Write(System.String)" />
        <element api="M:Renci.SshNet.ShellStream.Expect(Renci.SshNet.ExpectAction[])" />
        <element api="M:Renci.SshNet.ShellStream.Expect(System.TimeSpan,Renci.SshNet.ExpectAction[])" />
        <element api="M:Renci.SshNet.ShellStream.Expect(System.String)" />
        <element api="M:Renci.SshNet.ShellStream.Expect(System.String,System.TimeSpan)" />
        <element api="M:Renci.SshNet.ShellStream.Expect(System.Text.RegularExpressions.Regex)" />
        <element api="M:Renci.SshNet.ShellStream.Expect(System.Text.RegularExpressions.Regex,System.TimeSpan)" />
        <element api="M:Renci.SshNet.ShellStream.BeginExpect(Renci.SshNet.ExpectAction[])" />
        <element api="M:Renci.SshNet.ShellStream.BeginExpect(System.AsyncCallback,Renci.SshNet.ExpectAction[])" />
        <element api="M:Renci.SshNet.ShellStream.BeginExpect(System.AsyncCallback,System.Object,Renci.SshNet.ExpectAction[])" />
        <element api="M:Renci.SshNet.ShellStream.BeginExpect(System.TimeSpan,System.AsyncCallback,System.Object,Renci.SshNet.ExpectAction[])" />
        <element api="M:Renci.SshNet.ShellStream.EndExpect(System.IAsyncResult)" />
        <element api="M:Renci.SshNet.ShellStream.ReadLine" />
        <element api="M:Renci.SshNet.ShellStream.ReadLine(System.TimeSpan)" />
        <element api="M:Renci.SshNet.ShellStream.WriteLine(System.String)" />
        <element api="M:Renci.SshNet.ShellStream.Dispose(System.Boolean)" />
        <element api="M:System.IO.Stream.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:Renci.SshNet.ShellStream.WaitHandle(System.Threading.WaitHandle)" />
        <element api="P:Renci.SshNet.ShellStream.DataAvailable" />
        <element api="P:Renci.SshNet.ShellStream.CanRead" />
        <element api="P:Renci.SshNet.ShellStream.CanSeek" />
        <element api="P:Renci.SshNet.ShellStream.CanWrite" />
        <element api="P:Renci.SshNet.ShellStream.Length" />
        <element api="P:Renci.SshNet.ShellStream.Position" />
        <element api="E:Renci.SshNet.ShellStream.DataReceived" />
        <element api="E:Renci.SshNet.ShellStream.ErrorOccurred" />
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle">
          <apidata name="CreateWaitHandle" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <apidata name="EndRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <apidata name="EndWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ReadByte">
          <apidata name="ReadByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)">
          <apidata name="WriteByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Byte" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant">
          <apidata name="ObjectInvariant" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.Stream.CanTimeout">
          <apidata name="CanTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTimeout" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.ReadTimeout">
          <apidata name="ReadTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ReadTimeout" />
          <setter name="set_ReadTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.WriteTimeout">
          <apidata name="WriteTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_WriteTimeout" />
          <setter name="set_WriteTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.BeginExpect(Renci.SshNet.ExpectAction[])">
      <apidata name="BeginExpect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expectActions" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.ExpectAction" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.BeginExpect(System.AsyncCallback,Renci.SshNet.ExpectAction[])">
      <apidata name="BeginExpect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="expectActions" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.ExpectAction" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.BeginExpect(System.AsyncCallback,System.Object,Renci.SshNet.ExpectAction[])">
      <apidata name="BeginExpect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="expectActions" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.ExpectAction" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.BeginExpect(System.TimeSpan,System.AsyncCallback,System.Object,Renci.SshNet.ExpectAction[])">
      <apidata name="BeginExpect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="expectActions" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.ExpectAction" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ShellStream.CanRead">
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ShellStream.CanSeek">
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ShellStream.CanWrite">
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ShellStream.DataAvailable">
      <apidata name="DataAvailable" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DataAvailable" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.ShellStream.DataReceived">
      <apidata name="DataReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DataReceived" />
      <remover name="remove_DataReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ShellDataEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ShellDataEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Dispose(System.Boolean)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.EndExpect(System.IAsyncResult)">
      <apidata name="EndExpect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.ShellStream.ErrorOccurred">
      <apidata name="ErrorOccurred" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ErrorOccurred" />
      <remover name="remove_ErrorOccurred" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Expect(Renci.SshNet.ExpectAction[])">
      <apidata name="Expect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="expectActions" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.ExpectAction" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Expect(System.String)">
      <apidata name="Expect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Expect(System.String,System.TimeSpan)">
      <apidata name="Expect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Expect(System.Text.RegularExpressions.Regex)">
      <apidata name="Expect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="regex">
          <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Expect(System.Text.RegularExpressions.Regex,System.TimeSpan)">
      <apidata name="Expect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="regex">
          <type api="T:System.Text.RegularExpressions.Regex" ref="true" />
        </parameter>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Expect(System.TimeSpan,Renci.SshNet.ExpectAction[])">
      <apidata name="Expect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
        <parameter name="expectActions" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.ExpectAction" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ShellStream.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.ShellStream.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Read">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Read(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.ReadLine">
      <apidata name="ReadLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.ReadLine(System.TimeSpan)">
      <apidata name="ReadLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="timeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.SetLength(System.Int64)">
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.WaitHandle(System.Threading.WaitHandle)">
      <apidata name="WaitHandle" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="waitHandle">
          <type api="T:System.Threading.WaitHandle" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.Write(System.String)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.ShellStream.WriteLine(System.String)">
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="line">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.SshClient">
      <apidata name="SshClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.SshClient.#ctor(Renci.SshNet.ConnectionInfo)" />
        <element api="M:Renci.SshNet.SshClient.#ctor(System.String,System.Int32,System.String,System.String)" />
        <element api="M:Renci.SshNet.SshClient.#ctor(System.String,System.String,System.String)" />
        <element api="M:Renci.SshNet.SshClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.SshClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])" />
        <element api="M:Renci.SshNet.SshClient.OnDisconnecting" />
        <element api="M:Renci.SshNet.SshClient.AddForwardedPort(Renci.SshNet.ForwardedPort)" />
        <element api="M:Renci.SshNet.SshClient.RemoveForwardedPort(Renci.SshNet.ForwardedPort)" />
        <element api="M:Renci.SshNet.SshClient.CreateCommand(System.String)" />
        <element api="M:Renci.SshNet.SshClient.CreateCommand(System.String,System.Text.Encoding)" />
        <element api="M:Renci.SshNet.SshClient.RunCommand(System.String)" />
        <element api="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32},System.Int32)" />
        <element api="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})" />
        <element api="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream)" />
        <element api="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32},System.Int32)" />
        <element api="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})" />
        <element api="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream)" />
        <element api="M:Renci.SshNet.SshClient.CreateShellStream(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32)" />
        <element api="M:Renci.SshNet.SshClient.CreateShellStream(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})" />
        <element api="M:Renci.SshNet.SshClient.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.BaseClient.Dispose" />
        <element api="P:Renci.SshNet.SshClient.ForwardedPorts" />
        <element api="M:Renci.SshNet.BaseClient.Connect" />
        <element api="M:Renci.SshNet.BaseClient.Disconnect" />
        <element api="M:Renci.SshNet.BaseClient.SendKeepAlive" />
        <element api="M:Renci.SshNet.BaseClient.OnConnecting" />
        <element api="M:Renci.SshNet.BaseClient.OnConnected" />
        <element api="M:Renci.SshNet.BaseClient.OnDisconnected" />
        <element api="M:Renci.SshNet.BaseClient.EnsureConnection" />
        <element api="M:Renci.SshNet.BaseClient.Finalize" />
        <element api="P:Renci.SshNet.BaseClient.Session" />
        <element api="P:Renci.SshNet.BaseClient.ConnectionInfo" />
        <element api="P:Renci.SshNet.BaseClient.IsConnected" />
        <element api="P:Renci.SshNet.BaseClient.KeepAliveInterval" />
        <element api="E:Renci.SshNet.BaseClient.ErrorOccurred" />
        <element api="E:Renci.SshNet.BaseClient.HostKeyReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.#ctor(Renci.SshNet.ConnectionInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="connectionInfo">
          <type api="T:Renci.SshNet.ConnectionInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.#ctor(System.String,System.Int32,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.#ctor(System.String,System.Int32,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.#ctor(System.String,System.String,Renci.SshNet.PrivateKeyFile[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyFiles" params="true">
          <arrayOf rank="1">
            <type api="T:Renci.SshNet.PrivateKeyFile" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.AddForwardedPort(Renci.SshNet.ForwardedPort)">
      <apidata name="AddForwardedPort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="port">
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateCommand(System.String)">
      <apidata name="CreateCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commandText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateCommand(System.String,System.Text.Encoding)">
      <apidata name="CreateCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commandText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream)">
      <apidata name="CreateShell" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="extendedOutput">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
      <apidata name="CreateShell" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="extendedOutput">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="terminalName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="terminalModes">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateShell(System.IO.Stream,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32},System.Int32)">
      <apidata name="CreateShell" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="input">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="extendedOutput">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="terminalName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="terminalModes">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream)">
      <apidata name="CreateShell" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="extendedOutput">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
      <apidata name="CreateShell" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="extendedOutput">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="terminalName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="terminalModes">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateShell(System.Text.Encoding,System.String,System.IO.Stream,System.IO.Stream,System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32},System.Int32)">
      <apidata name="CreateShell" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
        <parameter name="input">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="extendedOutput">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="terminalName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="terminalModes">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Shell" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateShellStream(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32)">
      <apidata name="CreateShellStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="terminalName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.CreateShellStream(System.String,System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int32,System.Collections.Generic.IDictionary{Renci.SshNet.Common.TerminalModes,System.UInt32})">
      <apidata name="CreateShellStream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="terminalName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="columns">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="rows">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="width">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="height">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="terminalModeValues">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
              <type api="T:System.UInt32" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.ShellStream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.Dispose(System.Boolean)">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SshClient.ForwardedPorts">
      <apidata name="ForwardedPorts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ForwardedPorts" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.OnDisconnecting">
      <apidata name="OnDisconnecting" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.BaseClient.OnDisconnecting">
          <type api="T:Renci.SshNet.BaseClient" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.RemoveForwardedPort(Renci.SshNet.ForwardedPort)">
      <apidata name="RemoveForwardedPort" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="port">
          <type api="T:Renci.SshNet.ForwardedPort" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshClient.RunCommand(System.String)">
      <apidata name="RunCommand" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commandText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshClient" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.SshCommand">
      <apidata name="SshCommand" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.SshCommand.BeginExecute(System.AsyncCallback,System.Object)" />
        <element api="M:Renci.SshNet.SshCommand.BeginExecute(System.String,System.AsyncCallback,System.Object)" />
        <element api="M:Renci.SshNet.SshCommand.EndExecute(System.IAsyncResult)" />
        <element api="M:Renci.SshNet.SshCommand.Execute" />
        <element api="M:Renci.SshNet.SshCommand.Execute(System.String)" />
        <element api="M:Renci.SshNet.SshCommand.CancelAsync" />
        <element api="M:Renci.SshNet.SshCommand.Dispose" />
        <element api="M:Renci.SshNet.SshCommand.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.SshCommand.Finalize" />
        <element api="P:Renci.SshNet.SshCommand.CommandText" />
        <element api="P:Renci.SshNet.SshCommand.CommandTimeout" />
        <element api="P:Renci.SshNet.SshCommand.ExitStatus" />
        <element api="P:Renci.SshNet.SshCommand.OutputStream" />
        <element api="P:Renci.SshNet.SshCommand.ExtendedOutputStream" />
        <element api="P:Renci.SshNet.SshCommand.Result" />
        <element api="P:Renci.SshNet.SshCommand.Error" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.BeginExecute(System.AsyncCallback,System.Object)">
      <apidata name="BeginExecute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.BeginExecute(System.String,System.AsyncCallback,System.Object)">
      <apidata name="BeginExecute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commandText">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.CancelAsync">
      <apidata name="CancelAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SshCommand.CommandText">
      <apidata name="CommandText" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_CommandText" />
      <setter name="set_CommandText" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SshCommand.CommandTimeout">
      <apidata name="CommandTimeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandTimeout" />
      <setter name="set_CommandTimeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.EndExecute(System.IAsyncResult)">
      <apidata name="EndExecute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SshCommand.Error">
      <apidata name="Error" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Error" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.Execute">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.Execute(System.String)">
      <apidata name="Execute" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="commandText">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SshCommand.ExitStatus">
      <apidata name="ExitStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ExitStatus" />
      <setter name="set_ExitStatus" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SshCommand.ExtendedOutputStream">
      <apidata name="ExtendedOutputStream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ExtendedOutputStream" />
      <setter name="set_ExtendedOutputStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.SshCommand.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SshCommand.OutputStream">
      <apidata name="OutputStream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_OutputStream" />
      <setter name="set_OutputStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.SshCommand.Result">
      <apidata name="Result" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Result" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet" />
        <type api="T:Renci.SshNet.SshCommand" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Common">
      <apidata name="Renci.SshNet.Common" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Common.ASCIIEncoding" />
        <element api="T:Renci.SshNet.Common.AsyncResult" />
        <element api="T:Renci.SshNet.Common.AsyncResult`1" />
        <element api="T:Renci.SshNet.Common.AuthenticationEventArgs" />
        <element api="T:Renci.SshNet.Common.AuthenticationBannerEventArgs" />
        <element api="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs" />
        <element api="T:Renci.SshNet.Common.AuthenticationPrompt" />
        <element api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" />
        <element api="T:Renci.SshNet.Common.BigInteger" />
        <element api="T:Renci.SshNet.Common.SshException" />
        <element api="T:Renci.SshNet.Common.ProxyException" />
        <element api="T:Renci.SshNet.Common.HostKeyEventArgs" />
        <element api="T:Renci.SshNet.Common.NetConfServerException" />
        <element api="T:Renci.SshNet.Common.DerData" />
        <element api="T:Renci.SshNet.Common.ExceptionEventArgs" />
        <element api="T:Renci.SshNet.Common.ObjectIdentifier" />
        <element api="T:Renci.SshNet.Common.PipeStream" />
        <element api="T:Renci.SshNet.Common.PortForwardEventArgs" />
        <element api="T:Renci.SshNet.Common.ScpDownloadEventArgs" />
        <element api="T:Renci.SshNet.Common.ScpException" />
        <element api="T:Renci.SshNet.Common.ScpUploadEventArgs" />
        <element api="T:Renci.SshNet.Common.SemaphoreLight" />
        <element api="T:Renci.SshNet.Common.SftpPathNotFoundException" />
        <element api="T:Renci.SshNet.Common.SftpPermissionDeniedException" />
        <element api="T:Renci.SshNet.Common.ShellDataEventArgs" />
        <element api="T:Renci.SshNet.Common.SshAuthenticationException" />
        <element api="T:Renci.SshNet.Common.SshConnectionException" />
        <element api="T:Renci.SshNet.Common.SshData" />
        <element api="T:Renci.SshNet.Common.SshOperationTimeoutException" />
        <element api="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException" />
        <element api="T:Renci.SshNet.Common.TerminalModes" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Common.ASCIIEncoding">
      <apidata name="ASCIIEncoding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Text.Encoding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.ASCIIEncoding.#ctor" />
        <element api="M:Renci.SshNet.Common.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)" />
        <element api="M:System.Text.Encoding.GetByteCount(System.Char[])">
          <apidata name="GetByteCount" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="chars">
              <arrayOf rank="1">
                <type api="T:System.Char" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetByteCount(System.String)">
          <apidata name="GetByteCount" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="s">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetByteCount(System.Char*,System.Int32)">
          <apidata name="GetByteCount" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="chars">
              <pointerTo>
                <type api="T:System.Char" ref="false" />
              </pointerTo>
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
            <attribute>
              <type api="T:System.CLSCompliantAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:Renci.SshNet.Common.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Text.Encoding.GetBytes(System.Char[])">
          <apidata name="GetBytes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="chars">
              <arrayOf rank="1">
                <type api="T:System.Char" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32)">
          <apidata name="GetBytes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="chars">
              <arrayOf rank="1">
                <type api="T:System.Char" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetBytes(System.String)">
          <apidata name="GetBytes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="s">
              <type api="T:System.String" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetBytes(System.String,System.Int32,System.Int32,System.Byte[],System.Int32)">
          <apidata name="GetBytes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="s">
              <type api="T:System.String" ref="true" />
            </parameter>
            <parameter name="charIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="charCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="bytes">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="byteIndex">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetBytes(System.Char*,System.Int32,System.Byte*,System.Int32)">
          <apidata name="GetBytes" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="chars">
              <pointerTo>
                <type api="T:System.Char" ref="false" />
              </pointerTo>
            </parameter>
            <parameter name="charCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="bytes">
              <pointerTo>
                <type api="T:System.Byte" ref="false" />
              </pointerTo>
            </parameter>
            <parameter name="byteCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
            <attribute>
              <type api="T:System.CLSCompliantAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:Renci.SshNet.Common.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Text.Encoding.GetCharCount(System.Byte[])">
          <apidata name="GetCharCount" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="bytes">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetCharCount(System.Byte*,System.Int32)">
          <apidata name="GetCharCount" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="bytes">
              <pointerTo>
                <type api="T:System.Byte" ref="false" />
              </pointerTo>
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
            <attribute>
              <type api="T:System.CLSCompliantAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:Renci.SshNet.Common.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)" />
        <element api="M:System.Text.Encoding.GetChars(System.Byte[])">
          <apidata name="GetChars" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="bytes">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Char" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32)">
          <apidata name="GetChars" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="bytes">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Char" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetChars(System.Byte*,System.Int32,System.Char*,System.Int32)">
          <apidata name="GetChars" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="bytes">
              <pointerTo>
                <type api="T:System.Byte" ref="false" />
              </pointerTo>
            </parameter>
            <parameter name="byteCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="chars">
              <pointerTo>
                <type api="T:System.Char" ref="false" />
              </pointerTo>
            </parameter>
            <parameter name="charCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
            <attribute>
              <type api="T:System.CLSCompliantAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:Renci.SshNet.Common.ASCIIEncoding.GetMaxByteCount(System.Int32)" />
        <element api="M:Renci.SshNet.Common.ASCIIEncoding.GetMaxCharCount(System.Int32)" />
        <element api="M:System.Text.Encoding.GetPreamble">
          <apidata name="GetPreamble" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.Clone">
          <apidata name="Clone" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <implements>
            <member api="M:System.ICloneable.Clone">
              <type api="T:System.ICloneable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Text.Encoding.IsAlwaysNormalized">
          <apidata name="IsAlwaysNormalized" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Text.Encoding.IsAlwaysNormalized(System.Text.NormalizationForm)">
          <apidata name="IsAlwaysNormalized" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="form">
              <type api="T:System.Text.NormalizationForm" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Text.Encoding.GetDecoder">
          <apidata name="GetDecoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Text.Decoder" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetEncoder">
          <apidata name="GetEncoder" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Text.Encoder" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetString(System.Byte[])">
          <apidata name="GetString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="bytes">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetString(System.Byte[],System.Int32,System.Int32)">
          <apidata name="GetString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="bytes">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="index">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="value">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Text.Encoding.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.BodyName">
          <apidata name="BodyName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_BodyName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.EncodingName">
          <apidata name="EncodingName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_EncodingName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.HeaderName">
          <apidata name="HeaderName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HeaderName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.WebName">
          <apidata name="WebName" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_WebName" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.WindowsCodePage">
          <apidata name="WindowsCodePage" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_WindowsCodePage" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.IsBrowserDisplay">
          <apidata name="IsBrowserDisplay" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsBrowserDisplay" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.IsBrowserSave">
          <apidata name="IsBrowserSave" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsBrowserSave" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.IsMailNewsDisplay">
          <apidata name="IsMailNewsDisplay" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsMailNewsDisplay" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.IsMailNewsSave">
          <apidata name="IsMailNewsSave" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsMailNewsSave" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="P:System.Text.Encoding.IsSingleByte">
          <apidata name="IsSingleByte" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_IsSingleByte" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Text.Encoding.EncoderFallback">
          <apidata name="EncoderFallback" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_EncoderFallback" />
          <setter name="set_EncoderFallback" />
          <returns>
            <type api="T:System.Text.EncoderFallback" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Text.Encoding.DecoderFallback">
          <apidata name="DecoderFallback" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_DecoderFallback" />
          <setter name="set_DecoderFallback" />
          <returns>
            <type api="T:System.Text.DecoderFallback" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Text.Encoding.IsReadOnly">
          <apidata name="IsReadOnly" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" />
          <getter name="get_IsReadOnly" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.Text.Encoding.CodePage">
          <apidata name="CodePage" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CodePage" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Text" />
            <type api="T:System.Text.Encoding" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ASCIIEncoding.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ASCIIEncoding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ASCIIEncoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
      <apidata name="GetByteCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Text.Encoding.GetByteCount(System.Char[],System.Int32,System.Int32)">
          <type api="T:System.Text.Encoding" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="chars">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ASCIIEncoding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ASCIIEncoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Text.Encoding.GetBytes(System.Char[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:System.Text.Encoding" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="chars">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="charIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="charCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="byteIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ASCIIEncoding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ASCIIEncoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
      <apidata name="GetCharCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Text.Encoding.GetCharCount(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Text.Encoding" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ASCIIEncoding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ASCIIEncoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
      <apidata name="GetChars" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Text.Encoding.GetChars(System.Byte[],System.Int32,System.Int32,System.Char[],System.Int32)">
          <type api="T:System.Text.Encoding" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="byteIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="byteCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="chars">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="charIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ASCIIEncoding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ASCIIEncoding.GetMaxByteCount(System.Int32)">
      <apidata name="GetMaxByteCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Text.Encoding.GetMaxByteCount(System.Int32)">
          <type api="T:System.Text.Encoding" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="charCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ASCIIEncoding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ASCIIEncoding.GetMaxCharCount(System.Int32)">
      <apidata name="GetMaxCharCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Text.Encoding.GetMaxCharCount(System.Int32)">
          <type api="T:System.Text.Encoding" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="byteCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ASCIIEncoding" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.AsyncResult">
      <apidata name="AsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Common.AsyncResult`1" ref="true" />
          <type api="T:Renci.SshNet.Sftp.SftpDownloadAsyncResult" ref="true" />
          <type api="T:Renci.SshNet.Sftp.SftpUploadAsyncResult" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IAsyncResult" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Common.AsyncResult.#ctor(System.AsyncCallback,System.Object)" />
        <element api="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult.EndInvoke" />
        <element api="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncState" />
        <element api="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle" />
        <element api="P:Renci.SshNet.Common.AsyncResult.IsCompleted" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AsyncResult.AsyncState">
      <apidata name="AsyncState" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AsyncState" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncState">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle">
      <apidata name="AsyncWaitHandle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AsyncWaitHandle" />
      <returns>
        <type api="T:System.Threading.WaitHandle" ref="true" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.AsyncWaitHandle">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously">
      <apidata name="CompletedSynchronously" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CompletedSynchronously" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.CompletedSynchronously">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AsyncResult.EndInvoke">
      <apidata name="EndInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled">
      <apidata name="EndInvokeCalled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_EndInvokeCalled" />
      <setter name="set_EndInvokeCalled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AsyncResult.IsCompleted">
      <apidata name="IsCompleted" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsCompleted" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.IAsyncResult.IsCompleted">
          <type api="T:System.IAsyncResult" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)">
      <apidata name="SetAsCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="completedSynchronously">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.AsyncResult`1">
      <apidata name="AsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult" ref="true" />
          <type api="T:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult" ref="true" />
        </descendents>
      </family>
      <templates>
        <template name="TResult" />
      </templates>
      <elements>
        <element api="M:Renci.SshNet.Common.AsyncResult`1.#ctor(System.AsyncCallback,System.Object)" />
        <element api="M:Renci.SshNet.Common.AsyncResult`1.SetAsCompleted(`0,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult`1.EndInvoke" />
        <element api="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncState" />
        <element api="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle" />
        <element api="P:Renci.SshNet.Common.AsyncResult.IsCompleted" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AsyncResult`1.#ctor(System.AsyncCallback,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AsyncResult`1.EndInvoke">
      <apidata name="EndInvoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <template name="TResult" index="0" api="T:Renci.SshNet.Common.AsyncResult`1" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AsyncResult`1.SetAsCompleted(`0,System.Boolean)">
      <apidata name="SetAsCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="result">
          <template name="TResult" index="0" api="T:Renci.SshNet.Common.AsyncResult`1" />
        </parameter>
        <parameter name="completedSynchronously">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AsyncResult`1" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.AuthenticationBannerEventArgs">
      <apidata name="AuthenticationBannerEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.AuthenticationEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.AuthenticationBannerEventArgs.#ctor(System.String,System.String,System.String)" />
        <element api="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.BannerMessage" />
        <element api="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.Language" />
        <element api="P:Renci.SshNet.Common.AuthenticationEventArgs.Username" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AuthenticationBannerEventArgs.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="language">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationBannerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.BannerMessage">
      <apidata name="BannerMessage" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_BannerMessage" />
      <setter name="set_BannerMessage" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationBannerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationBannerEventArgs.Language">
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Language" />
      <setter name="set_Language" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationBannerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.AuthenticationEventArgs">
      <apidata name="AuthenticationEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Common.AuthenticationBannerEventArgs" ref="true" />
          <type api="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs" ref="true" />
          <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.AuthenticationEventArgs.#ctor(System.String)" />
        <element api="P:Renci.SshNet.Common.AuthenticationEventArgs.Username" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AuthenticationEventArgs.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationEventArgs.Username">
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs">
      <apidata name="AuthenticationPasswordChangeEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.AuthenticationEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.#ctor(System.String)" />
        <element api="P:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.NewPassword" />
        <element api="P:Renci.SshNet.Common.AuthenticationEventArgs.Username" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs.NewPassword">
      <apidata name="NewPassword" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NewPassword" />
      <setter name="set_NewPassword" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPasswordChangeEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.AuthenticationPrompt">
      <apidata name="AuthenticationPrompt" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.AuthenticationPrompt.#ctor(System.Int32,System.Boolean,System.String)" />
        <element api="P:Renci.SshNet.Common.AuthenticationPrompt.Id" />
        <element api="P:Renci.SshNet.Common.AuthenticationPrompt.IsEchoed" />
        <element api="P:Renci.SshNet.Common.AuthenticationPrompt.Request" />
        <element api="P:Renci.SshNet.Common.AuthenticationPrompt.Response" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AuthenticationPrompt.#ctor(System.Int32,System.Boolean,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="isEchoed">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="request">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPrompt" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationPrompt.Id">
      <apidata name="Id" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Id" />
      <setter name="set_Id" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPrompt" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationPrompt.IsEchoed">
      <apidata name="IsEchoed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsEchoed" />
      <setter name="set_IsEchoed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPrompt" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationPrompt.Request">
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPrompt" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationPrompt.Response">
      <apidata name="Response" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Response" />
      <setter name="set_Response" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPrompt" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.AuthenticationPromptEventArgs">
      <apidata name="AuthenticationPromptEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.AuthenticationEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.AuthenticationPromptEventArgs.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Renci.SshNet.Common.AuthenticationPrompt})" />
        <element api="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Language" />
        <element api="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Instruction" />
        <element api="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Prompts" />
        <element api="P:Renci.SshNet.Common.AuthenticationEventArgs.Username" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.AuthenticationPromptEventArgs.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Renci.SshNet.Common.AuthenticationPrompt})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="instruction">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="language">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="prompts">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Renci.SshNet.Common.AuthenticationPrompt" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Instruction">
      <apidata name="Instruction" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Instruction" />
      <setter name="set_Instruction" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Language">
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Language" />
      <setter name="set_Language" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.AuthenticationPromptEventArgs.Prompts">
      <apidata name="Prompts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Prompts" />
      <setter name="set_Prompts" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.AuthenticationPrompt" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.AuthenticationPromptEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.BigInteger">
      <apidata name="BigInteger" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <implements>
        <type api="T:System.IComparable" ref="true" />
        <type api="T:System.IFormattable" ref="true" />
        <type api="T:System.IComparable`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
          </specialization>
        </type>
        <type api="T:System.IEquatable`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int16,System.UInt32[])" />
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int32)" />
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.Double)" />
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.Single)" />
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.Decimal)" />
        <element api="M:Renci.SshNet.Common.BigInteger.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int32" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt32" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int16" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt16" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Byte" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.SByte" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int64" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt64" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Double" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Single" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Decimal" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Double)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Single)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Decimal)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int32)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt32)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int16)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt16)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Byte)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.SByte)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int64)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt64)~Renci.SshNet.Common.BigInteger" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Addition(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Subtraction(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Multiply(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Division(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Modulus(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_UnaryNegation(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_UnaryPlus(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Increment(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Decrement(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_BitwiseAnd(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_BitwiseOr(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_ExclusiveOr(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_OnesComplement(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LeftShift(Renci.SshNet.Common.BigInteger,System.Int32)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_RightShift(Renci.SshNet.Common.BigInteger,System.Int32)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThan(System.Int64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThan(System.UInt64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(System.Int64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(System.UInt64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(System.Int64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(System.UInt64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(System.Int64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(System.UInt64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Equality(System.Int64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Equality(System.UInt64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Inequality(System.Int64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.op_Inequality(System.UInt64,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Abs(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Add(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.CompareTo(System.Object)" />
        <element api="M:Renci.SshNet.Common.BigInteger.CompareTo(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.CompareTo(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.CompareTo(System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Random(System.Int32)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Divide(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.DivRem(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger@)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Equals(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Equals(System.Int64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Equals(System.Object)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Equals(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.BigInteger.GetHashCode" />
        <element api="M:Renci.SshNet.Common.BigInteger.GreatestCommonDivisor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Log(Renci.SshNet.Common.BigInteger,System.Double)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Log(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Log10(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Max(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Min(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.ModPow(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.ModInverse(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.PositiveMod(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Multiply(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Negate(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.IFormatProvider)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Pow(Renci.SshNet.Common.BigInteger,System.Int32)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Remainder(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Subtract(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.BigInteger.ToByteArray" />
        <element api="M:Renci.SshNet.Common.BigInteger.ToString" />
        <element api="M:Renci.SshNet.Common.BigInteger.ToString(System.IFormatProvider)" />
        <element api="M:Renci.SshNet.Common.BigInteger.ToString(System.String)" />
        <element api="M:Renci.SshNet.Common.BigInteger.ToString(System.String,System.IFormatProvider)" />
        <element api="M:Renci.SshNet.Common.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.Globalization.CultureInfo,Renci.SshNet.Common.BigInteger@)" />
        <element api="M:Renci.SshNet.Common.BigInteger.TryParse(System.String,Renci.SshNet.Common.BigInteger@)" />
        <element api="M:Renci.SshNet.Common.BigInteger.Compare(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="P:Renci.SshNet.Common.BigInteger.BitLength" />
        <element api="P:Renci.SshNet.Common.BigInteger.IsEven" />
        <element api="P:Renci.SshNet.Common.BigInteger.IsOne" />
        <element api="P:Renci.SshNet.Common.BigInteger.IsPowerOfTwo" />
        <element api="P:Renci.SshNet.Common.BigInteger.IsZero" />
        <element api="P:Renci.SshNet.Common.BigInteger.MinusOne" />
        <element api="P:Renci.SshNet.Common.BigInteger.One" />
        <element api="P:Renci.SshNet.Common.BigInteger.Sign" />
        <element api="P:Renci.SshNet.Common.BigInteger.Zero" />
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.Decimal)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.Double)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int16,System.UInt32[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="sign">
          <type api="T:System.Int16" ref="false" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.UInt32" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.Int64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.Single)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.#ctor(System.UInt64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Abs(Renci.SshNet.Common.BigInteger)">
      <apidata name="Abs" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Add(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.BitLength">
      <apidata name="BitLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BitLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Compare(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Compare" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.CompareTo(Renci.SshNet.Common.BigInteger)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable`1.CompareTo(`0)">
          <type api="T:System.IComparable`1" ref="true">
            <specialization>
              <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.CompareTo(System.Int64)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.CompareTo(System.Object)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IComparable.CompareTo(System.Object)">
          <type api="T:System.IComparable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.CompareTo(System.UInt64)">
      <apidata name="CompareTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Divide(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Divide" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dividend">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="divisor">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.DivRem(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger@)">
      <apidata name="DivRem" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dividend">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="divisor">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="remainder" out="true">
          <referenceTo>
            <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Equals(Renci.SshNet.Common.BigInteger)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.IEquatable`1.Equals(`0)">
          <type api="T:System.IEquatable`1" ref="true">
            <specialization>
              <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Equals(System.Int64)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Equals(System.Object)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.Equals(System.Object)">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="obj">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Equals(System.UInt64)">
      <apidata name="Equals" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="other">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.GetHashCode">
      <apidata name="GetHashCode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.GetHashCode">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.GreatestCommonDivisor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="GreatestCommonDivisor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.IsEven">
      <apidata name="IsEven" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEven" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.IsOne">
      <apidata name="IsOne" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsOne" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.IsPowerOfTwo">
      <apidata name="IsPowerOfTwo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsPowerOfTwo" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.IsZero">
      <apidata name="IsZero" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsZero" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Log(Renci.SshNet.Common.BigInteger)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Log(Renci.SshNet.Common.BigInteger,System.Double)">
      <apidata name="Log" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="baseValue">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Log10(Renci.SshNet.Common.BigInteger)">
      <apidata name="Log10" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Max(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Max" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Min(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Min" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.MinusOne">
      <apidata name="MinusOne" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MinusOne" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.ModInverse(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="ModInverse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bi">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="modulus">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.ModPow(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="ModPow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="exponent">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="modulus">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Multiply(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Multiply" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Negate(Renci.SshNet.Common.BigInteger)">
      <apidata name="Negate" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.One">
      <apidata name="One" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_One" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Addition(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Addition" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_BitwiseAnd(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="BitwiseAnd" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_BitwiseOr(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="BitwiseOr" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Decrement(Renci.SshNet.Common.BigInteger)">
      <apidata name="Decrement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Division(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Division" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dividend">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="divisor">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,System.Int64)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Equality(Renci.SshNet.Common.BigInteger,System.UInt64)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Equality(System.Int64,Renci.SshNet.Common.BigInteger)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Equality(System.UInt64,Renci.SshNet.Common.BigInteger)">
      <apidata name="Equality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_ExclusiveOr(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="ExclusiveOr" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Single">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Single" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt64">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int32">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt32">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int16">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int16" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Double">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Byte">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Int64">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.UInt16">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.Decimal">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Decimal" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(Renci.SshNet.Common.BigInteger)~System.SByte">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.SByte" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Decimal)~Renci.SshNet.Common.BigInteger">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Decimal" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Double)~Renci.SshNet.Common.BigInteger">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Double" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Explicit(System.Single)~Renci.SshNet.Common.BigInteger">
      <apidata name="Explicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Single" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,System.Int64)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(Renci.SshNet.Common.BigInteger,System.UInt64)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(System.Int64,Renci.SshNet.Common.BigInteger)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThan(System.UInt64,Renci.SshNet.Common.BigInteger)">
      <apidata name="GreaterThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,System.Int64)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(Renci.SshNet.Common.BigInteger,System.UInt64)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(System.Int64,Renci.SshNet.Common.BigInteger)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_GreaterThanOrEqual(System.UInt64,Renci.SshNet.Common.BigInteger)">
      <apidata name="GreaterThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Byte)~Renci.SshNet.Common.BigInteger">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int16)~Renci.SshNet.Common.BigInteger">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int32)~Renci.SshNet.Common.BigInteger">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.Int64)~Renci.SshNet.Common.BigInteger">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.SByte)~Renci.SshNet.Common.BigInteger">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.SByte" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt16)~Renci.SshNet.Common.BigInteger">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt32)~Renci.SshNet.Common.BigInteger">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Implicit(System.UInt64)~Renci.SshNet.Common.BigInteger">
      <apidata name="Implicit" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Increment(Renci.SshNet.Common.BigInteger)">
      <apidata name="Increment" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,System.Int64)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Inequality(Renci.SshNet.Common.BigInteger,System.UInt64)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Inequality(System.Int64,Renci.SshNet.Common.BigInteger)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Inequality(System.UInt64,Renci.SshNet.Common.BigInteger)">
      <apidata name="Inequality" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LeftShift(Renci.SshNet.Common.BigInteger,System.Int32)">
      <apidata name="LeftShift" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,System.Int64)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThan(Renci.SshNet.Common.BigInteger,System.UInt64)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThan(System.Int64,Renci.SshNet.Common.BigInteger)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThan(System.UInt64,Renci.SshNet.Common.BigInteger)">
      <apidata name="LessThan" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,System.Int64)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(Renci.SshNet.Common.BigInteger,System.UInt64)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(System.Int64,Renci.SshNet.Common.BigInteger)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_LessThanOrEqual(System.UInt64,Renci.SshNet.Common.BigInteger)">
      <apidata name="LessThanOrEqual" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Modulus(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Modulus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dividend">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="divisor">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Multiply(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Multiply" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_OnesComplement(Renci.SshNet.Common.BigInteger)">
      <apidata name="OnesComplement" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_RightShift(Renci.SshNet.Common.BigInteger,System.Int32)">
      <apidata name="RightShift" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="shift">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_Subtraction(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Subtraction" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_UnaryNegation(Renci.SshNet.Common.BigInteger)">
      <apidata name="UnaryNegation" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.op_UnaryPlus(Renci.SshNet.Common.BigInteger)">
      <apidata name="UnaryPlus" group="member" subgroup="method" subsubgroup="operator" />
      <memberdata visibility="public" static="true" special="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Parse(System.String,System.IFormatProvider)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.PositiveMod(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="PositiveMod" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dividend">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="divisor">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Pow(Renci.SshNet.Common.BigInteger,System.Int32)">
      <apidata name="Pow" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="exponent">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Random(System.Int32)">
      <apidata name="Random" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bitLength">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Remainder(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Remainder" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="dividend">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="divisor">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.Sign">
      <apidata name="Sign" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Sign" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.Subtract(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name="Subtract" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="left">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="right">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.ToByteArray">
      <apidata name="ToByteArray" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ValueType.ToString">
          <type api="T:System.ValueType" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.ToString(System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.ToString(System.String)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.ToString(System.String,System.IFormatProvider)">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:System.IFormatProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.IFormattable.ToString(System.String,System.IFormatProvider)">
          <type api="T:System.IFormattable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.TryParse(System.String,Renci.SshNet.Common.BigInteger@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.BigInteger.TryParse(System.String,System.Globalization.NumberStyles,System.Globalization.CultureInfo,Renci.SshNet.Common.BigInteger@)">
      <apidata name="TryParse" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="style">
          <type api="T:System.Globalization.NumberStyles" ref="false" />
        </parameter>
        <parameter name="cultureInfo">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="result" out="true">
          <referenceTo>
            <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.BigInteger.Zero">
      <apidata name="Zero" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Zero" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.DerData">
      <apidata name="DerData" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.DerData.#ctor" />
        <element api="M:Renci.SshNet.Common.DerData.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.DerData.Encode" />
        <element api="M:Renci.SshNet.Common.DerData.ReadBigInteger" />
        <element api="M:Renci.SshNet.Common.DerData.ReadInteger" />
        <element api="M:Renci.SshNet.Common.DerData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.DerData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.DerData.Write(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.ObjectIdentifier)" />
        <element api="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.DerData)" />
        <element api="M:Renci.SshNet.Common.DerData.WriteNull" />
        <element api="P:Renci.SshNet.Common.DerData.IsEndOfData" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.Encode">
      <apidata name="Encode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.DerData.IsEndOfData">
      <apidata name="IsEndOfData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEndOfData" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.ReadBigInteger">
      <apidata name="ReadBigInteger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.ReadInteger">
      <apidata name="ReadInteger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.BigInteger)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.DerData)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:Renci.SshNet.Common.DerData" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.Write(Renci.SshNet.Common.ObjectIdentifier)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="identifier">
          <type api="T:Renci.SshNet.Common.ObjectIdentifier" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.Write(System.Boolean)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.Write(System.Byte[])">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.Write(System.UInt32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.DerData.WriteNull">
      <apidata name="WriteNull" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.DerData" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.ExceptionEventArgs">
      <apidata name="ExceptionEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.ExceptionEventArgs.#ctor(System.Exception)" />
        <element api="P:Renci.SshNet.Common.ExceptionEventArgs.Exception" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ExceptionEventArgs.#ctor(System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ExceptionEventArgs.Exception">
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.HostKeyEventArgs">
      <apidata name="HostKeyEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.HostKeyEventArgs.#ctor(Renci.SshNet.Security.KeyHostAlgorithm)" />
        <element api="P:Renci.SshNet.Common.HostKeyEventArgs.CanTrust" />
        <element api="P:Renci.SshNet.Common.HostKeyEventArgs.HostKey" />
        <element api="P:Renci.SshNet.Common.HostKeyEventArgs.HostKeyName" />
        <element api="P:Renci.SshNet.Common.HostKeyEventArgs.FingerPrint" />
        <element api="P:Renci.SshNet.Common.HostKeyEventArgs.KeyLength" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.HostKeyEventArgs.#ctor(Renci.SshNet.Security.KeyHostAlgorithm)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="host">
          <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.HostKeyEventArgs.CanTrust">
      <apidata name="CanTrust" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CanTrust" />
      <setter name="set_CanTrust" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.HostKeyEventArgs.FingerPrint">
      <apidata name="FingerPrint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FingerPrint" />
      <setter name="set_FingerPrint" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.HostKeyEventArgs.HostKey">
      <apidata name="HostKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_HostKey" />
      <setter name="set_HostKey" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.HostKeyEventArgs.HostKeyName">
      <apidata name="HostKeyName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_HostKeyName" />
      <setter name="set_HostKeyName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.HostKeyEventArgs.KeyLength">
      <apidata name="KeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_KeyLength" />
      <setter name="set_KeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.NetConfServerException">
      <apidata name="NetConfServerException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.NetConfServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.NetConfServerException.#ctor" />
        <element api="M:Renci.SshNet.Common.NetConfServerException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.NetConfServerException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.NetConfServerException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.NetConfServerException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.NetConfServerException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.NetConfServerException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.NetConfServerException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.NetConfServerException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.NetConfServerException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.NetConfServerException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.ObjectIdentifier">
      <apidata name="ObjectIdentifier" group="type" subgroup="structure" />
      <typedata visibility="public" sealed="true" serializable="false" layout="sequential" format="ansi" />
      <elements>
        <element api="M:Renci.SshNet.Common.ObjectIdentifier.#ctor(System.UInt64[])" />
        <element api="P:Renci.SshNet.Common.ObjectIdentifier.Identifiers" />
        <element api="M:System.ValueType.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.ValueType.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.ValueType" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ObjectIdentifier.#ctor(System.UInt64[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="identifiers" params="true">
          <arrayOf rank="1">
            <type api="T:System.UInt64" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ObjectIdentifier" ref="false" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ObjectIdentifier.Identifiers">
      <apidata name="Identifiers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Identifiers" />
      <setter name="set_Identifiers" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.UInt64" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ObjectIdentifier" ref="false" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.PipeStream">
      <apidata name="PipeStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.PipeStream.Flush" />
        <element api="M:Renci.SshNet.Common.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:Renci.SshNet.Common.PipeStream.SetLength(System.Int64)" />
        <element api="M:Renci.SshNet.Common.PipeStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.Common.PipeStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.Common.PipeStream.#ctor" />
        <element api="P:Renci.SshNet.Common.PipeStream.MaxBufferLength" />
        <element api="P:Renci.SshNet.Common.PipeStream.BlockLastReadBuffer" />
        <element api="P:Renci.SshNet.Common.PipeStream.CanRead" />
        <element api="P:Renci.SshNet.Common.PipeStream.CanSeek" />
        <element api="P:Renci.SshNet.Common.PipeStream.CanWrite" />
        <element api="P:Renci.SshNet.Common.PipeStream.Length" />
        <element api="P:Renci.SshNet.Common.PipeStream.Position" />
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle">
          <apidata name="CreateWaitHandle" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <apidata name="EndRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <apidata name="EndWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ReadByte">
          <apidata name="ReadByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)">
          <apidata name="WriteByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Byte" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant">
          <apidata name="ObjectInvariant" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.Stream.CanTimeout">
          <apidata name="CanTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTimeout" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.ReadTimeout">
          <apidata name="ReadTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ReadTimeout" />
          <setter name="set_ReadTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.WriteTimeout">
          <apidata name="WriteTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_WriteTimeout" />
          <setter name="set_WriteTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.PipeStream.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PipeStream.BlockLastReadBuffer">
      <apidata name="BlockLastReadBuffer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BlockLastReadBuffer" />
      <setter name="set_BlockLastReadBuffer" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PipeStream.CanRead">
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PipeStream.CanSeek">
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PipeStream.CanWrite">
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.PipeStream.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PipeStream.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PipeStream.MaxBufferLength">
      <apidata name="MaxBufferLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxBufferLength" />
      <setter name="set_MaxBufferLength" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PipeStream.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.PipeStream.Read(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.PipeStream.SetLength(System.Int64)">
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.PipeStream.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PipeStream" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.PortForwardEventArgs">
      <apidata name="PortForwardEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorHost" />
        <element api="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorPort" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorHost">
      <apidata name="OriginatorHost" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_OriginatorHost" />
      <setter name="set_OriginatorHost" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PortForwardEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.PortForwardEventArgs.OriginatorPort">
      <apidata name="OriginatorPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_OriginatorPort" />
      <setter name="set_OriginatorPort" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.PortForwardEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.ProxyException">
      <apidata name="ProxyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.ProxyException.#ctor" />
        <element api="M:Renci.SshNet.Common.ProxyException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.ProxyException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.ProxyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ProxyException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ProxyException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ProxyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ProxyException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ProxyException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ProxyException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ProxyException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ProxyException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.ScpDownloadEventArgs">
      <apidata name="ScpDownloadEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.ScpDownloadEventArgs.#ctor(System.String,System.Int64,System.Int64)" />
        <element api="P:Renci.SshNet.Common.ScpDownloadEventArgs.Filename" />
        <element api="P:Renci.SshNet.Common.ScpDownloadEventArgs.Size" />
        <element api="P:Renci.SshNet.Common.ScpDownloadEventArgs.Downloaded" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ScpDownloadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="downloaded">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpDownloadEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ScpDownloadEventArgs.Downloaded">
      <apidata name="Downloaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Downloaded" />
      <setter name="set_Downloaded" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpDownloadEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ScpDownloadEventArgs.Filename">
      <apidata name="Filename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Filename" />
      <setter name="set_Filename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpDownloadEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ScpDownloadEventArgs.Size">
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Size" />
      <setter name="set_Size" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpDownloadEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.ScpException">
      <apidata name="ScpException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.ScpException.#ctor" />
        <element api="M:Renci.SshNet.Common.ScpException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.ScpException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.ScpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ScpException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ScpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ScpException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ScpException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.ScpUploadEventArgs">
      <apidata name="ScpUploadEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.ScpUploadEventArgs.#ctor(System.String,System.Int64,System.Int64)" />
        <element api="P:Renci.SshNet.Common.ScpUploadEventArgs.Filename" />
        <element api="P:Renci.SshNet.Common.ScpUploadEventArgs.Size" />
        <element api="P:Renci.SshNet.Common.ScpUploadEventArgs.Uploaded" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ScpUploadEventArgs.#ctor(System.String,System.Int64,System.Int64)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="size">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="uploaded">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpUploadEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ScpUploadEventArgs.Filename">
      <apidata name="Filename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Filename" />
      <setter name="set_Filename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpUploadEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ScpUploadEventArgs.Size">
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Size" />
      <setter name="set_Size" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpUploadEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ScpUploadEventArgs.Uploaded">
      <apidata name="Uploaded" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Uploaded" />
      <setter name="set_Uploaded" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ScpUploadEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SemaphoreLight">
      <apidata name="SemaphoreLight" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SemaphoreLight.#ctor(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SemaphoreLight.Release" />
        <element api="M:Renci.SshNet.Common.SemaphoreLight.Release(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SemaphoreLight.Wait" />
        <element api="P:Renci.SshNet.Common.SemaphoreLight.CurrentCount" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SemaphoreLight.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="initialCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SemaphoreLight" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.SemaphoreLight.CurrentCount">
      <apidata name="CurrentCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CurrentCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SemaphoreLight" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SemaphoreLight.Release">
      <apidata name="Release" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SemaphoreLight" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SemaphoreLight.Release(System.Int32)">
      <apidata name="Release" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="releaseCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SemaphoreLight" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SemaphoreLight.Wait">
      <apidata name="Wait" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SemaphoreLight" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SftpPathNotFoundException">
      <apidata name="SftpPathNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor" />
        <element api="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SftpPathNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SftpPathNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SftpPathNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SftpPathNotFoundException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SftpPathNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SftpPermissionDeniedException">
      <apidata name="SftpPermissionDeniedException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor" />
        <element api="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SftpPermissionDeniedException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SftpPermissionDeniedException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SftpPermissionDeniedException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SftpPermissionDeniedException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SftpPermissionDeniedException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.ShellDataEventArgs">
      <apidata name="ShellDataEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.ShellDataEventArgs.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.ShellDataEventArgs.#ctor(System.String)" />
        <element api="P:Renci.SshNet.Common.ShellDataEventArgs.Data" />
        <element api="P:Renci.SshNet.Common.ShellDataEventArgs.Line" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ShellDataEventArgs.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ShellDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.ShellDataEventArgs.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="line">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ShellDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ShellDataEventArgs.Data">
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ShellDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.ShellDataEventArgs.Line">
      <apidata name="Line" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Line" />
      <setter name="set_Line" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.ShellDataEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SshAuthenticationException">
      <apidata name="SshAuthenticationException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SshAuthenticationException.#ctor" />
        <element api="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshAuthenticationException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshAuthenticationException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshAuthenticationException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshAuthenticationException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshAuthenticationException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshAuthenticationException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SshConnectionException">
      <apidata name="SshConnectionException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SshConnectionException.#ctor" />
        <element api="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason)" />
        <element api="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshConnectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:Renci.SshNet.Common.SshConnectionException.DisconnectReason" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshConnectionException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="disconnectReasonCode">
          <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,Renci.SshNet.Messages.Transport.DisconnectReason,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="disconnectReasonCode">
          <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshConnectionException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.SshConnectionException.DisconnectReason">
      <apidata name="DisconnectReason" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_DisconnectReason" />
      <setter name="set_DisconnectReason" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshConnectionException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SshData">
      <apidata name="SshData" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SshData.GetBytes" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadData" />
        <element api="M:Renci.SshNet.Common.SshData.SaveData" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.#ctor" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="P:Renci.SshNet.Common.SshData.ZeroReaderIndex" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.GetBytes">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.SshData.IsEndOfData">
      <apidata name="IsEndOfData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsEndOfData" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Load(System.Byte[])">
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])">
      <apidata name="LoadBytes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadAsciiString">
      <apidata name="ReadAsciiString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadBigInt">
      <apidata name="ReadBigInt" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadBinaryString">
      <apidata name="ReadBinaryString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadBoolean">
      <apidata name="ReadBoolean" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadByte">
      <apidata name="ReadByte" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadBytes">
      <apidata name="ReadBytes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)">
      <apidata name="ReadBytes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadExtensionPair">
      <apidata name="ReadExtensionPair" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadInt64">
      <apidata name="ReadInt64" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadNamesList">
      <apidata name="ReadNamesList" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadString">
      <apidata name="ReadString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadUInt16">
      <apidata name="ReadUInt16" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.UInt16" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadUInt32">
      <apidata name="ReadUInt32" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ReadUInt64">
      <apidata name="ReadUInt64" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.ResetReader">
      <apidata name="ResetReader" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.Boolean)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.Byte)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Byte" ref="false" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.Int64)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.String)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.String[])">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.UInt16)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.UInt16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.UInt32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.Write(System.UInt64)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)">
      <apidata name="WriteAscii" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])">
      <apidata name="WriteBinaryString" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Common.SshData.ZeroReaderIndex">
      <apidata name="ZeroReaderIndex" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_ZeroReaderIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshData" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SshException">
      <apidata name="SshException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Common.ProxyException" ref="true" />
          <type api="T:Renci.SshNet.Common.NetConfServerException" ref="true" />
          <type api="T:Renci.SshNet.Common.ScpException" ref="true" />
          <type api="T:Renci.SshNet.Common.SftpPathNotFoundException" ref="true" />
          <type api="T:Renci.SshNet.Common.SftpPermissionDeniedException" ref="true" />
          <type api="T:Renci.SshNet.Common.SshAuthenticationException" ref="true" />
          <type api="T:Renci.SshNet.Common.SshConnectionException" ref="true" />
          <type api="T:Renci.SshNet.Common.SshOperationTimeoutException" ref="true" />
          <type api="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SshException.#ctor" />
        <element api="M:Renci.SshNet.Common.SshException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.SshException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SshException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SshOperationTimeoutException">
      <apidata name="SshOperationTimeoutException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor" />
        <element api="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshOperationTimeoutException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshOperationTimeoutException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshOperationTimeoutException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshOperationTimeoutException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshOperationTimeoutException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException">
      <apidata name="SshPassPhraseNullOrEmptyException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="true" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor" />
        <element api="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String,System.Exception)" />
        <element api="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:Renci.SshNet.Common.SshException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite" />
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink" />
          <setter name="set_HelpLink" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" />
          <getter name="get_HResult" />
          <setter name="set_HResult" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.SshPassPhraseNullOrEmptyException" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Common.TerminalModes">
      <apidata name="TerminalModes" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <enumerationbase>
        <type api="T:System.Byte" ref="false" />
      </enumerationbase>
      <elements>
        <element api="F:Renci.SshNet.Common.TerminalModes.TTY_OP_END" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VINTR" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VQUIT" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VERASE" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VKILL" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VEOF" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VEOL" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VEOL2" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VSTART" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VSTOP" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VSUSP" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VDSUSP" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VREPRINT" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VWERASE" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VLNEXT" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VFLUSH" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VSWTCH" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VSTATUS" />
        <element api="F:Renci.SshNet.Common.TerminalModes.VDISCARD" />
        <element api="F:Renci.SshNet.Common.TerminalModes.IGNPAR" />
        <element api="F:Renci.SshNet.Common.TerminalModes.PARMRK" />
        <element api="F:Renci.SshNet.Common.TerminalModes.INPCK" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ISTRIP" />
        <element api="F:Renci.SshNet.Common.TerminalModes.INLCR" />
        <element api="F:Renci.SshNet.Common.TerminalModes.IGNCR" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ICRNL" />
        <element api="F:Renci.SshNet.Common.TerminalModes.IUCLC" />
        <element api="F:Renci.SshNet.Common.TerminalModes.IXON" />
        <element api="F:Renci.SshNet.Common.TerminalModes.IXANY" />
        <element api="F:Renci.SshNet.Common.TerminalModes.IXOFF" />
        <element api="F:Renci.SshNet.Common.TerminalModes.IMAXBEL" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ISIG" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ICANON" />
        <element api="F:Renci.SshNet.Common.TerminalModes.XCASE" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ECHO" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ECHOE" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ECHOK" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ECHONL" />
        <element api="F:Renci.SshNet.Common.TerminalModes.NOFLSH" />
        <element api="F:Renci.SshNet.Common.TerminalModes.TOSTOP" />
        <element api="F:Renci.SshNet.Common.TerminalModes.IEXTEN" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ECHOCTL" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ECHOKE" />
        <element api="F:Renci.SshNet.Common.TerminalModes.PENDIN" />
        <element api="F:Renci.SshNet.Common.TerminalModes.OPOST" />
        <element api="F:Renci.SshNet.Common.TerminalModes.OLCUC" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ONLCR" />
        <element api="F:Renci.SshNet.Common.TerminalModes.OCRNL" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ONOCR" />
        <element api="F:Renci.SshNet.Common.TerminalModes.ONLRET" />
        <element api="F:Renci.SshNet.Common.TerminalModes.CS7" />
        <element api="F:Renci.SshNet.Common.TerminalModes.CS8" />
        <element api="F:Renci.SshNet.Common.TerminalModes.PARENB" />
        <element api="F:Renci.SshNet.Common.TerminalModes.PARODD" />
        <element api="F:Renci.SshNet.Common.TerminalModes.TTY_OP_ISPEED" />
        <element api="F:Renci.SshNet.Common.TerminalModes.TTY_OP_OSPEED" />
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.CS7">
      <apidata name="CS7" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>90</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.CS8">
      <apidata name="CS8" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>91</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ECHO">
      <apidata name="ECHO" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>53</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ECHOCTL">
      <apidata name="ECHOCTL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>60</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ECHOE">
      <apidata name="ECHOE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>54</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ECHOK">
      <apidata name="ECHOK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>55</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ECHOKE">
      <apidata name="ECHOKE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>61</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ECHONL">
      <apidata name="ECHONL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>56</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ICANON">
      <apidata name="ICANON" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>51</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ICRNL">
      <apidata name="ICRNL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>36</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.IEXTEN">
      <apidata name="IEXTEN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>59</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.IGNCR">
      <apidata name="IGNCR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>35</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.IGNPAR">
      <apidata name="IGNPAR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>30</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.IMAXBEL">
      <apidata name="IMAXBEL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>41</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.INLCR">
      <apidata name="INLCR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>34</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.INPCK">
      <apidata name="INPCK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>32</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ISIG">
      <apidata name="ISIG" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>50</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ISTRIP">
      <apidata name="ISTRIP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>33</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.IUCLC">
      <apidata name="IUCLC" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>37</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.IXANY">
      <apidata name="IXANY" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>39</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.IXOFF">
      <apidata name="IXOFF" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>40</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.IXON">
      <apidata name="IXON" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>38</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.NOFLSH">
      <apidata name="NOFLSH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>57</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.OCRNL">
      <apidata name="OCRNL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>73</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.OLCUC">
      <apidata name="OLCUC" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>71</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ONLCR">
      <apidata name="ONLCR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>72</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ONLRET">
      <apidata name="ONLRET" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>75</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.ONOCR">
      <apidata name="ONOCR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>74</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.OPOST">
      <apidata name="OPOST" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>70</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.PARENB">
      <apidata name="PARENB" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>92</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.PARMRK">
      <apidata name="PARMRK" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>31</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.PARODD">
      <apidata name="PARODD" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>93</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.PENDIN">
      <apidata name="PENDIN" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>62</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.TOSTOP">
      <apidata name="TOSTOP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>58</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.TTY_OP_END">
      <apidata name="TTY_OP_END" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.TTY_OP_ISPEED">
      <apidata name="TTY_OP_ISPEED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>128</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.TTY_OP_OSPEED">
      <apidata name="TTY_OP_OSPEED" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>129</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VDISCARD">
      <apidata name="VDISCARD" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>18</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VDSUSP">
      <apidata name="VDSUSP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VEOF">
      <apidata name="VEOF" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VEOL">
      <apidata name="VEOL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VEOL2">
      <apidata name="VEOL2" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VERASE">
      <apidata name="VERASE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VFLUSH">
      <apidata name="VFLUSH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VINTR">
      <apidata name="VINTR" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VKILL">
      <apidata name="VKILL" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VLNEXT">
      <apidata name="VLNEXT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VQUIT">
      <apidata name="VQUIT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VREPRINT">
      <apidata name="VREPRINT" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VSTART">
      <apidata name="VSTART" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VSTATUS">
      <apidata name="VSTATUS" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>17</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VSTOP">
      <apidata name="VSTOP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VSUSP">
      <apidata name="VSUSP" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VSWTCH">
      <apidata name="VSWTCH" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>16</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.VWERASE">
      <apidata name="VWERASE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Common.TerminalModes.XCASE">
      <apidata name="XCASE" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </returns>
      <value>52</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Common" />
        <type api="T:Renci.SshNet.Common.TerminalModes" ref="false" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Compression">
      <apidata name="Renci.SshNet.Compression" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Compression.CompressionMode" />
        <element api="T:Renci.SshNet.Compression.Compressor" />
        <element api="T:Renci.SshNet.Compression.ZlibOpenSsh" />
        <element api="T:Renci.SshNet.Compression.ZlibStream" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Compression.CompressionMode">
      <apidata name="CompressionMode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Renci.SshNet.Compression.CompressionMode.Compress" />
        <element api="F:Renci.SshNet.Compression.CompressionMode.Decompress" />
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Compression.CompressionMode.Compress">
      <apidata name="Compress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Compression.CompressionMode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.CompressionMode" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Compression.CompressionMode.Decompress">
      <apidata name="Decompress" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Compression.CompressionMode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.CompressionMode" ref="false" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Compression.Compressor">
      <apidata name="Compressor" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Compression.ZlibOpenSsh" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Compression.Compressor.#ctor" />
        <element api="M:Renci.SshNet.Compression.Compressor.Init(Renci.SshNet.Session)" />
        <element api="M:Renci.SshNet.Compression.Compressor.Compress(System.Byte[])" />
        <element api="M:Renci.SshNet.Compression.Compressor.Decompress(System.Byte[])" />
        <element api="M:Renci.SshNet.Compression.Compressor.Dispose" />
        <element api="M:Renci.SshNet.Compression.Compressor.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Compression.Compressor.Finalize" />
        <element api="P:Renci.SshNet.Compression.Compressor.IsActive" />
        <element api="P:Renci.SshNet.Compression.Compressor.Session" />
        <element api="P:Renci.SshNet.Security.Algorithm.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.Compressor.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.Compressor.Compress(System.Byte[])">
      <apidata name="Compress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.Compressor.Decompress(System.Byte[])">
      <apidata name="Decompress" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.Compressor.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.Compressor.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.Compressor.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.Compressor.Init(Renci.SshNet.Session)">
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Compression.Compressor.IsActive">
      <apidata name="IsActive" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsActive" />
      <setter name="set_IsActive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Compression.Compressor.Session">
      <apidata name="Session" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Session" />
      <setter name="set_Session" />
      <returns>
        <type api="T:Renci.SshNet.Session" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Compression.ZlibOpenSsh">
      <apidata name="ZlibOpenSsh" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Compression.ZlibOpenSsh.Init(Renci.SshNet.Session)" />
        <element api="M:Renci.SshNet.Compression.ZlibOpenSsh.#ctor" />
        <element api="P:Renci.SshNet.Compression.ZlibOpenSsh.Name" />
        <element api="M:Renci.SshNet.Compression.Compressor.Compress(System.Byte[])" />
        <element api="M:Renci.SshNet.Compression.Compressor.Decompress(System.Byte[])" />
        <element api="M:Renci.SshNet.Compression.Compressor.Dispose" />
        <element api="M:Renci.SshNet.Compression.Compressor.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Compression.Compressor.Finalize" />
        <element api="P:Renci.SshNet.Compression.Compressor.IsActive" />
        <element api="P:Renci.SshNet.Compression.Compressor.Session" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.ZlibOpenSsh.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.ZlibOpenSsh" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.ZlibOpenSsh.Init(Renci.SshNet.Session)">
      <apidata name="Init" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Compression.Compressor.Init(Renci.SshNet.Session)">
          <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.ZlibOpenSsh" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Compression.ZlibOpenSsh.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Algorithm.Name">
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.ZlibOpenSsh" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Compression.ZlibStream">
      <apidata name="ZlibStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Compression.ZlibStream.#ctor(System.IO.Stream,Renci.SshNet.Compression.CompressionMode)" />
        <element api="M:Renci.SshNet.Compression.ZlibStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.ZlibStream.#ctor(System.IO.Stream,Renci.SshNet.Compression.CompressionMode)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Compression.CompressionMode" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.ZlibStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Compression.ZlibStream.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Compression" />
        <type api="T:Renci.SshNet.Compression.ZlibStream" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Messages">
      <apidata name="Renci.SshNet.Messages" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Messages.Message" />
        <element api="T:Renci.SshNet.Messages.MessageAttribute" />
        <element api="T:Renci.SshNet.Messages.ServiceName" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Messages.Message">
      <apidata name="Message" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Messages.Transport.DebugMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.IgnoreMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.NewKeysMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Transport.UnimplementedMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Authentication.BannerMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Authentication.FailureMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Authentication.SuccessMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.RequestFailureMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="M:Renci.SshNet.Messages.Message.#ctor" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadData" />
        <element api="M:Renci.SshNet.Common.SshData.SaveData" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Message.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.Message" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Message.GetBytes">
      <apidata name="GetBytes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.GetBytes">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.Message" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Message.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.Message" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Message.ZeroReaderIndex">
      <apidata name="ZeroReaderIndex" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Common.SshData.ZeroReaderIndex">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_ZeroReaderIndex" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.Message" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.MessageAttribute">
      <apidata name="MessageAttribute" group="type" subgroup="class" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.MessageAttribute.#ctor(System.String,System.Byte)" />
        <element api="P:Renci.SshNet.Messages.MessageAttribute.Name" />
        <element api="P:Renci.SshNet.Messages.MessageAttribute.Number" />
        <element api="M:System.Attribute.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.Equals(System.Object)">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.GetHashCode">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.Match(System.Object)">
          <apidata name="Match" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Attribute.IsDefaultAttribute">
          <apidata name="IsDefaultAttribute" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="P:System.Attribute.TypeId">
          <apidata name="TypeId" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_TypeId" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Attribute" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.MessageAttribute.#ctor(System.String,System.Byte)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="number">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.MessageAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.MessageAttribute.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.MessageAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.MessageAttribute.Number">
      <apidata name="Number" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Number" />
      <setter name="set_Number" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.MessageAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.ServiceName">
      <apidata name="ServiceName" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Renci.SshNet.Messages.ServiceName.UserAuthentication" />
        <element api="F:Renci.SshNet.Messages.ServiceName.Connection" />
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.ServiceName.Connection">
      <apidata name="Connection" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.ServiceName.UserAuthentication">
      <apidata name="UserAuthentication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages" />
        <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Messages.Authentication">
      <apidata name="Renci.SshNet.Messages.Authentication" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Messages.Authentication.BannerMessage" />
        <element api="T:Renci.SshNet.Messages.Authentication.FailureMessage" />
        <element api="T:Renci.SshNet.Messages.Authentication.RequestMessage" />
        <element api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" />
        <element api="T:Renci.SshNet.Messages.Authentication.SuccessMessage" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Messages.Authentication.BannerMessage">
      <apidata name="BannerMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Authentication.BannerMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Authentication.BannerMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Authentication.BannerMessage.#ctor" />
        <element api="P:Renci.SshNet.Messages.Authentication.BannerMessage.Message" />
        <element api="P:Renci.SshNet.Messages.Authentication.BannerMessage.Language" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.BannerMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.BannerMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.BannerMessage.Language">
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Language" />
      <setter name="set_Language" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.BannerMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.BannerMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.BannerMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.BannerMessage.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.BannerMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.BannerMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.BannerMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Authentication.FailureMessage">
      <apidata name="FailureMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Authentication.FailureMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Authentication.FailureMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Authentication.FailureMessage.#ctor" />
        <element api="P:Renci.SshNet.Messages.Authentication.FailureMessage.AllowedAuthentications" />
        <element api="P:Renci.SshNet.Messages.Authentication.FailureMessage.Message" />
        <element api="P:Renci.SshNet.Messages.Authentication.FailureMessage.PartialSuccess" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.FailureMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.FailureMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.FailureMessage.AllowedAuthentications">
      <apidata name="AllowedAuthentications" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AllowedAuthentications" />
      <setter name="set_AllowedAuthentications" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.FailureMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.FailureMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.FailureMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.FailureMessage.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.FailureMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.FailureMessage.PartialSuccess">
      <apidata name="PartialSuccess" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PartialSuccess" />
      <setter name="set_PartialSuccess" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.FailureMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.FailureMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.FailureMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Authentication.RequestMessage">
      <apidata name="RequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Authentication.RequestMessage.#ctor(Renci.SshNet.Messages.ServiceName,System.String)" />
        <element api="M:Renci.SshNet.Messages.Authentication.RequestMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Authentication.RequestMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessage.Username" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessage.ServiceName" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessage.MethodName" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.RequestMessage.#ctor(Renci.SshNet.Messages.ServiceName,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.RequestMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.RequestMessage.MethodName">
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.RequestMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.RequestMessage.ServiceName">
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ServiceName" />
      <setter name="set_ServiceName" />
      <returns>
        <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.RequestMessage.Username">
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey">
      <apidata name="RequestMessagePublicKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[])" />
        <element api="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.Byte[])" />
        <element api="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.SaveData" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.MethodName" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyAlgorithmName" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyData" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.Signature" />
        <element api="M:Renci.SshNet.Messages.Authentication.RequestMessage.LoadData" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessage.Username" />
        <element api="P:Renci.SshNet.Messages.Authentication.RequestMessage.ServiceName" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyAlgorithmName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.#ctor(Renci.SshNet.Messages.ServiceName,System.String,System.String,System.Byte[],System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
        </parameter>
        <parameter name="username">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyAlgorithmName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="keyData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.MethodName">
      <apidata name="MethodName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Messages.Authentication.RequestMessage.MethodName">
          <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_MethodName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyAlgorithmName">
      <apidata name="PublicKeyAlgorithmName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PublicKeyAlgorithmName" />
      <setter name="set_PublicKeyAlgorithmName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.PublicKeyData">
      <apidata name="PublicKeyData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PublicKeyData" />
      <setter name="set_PublicKeyData" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Authentication.RequestMessage.SaveData">
          <type api="T:Renci.SshNet.Messages.Authentication.RequestMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey.Signature">
      <apidata name="Signature" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Signature" />
      <setter name="set_Signature" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.RequestMessagePublicKey" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Authentication.SuccessMessage">
      <apidata name="SuccessMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Authentication.SuccessMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Authentication.SuccessMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Authentication.SuccessMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.SuccessMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.SuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.SuccessMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.SuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Authentication.SuccessMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Authentication" />
        <type api="T:Renci.SshNet.Messages.Authentication.SuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Messages.Connection">
      <apidata name="Renci.SshNet.Messages.Connection" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Messages.Connection.ChannelMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelDataMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelEofMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.RequestInfo" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo" />
        <element api="T:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.GlobalRequestName" />
        <element api="T:Renci.SshNet.Messages.Connection.RequestFailureMessage" />
        <element api="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage">
      <apidata name="ChannelCloseMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor(System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelCloseMessage.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelDataMessage">
      <apidata name="ChannelDataMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor(System.UInt32,System.Byte[])" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelDataMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.#ctor(System.UInt32,System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelDataMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelDataMessage.Data">
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelDataMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelDataMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelDataMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelDataMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelEofMessage">
      <apidata name="ChannelEofMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor(System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelEofMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelEofMessage.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelEofMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage">
      <apidata name="ChannelExtendedDataMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor(System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.DataTypeCode" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.Data" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.Data">
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.DataTypeCode">
      <apidata name="DataTypeCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_DataTypeCode" />
      <setter name="set_DataTypeCode" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage">
      <apidata name="ChannelFailureMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor(System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelFailureMessage.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelMessage">
      <apidata name="ChannelMessage" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelCloseMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelDataMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelEofMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelExtendedDataMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelFailureMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.#ctor" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber">
      <apidata name="LocalChannelNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_LocalChannelNumber" />
      <setter name="set_LocalChannelNumber" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Message.ToString">
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage">
      <apidata name="ChannelOpenConfirmationMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.RemoteChannelNumber" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.InitialWindowSize" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.MaximumPacketSize" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="initialWindowSize">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="maximumPacketSize">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="remoteChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.InitialWindowSize">
      <apidata name="InitialWindowSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_InitialWindowSize" />
      <setter name="set_InitialWindowSize" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.MaximumPacketSize">
      <apidata name="MaximumPacketSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_MaximumPacketSize" />
      <setter name="set_MaximumPacketSize" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.RemoteChannelNumber">
      <apidata name="RemoteChannelNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RemoteChannelNumber" />
      <setter name="set_RemoteChannelNumber" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenConfirmationMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage">
      <apidata name="ChannelOpenFailureMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor(System.UInt32,System.String,System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.ReasonCode" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Description" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Language" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.#ctor(System.UInt32,System.String,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="description">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="reasonCode">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.Language">
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Language" />
      <setter name="set_Language" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.ReasonCode">
      <apidata name="ReasonCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ReasonCode" />
      <setter name="set_ReasonCode" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo">
      <apidata name="ChannelOpenInfo" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.SaveData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.#ctor" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenInfo.ChannelType" />
        <element api="M:Renci.SshNet.Common.SshData.GetBytes" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="P:Renci.SshNet.Common.SshData.ZeroReaderIndex" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenInfo.ChannelType">
      <apidata name="ChannelType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ChannelType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenInfo.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage">
      <apidata name="ChannelOpenMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,Renci.SshNet.Messages.Connection.ChannelOpenInfo)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.ChannelType" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.InitialWindowSize" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.MaximumPacketSize" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.Info" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.#ctor(System.UInt32,System.UInt32,System.UInt32,Renci.SshNet.Messages.Connection.ChannelOpenInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="channelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="initialWindowSize">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="maximumPacketSize">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="info">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.ChannelType">
      <apidata name="ChannelType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ChannelType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.Info">
      <apidata name="Info" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Info" />
      <setter name="set_Info" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.InitialWindowSize">
      <apidata name="InitialWindowSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_InitialWindowSize" />
      <setter name="set_InitialWindowSize" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelOpenMessage.MaximumPacketSize">
      <apidata name="MaximumPacketSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_MaximumPacketSize" />
      <setter name="set_MaximumPacketSize" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelOpenMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelOpenMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage">
      <apidata name="ChannelRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor(System.UInt32,Renci.SshNet.Messages.Connection.RequestInfo)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestName" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.#ctor(System.UInt32,Renci.SshNet.Messages.Connection.RequestInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelName">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="info">
          <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestData">
      <apidata name="RequestData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RequestData" />
      <setter name="set_RequestData" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelRequestMessage.RequestName">
      <apidata name="RequestName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RequestName" />
      <setter name="set_RequestName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelRequestMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage">
      <apidata name="ChannelSuccessMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor(System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelSuccessMessage.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelSuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage">
      <apidata name="ChannelWindowAdjustMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor(System.UInt32,System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.BytesToAdd" />
        <element api="M:Renci.SshNet.Messages.Connection.ChannelMessage.ToString" />
        <element api="P:Renci.SshNet.Messages.Connection.ChannelMessage.LocalChannelNumber" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.#ctor(System.UInt32,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="localChannelNumber">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="bytesToAdd">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.BytesToAdd">
      <apidata name="BytesToAdd" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_BytesToAdd" />
      <setter name="set_BytesToAdd" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.LoadData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Messages.Connection.ChannelMessage.SaveData">
          <type api="T:Renci.SshNet.Messages.Connection.ChannelMessage" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.ChannelWindowAdjustMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo">
      <apidata name="EndOfWriteRequestInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.NAME" />
        <element api="M:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.#ctor" />
        <element api="P:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.RequestName" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestInfo.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestInfo.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.RequestInfo.WantReply" />
        <element api="M:Renci.SshNet.Common.SshData.GetBytes" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="P:Renci.SshNet.Common.SshData.ZeroReaderIndex" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.NAME">
      <apidata name="NAME" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo.RequestName">
      <apidata name="RequestName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Messages.Connection.RequestInfo.RequestName">
          <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RequestName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage">
      <apidata name="GlobalRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean)" />
        <element api="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean,System.String,System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.RequestName" />
        <element api="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.WantReply" />
        <element api="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.AddressToBind" />
        <element api="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.PortToBind" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="requestName">
          <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestName" ref="false" />
        </parameter>
        <parameter name="wantReply">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.#ctor(Renci.SshNet.Messages.Connection.GlobalRequestName,System.Boolean,System.String,System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="requestName">
          <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestName" ref="false" />
        </parameter>
        <parameter name="wantReply">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="addressToBind">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="portToBind">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.AddressToBind">
      <apidata name="AddressToBind" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_AddressToBind" />
      <setter name="set_AddressToBind" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.PortToBind">
      <apidata name="PortToBind" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_PortToBind" />
      <setter name="set_PortToBind" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.RequestName">
      <apidata name="RequestName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RequestName" />
      <setter name="set_RequestName" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestName" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.GlobalRequestMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.GlobalRequestMessage.WantReply">
      <apidata name="WantReply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_WantReply" />
      <setter name="set_WantReply" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.GlobalRequestName">
      <apidata name="GlobalRequestName" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Renci.SshNet.Messages.Connection.GlobalRequestName.TcpIpForward" />
        <element api="F:Renci.SshNet.Messages.Connection.GlobalRequestName.CancelTcpIpForward" />
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Connection.GlobalRequestName.CancelTcpIpForward">
      <apidata name="CancelTcpIpForward" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestName" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestName" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Connection.GlobalRequestName.TcpIpForward">
      <apidata name="TcpIpForward" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestName" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.GlobalRequestName" ref="false" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo">
      <apidata name="KeepAliveRequestInfo" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.NAME" />
        <element api="M:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.#ctor" />
        <element api="P:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.RequestName" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestInfo.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestInfo.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.RequestInfo.WantReply" />
        <element api="M:Renci.SshNet.Common.SshData.GetBytes" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="P:Renci.SshNet.Common.SshData.ZeroReaderIndex" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.NAME">
      <apidata name="NAME" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo.RequestName">
      <apidata name="RequestName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Messages.Connection.RequestInfo.RequestName">
          <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_RequestName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.RequestFailureMessage">
      <apidata name="RequestFailureMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestFailureMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestFailureMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.RequestInfo">
      <apidata name="RequestInfo" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Messages.Connection.EndOfWriteRequestInfo" ref="true" />
          <type api="T:Renci.SshNet.Messages.Connection.KeepAliveRequestInfo" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.RequestInfo.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestInfo.SaveData" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestInfo.#ctor" />
        <element api="P:Renci.SshNet.Messages.Connection.RequestInfo.RequestName" />
        <element api="P:Renci.SshNet.Messages.Connection.RequestInfo.WantReply" />
        <element api="M:Renci.SshNet.Common.SshData.GetBytes" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="P:Renci.SshNet.Common.SshData.ZeroReaderIndex" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestInfo.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestInfo.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.RequestInfo.RequestName">
      <apidata name="RequestName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RequestName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestInfo.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.RequestInfo.WantReply">
      <apidata name="WantReply" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_WantReply" />
      <setter name="set_WantReply" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestInfo" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage">
      <apidata name="RequestSuccessMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor(System.UInt32)" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Connection.RequestSuccessMessage.BoundPort" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.#ctor(System.UInt32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="boundPort">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Connection.RequestSuccessMessage.BoundPort">
      <apidata name="BoundPort" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_BoundPort" />
      <setter name="set_BoundPort" />
      <returns>
        <type api="T:System.Nullable`1" ref="false">
          <specialization>
            <type api="T:System.UInt32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Connection.RequestSuccessMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Connection" />
        <type api="T:Renci.SshNet.Messages.Connection.RequestSuccessMessage" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Messages.Transport">
      <apidata name="Renci.SshNet.Messages.Transport" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Messages.Transport.IKeyExchangedAllowed" />
        <element api="T:Renci.SshNet.Messages.Transport.DebugMessage" />
        <element api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" />
        <element api="T:Renci.SshNet.Messages.Transport.DisconnectReason" />
        <element api="T:Renci.SshNet.Messages.Transport.IgnoreMessage" />
        <element api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup" />
        <element api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage" />
        <element api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" />
        <element api="T:Renci.SshNet.Messages.Transport.NewKeysMessage" />
        <element api="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage" />
        <element api="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage" />
        <element api="T:Renci.SshNet.Messages.Transport.UnimplementedMessage" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.DebugMessage">
      <apidata name="DebugMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.DebugMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.DebugMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Transport.DebugMessage.#ctor" />
        <element api="P:Renci.SshNet.Messages.Transport.DebugMessage.IsAlwaysDisplay" />
        <element api="P:Renci.SshNet.Messages.Transport.DebugMessage.Message" />
        <element api="P:Renci.SshNet.Messages.Transport.DebugMessage.Language" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.DebugMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DebugMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.DebugMessage.IsAlwaysDisplay">
      <apidata name="IsAlwaysDisplay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsAlwaysDisplay" />
      <setter name="set_IsAlwaysDisplay" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DebugMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.DebugMessage.Language">
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Language" />
      <setter name="set_Language" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DebugMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.DebugMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DebugMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.DebugMessage.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DebugMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.DebugMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DebugMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.DisconnectMessage">
      <apidata name="DisconnectMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Renci.SshNet.Messages.Transport.IKeyExchangedAllowed" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor(Renci.SshNet.Messages.Transport.DisconnectReason,System.String)" />
        <element api="M:Renci.SshNet.Messages.Transport.DisconnectMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.DisconnectMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Transport.DisconnectMessage.ReasonCode" />
        <element api="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Description" />
        <element api="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Language" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.DisconnectMessage.#ctor(Renci.SshNet.Messages.Transport.DisconnectReason,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="reasonCode">
          <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Description" />
      <setter name="set_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.DisconnectMessage.Language">
      <apidata name="Language" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Language" />
      <setter name="set_Language" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.DisconnectMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.DisconnectMessage.ReasonCode">
      <apidata name="ReasonCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ReasonCode" />
      <setter name="set_ReasonCode" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.DisconnectMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.DisconnectReason">
      <apidata name="DisconnectReason" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.None" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostNotAllowedToConnect" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolError" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.KeyExchangeFailed" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.Reserved" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.MacError" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.CompressionError" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.ServiceNotAvailable" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolVersionNotSupported" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostKeyNotVerifiable" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.ConnectionLost" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.ByApplication" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.TooManyConnections" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.AuthenticationCanceledByUser" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.NoMoreAuthenticationMethodsAvailable" />
        <element api="F:Renci.SshNet.Messages.Transport.DisconnectReason.IllegalUserName" />
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.AuthenticationCanceledByUser">
      <apidata name="AuthenticationCanceledByUser" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>13</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.ByApplication">
      <apidata name="ByApplication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>11</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.CompressionError">
      <apidata name="CompressionError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>6</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.ConnectionLost">
      <apidata name="ConnectionLost" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>10</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostKeyNotVerifiable">
      <apidata name="HostKeyNotVerifiable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>9</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.HostNotAllowedToConnect">
      <apidata name="HostNotAllowedToConnect" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.IllegalUserName">
      <apidata name="IllegalUserName" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>15</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.KeyExchangeFailed">
      <apidata name="KeyExchangeFailed" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.MacError">
      <apidata name="MacError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>5</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.NoMoreAuthenticationMethodsAvailable">
      <apidata name="NoMoreAuthenticationMethodsAvailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>14</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.None">
      <apidata name="None" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolError">
      <apidata name="ProtocolError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.ProtocolVersionNotSupported">
      <apidata name="ProtocolVersionNotSupported" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>8</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.Reserved">
      <apidata name="Reserved" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.ServiceNotAvailable">
      <apidata name="ServiceNotAvailable" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>7</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Messages.Transport.DisconnectReason.TooManyConnections">
      <apidata name="TooManyConnections" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </returns>
      <value>12</value>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectReason" ref="false" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.IgnoreMessage">
      <apidata name="IgnoreMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Messages.Transport.IgnoreMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.IgnoreMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Transport.IgnoreMessage.Data" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.IgnoreMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.IgnoreMessage.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.IgnoreMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.IgnoreMessage.Data">
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Data" />
      <setter name="set_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.IgnoreMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.IgnoreMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.IgnoreMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.IgnoreMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.IgnoreMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.IKeyExchangedAllowed">
      <apidata name="IKeyExchangedAllowed" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Renci.SshNet.Messages.Transport.DisconnectMessage" ref="true" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
        <type api="T:Renci.SshNet.Messages.Transport.NewKeysMessage" ref="true" />
      </implementors>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup">
      <apidata name="KeyExchangeDhGroupExchangeGroup" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SaveData" />
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.#ctor" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SafePrime" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SubGroup" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SafePrime">
      <apidata name="SafePrime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_SafePrime" />
      <setter name="set_SafePrime" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup.SubGroup">
      <apidata name="SubGroup" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_SubGroup" />
      <setter name="set_SubGroup" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhGroupExchangeGroup" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage">
      <apidata name="KeyExchangeDhReplyMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.#ctor" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.HostKey" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.F" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.Signature" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.F">
      <apidata name="F" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_F" />
      <setter name="set_F" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.HostKey">
      <apidata name="HostKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_HostKey" />
      <setter name="set_HostKey" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage.Signature">
      <apidata name="Signature" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Signature" />
      <setter name="set_Signature" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeDhReplyMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage">
      <apidata name="KeyExchangeInitMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Renci.SshNet.Messages.Transport.IKeyExchangedAllowed" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.Cookie" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.KeyExchangeAlgorithms" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.ServerHostKeyAlgorithms" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsClientToServer" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsServerToClient" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsClientToServer" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsServerToClient" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsClientToServer" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsServerToClient" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LanguagesClientToServer" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LanguagesServerToClient" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.FirstKexPacketFollows" />
        <element api="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.Reserved" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsClientToServer">
      <apidata name="CompressionAlgorithmsClientToServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CompressionAlgorithmsClientToServer" />
      <setter name="set_CompressionAlgorithmsClientToServer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.CompressionAlgorithmsServerToClient">
      <apidata name="CompressionAlgorithmsServerToClient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CompressionAlgorithmsServerToClient" />
      <setter name="set_CompressionAlgorithmsServerToClient" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.Cookie">
      <apidata name="Cookie" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Cookie" />
      <setter name="set_Cookie" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsClientToServer">
      <apidata name="EncryptionAlgorithmsClientToServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EncryptionAlgorithmsClientToServer" />
      <setter name="set_EncryptionAlgorithmsClientToServer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.EncryptionAlgorithmsServerToClient">
      <apidata name="EncryptionAlgorithmsServerToClient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_EncryptionAlgorithmsServerToClient" />
      <setter name="set_EncryptionAlgorithmsServerToClient" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.FirstKexPacketFollows">
      <apidata name="FirstKexPacketFollows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FirstKexPacketFollows" />
      <setter name="set_FirstKexPacketFollows" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.KeyExchangeAlgorithms">
      <apidata name="KeyExchangeAlgorithms" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyExchangeAlgorithms" />
      <setter name="set_KeyExchangeAlgorithms" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LanguagesClientToServer">
      <apidata name="LanguagesClientToServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LanguagesClientToServer" />
      <setter name="set_LanguagesClientToServer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LanguagesServerToClient">
      <apidata name="LanguagesServerToClient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LanguagesServerToClient" />
      <setter name="set_LanguagesServerToClient" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsClientToServer">
      <apidata name="MacAlgorithmsClientToServer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MacAlgorithmsClientToServer" />
      <setter name="set_MacAlgorithmsClientToServer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.MacAlgorithmsServerToClient">
      <apidata name="MacAlgorithmsServerToClient" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MacAlgorithmsServerToClient" />
      <setter name="set_MacAlgorithmsServerToClient" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.Reserved">
      <apidata name="Reserved" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Reserved" />
      <setter name="set_Reserved" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage.ServerHostKeyAlgorithms">
      <apidata name="ServerHostKeyAlgorithms" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServerHostKeyAlgorithms" />
      <setter name="set_ServerHostKeyAlgorithms" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.String" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.NewKeysMessage">
      <apidata name="NewKeysMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Renci.SshNet.Messages.Transport.IKeyExchangedAllowed" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.NewKeysMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.NewKeysMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Transport.NewKeysMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.NewKeysMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.NewKeysMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.NewKeysMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.NewKeysMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.NewKeysMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.NewKeysMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage">
      <apidata name="ServiceAcceptMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.#ctor" />
        <element api="P:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.ServiceName" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.ServiceAcceptMessage.ServiceName">
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ServiceName" />
      <setter name="set_ServiceName" />
      <returns>
        <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.ServiceAcceptMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage">
      <apidata name="ServiceRequestMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.#ctor(Renci.SshNet.Messages.ServiceName)" />
        <element api="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.SaveData" />
        <element api="P:Renci.SshNet.Messages.Transport.ServiceRequestMessage.ServiceName" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.#ctor(Renci.SshNet.Messages.ServiceName)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceName">
          <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.ServiceRequestMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Messages.Transport.ServiceRequestMessage.ServiceName">
      <apidata name="ServiceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ServiceName" />
      <setter name="set_ServiceName" />
      <returns>
        <type api="T:Renci.SshNet.Messages.ServiceName" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.ServiceRequestMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Messages.Transport.UnimplementedMessage">
      <apidata name="UnimplementedMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.LoadData" />
        <element api="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.SaveData" />
        <element api="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.#ctor" />
        <element api="M:Renci.SshNet.Messages.Message.GetBytes" />
        <element api="M:Renci.SshNet.Messages.Message.ToString" />
        <element api="P:Renci.SshNet.Messages.Message.ZeroReaderIndex" />
        <element api="M:Renci.SshNet.Common.SshData.Load(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.LoadBytes(System.Byte[])" />
        <element api="M:Renci.SshNet.Common.SshData.ResetReader" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBytes(System.Int32)" />
        <element api="M:Renci.SshNet.Common.SshData.ReadByte" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBoolean" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt16" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt32" />
        <element api="M:Renci.SshNet.Common.SshData.ReadUInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadInt64" />
        <element api="M:Renci.SshNet.Common.SshData.ReadAsciiString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBinaryString" />
        <element api="M:Renci.SshNet.Common.SshData.ReadBigInt" />
        <element api="M:Renci.SshNet.Common.SshData.ReadNamesList" />
        <element api="M:Renci.SshNet.Common.SshData.ReadExtensionPair" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IEnumerable{System.Byte})" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Byte)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Boolean)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt16)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt32)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.UInt64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Int64)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.String[])" />
        <element api="M:Renci.SshNet.Common.SshData.Write(System.Collections.Generic.IDictionary{System.String,System.String})" />
        <element api="M:Renci.SshNet.Common.SshData.WriteAscii(System.String)" />
        <element api="M:Renci.SshNet.Common.SshData.WriteBinaryString(System.Byte[])" />
        <element api="P:Renci.SshNet.Common.SshData.IsEndOfData" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.UnimplementedMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.LoadData">
      <apidata name="LoadData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.LoadData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.UnimplementedMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Messages.Transport.UnimplementedMessage.SaveData">
      <apidata name="SaveData" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Common.SshData.SaveData">
          <type api="T:Renci.SshNet.Common.SshData" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Messages.Transport" />
        <type api="T:Renci.SshNet.Messages.Transport.UnimplementedMessage" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Security">
      <apidata name="Renci.SshNet.Security" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Security.Algorithm" />
        <element api="T:Renci.SshNet.Security.KeyExchange" />
        <element api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" />
        <element api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" />
        <element api="T:Renci.SshNet.Security.HostAlgorithm" />
        <element api="T:Renci.SshNet.Security.CertificateHostAlgorithm" />
        <element api="T:Renci.SshNet.Security.Key" />
        <element api="T:Renci.SshNet.Security.DsaKey" />
        <element api="T:Renci.SshNet.Security.RsaKey" />
        <element api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1" />
        <element api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256" />
        <element api="T:Renci.SshNet.Security.KeyHostAlgorithm" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Security.Algorithm">
      <apidata name="Algorithm" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Algorithm.#ctor" />
        <element api="P:Renci.SshNet.Security.Algorithm.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Algorithm.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Algorithm.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.CertificateHostAlgorithm">
      <apidata name="CertificateHostAlgorithm" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.CertificateHostAlgorithm.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Security.CertificateHostAlgorithm.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.CertificateHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])" />
        <element api="P:Renci.SshNet.Security.CertificateHostAlgorithm.Data" />
        <element api="P:Renci.SshNet.Security.HostAlgorithm.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.CertificateHostAlgorithm.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.CertificateHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.CertificateHostAlgorithm.Data">
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.HostAlgorithm.Data">
          <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.CertificateHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.CertificateHostAlgorithm.Sign(System.Byte[])">
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.HostAlgorithm.Sign(System.Byte[])">
          <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.CertificateHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.CertificateHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
      <apidata name="VerifySignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.HostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
          <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.CertificateHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.DsaKey">
      <apidata name="DsaKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Security.DsaKey.#ctor" />
        <element api="M:Renci.SshNet.Security.DsaKey.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.DsaKey.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Security.DsaKey.Dispose" />
        <element api="M:Renci.SshNet.Security.DsaKey.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.DsaKey.Finalize" />
        <element api="P:Renci.SshNet.Security.DsaKey.P" />
        <element api="P:Renci.SshNet.Security.DsaKey.Q" />
        <element api="P:Renci.SshNet.Security.DsaKey.G" />
        <element api="P:Renci.SshNet.Security.DsaKey.Y" />
        <element api="P:Renci.SshNet.Security.DsaKey.X" />
        <element api="P:Renci.SshNet.Security.DsaKey.KeyLength" />
        <element api="P:Renci.SshNet.Security.DsaKey.DigitalSignature" />
        <element api="P:Renci.SshNet.Security.DsaKey.Public" />
        <element api="F:Renci.SshNet.Security.Key._privateKey" />
        <element api="M:Renci.SshNet.Security.Key.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Key.VerifySignature(System.Byte[],System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.DsaKey.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.DsaKey.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="p">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="q">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="g">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="y">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="x">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.DsaKey.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.DsaKey.DigitalSignature">
      <apidata name="DigitalSignature" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Key.DigitalSignature">
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DigitalSignature" />
      <returns>
        <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.DsaKey.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.DsaKey.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.DsaKey.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.DsaKey.G">
      <apidata name="G" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_G" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.DsaKey.KeyLength">
      <apidata name="KeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Key.KeyLength">
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.DsaKey.P">
      <apidata name="P" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_P" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.DsaKey.Public">
      <apidata name="Public" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Key.Public">
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Public" />
      <setter name="set_Public" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.DsaKey.Q">
      <apidata name="Q" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Q" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.DsaKey.X">
      <apidata name="X" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_X" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.DsaKey.Y">
      <apidata name="Y" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Y" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.HostAlgorithm">
      <apidata name="HostAlgorithm" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.CertificateHostAlgorithm" ref="true" />
          <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.HostAlgorithm.#ctor(System.String)" />
        <element api="M:Renci.SshNet.Security.HostAlgorithm.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.HostAlgorithm.VerifySignature(System.Byte[],System.Byte[])" />
        <element api="P:Renci.SshNet.Security.HostAlgorithm.Name" />
        <element api="P:Renci.SshNet.Security.HostAlgorithm.Data" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.HostAlgorithm.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.HostAlgorithm.Data">
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.HostAlgorithm.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.HostAlgorithm.Sign(System.Byte[])">
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.HostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
      <apidata name="VerifySignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Key">
      <apidata name="Key" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
          <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:Renci.SshNet.Security.Key._privateKey" />
        <element api="M:Renci.SshNet.Security.Key.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Key.#ctor" />
        <element api="M:Renci.SshNet.Security.Key.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Key.VerifySignature(System.Byte[],System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Key.DigitalSignature" />
        <element api="P:Renci.SshNet.Security.Key.Public" />
        <element api="P:Renci.SshNet.Security.Key.KeyLength" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Key.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Key.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.Key._privateKey">
      <apidata name="_privateKey" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Key.DigitalSignature">
      <apidata name="DigitalSignature" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_DigitalSignature" />
      <returns>
        <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Key.KeyLength">
      <apidata name="KeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Key.Public">
      <apidata name="Public" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Public" />
      <setter name="set_Public" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Key.Sign(System.Byte[])">
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Key.VerifySignature(System.Byte[],System.Byte[])">
      <apidata name="VerifySignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.KeyExchange">
      <apidata name="KeyExchange" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Security.KeyExchange.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Finish" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateCompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateDecompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CanTrustHostKey(Renci.SshNet.Security.KeyHostAlgorithm)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.ValidateExchangeHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CalculateHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Hash(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchange.SendMessage(Renci.SshNet.Messages.Message)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Finalize" />
        <element api="M:Renci.SshNet.Security.KeyExchange.#ctor" />
        <element api="P:Renci.SshNet.Security.KeyExchange.Session" />
        <element api="P:Renci.SshNet.Security.KeyExchange.SharedKey" />
        <element api="P:Renci.SshNet.Security.KeyExchange.ExchangeHash" />
        <element api="E:Renci.SshNet.Security.KeyExchange.HostKeyReceived" />
        <element api="P:Renci.SshNet.Security.Algorithm.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.CalculateHash">
      <apidata name="CalculateHash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.CanTrustHostKey(Renci.SshNet.Security.KeyHostAlgorithm)">
      <apidata name="CanTrustHostKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="host">
          <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.CreateClientCipher">
      <apidata name="CreateClientCipher" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.CreateClientHash">
      <apidata name="CreateClientHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.CreateCompressor">
      <apidata name="CreateCompressor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.CreateDecompressor">
      <apidata name="CreateDecompressor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Renci.SshNet.Compression.Compressor" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.CreateServerCipher">
      <apidata name="CreateServerCipher" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.CreateServerHash">
      <apidata name="CreateServerHash" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyExchange.ExchangeHash">
      <apidata name="ExchangeHash" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ExchangeHash" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.Finish">
      <apidata name="Finish" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.Hash(System.Byte[])">
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="hashData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Security.KeyExchange.HostKeyReceived">
      <apidata name="HostKeyReceived" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_HostKeyReceived" />
      <remover name="remove_HostKeyReceived" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.HostKeyEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.SendMessage(Renci.SshNet.Messages.Message)">
      <apidata name="SendMessage" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Message" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyExchange.Session">
      <apidata name="Session" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Session" />
      <setter name="set_Session" />
      <returns>
        <type api="T:Renci.SshNet.Session" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyExchange.SharedKey">
      <apidata name="SharedKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_SharedKey" />
      <setter name="set_SharedKey" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchange.ValidateExchangeHash">
      <apidata name="ValidateExchangeHash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.KeyExchangeDiffieHellman">
      <apidata name="KeyExchangeDiffieHellman" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" ref="true" />
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._group" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._prime" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientPayload" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverPayload" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientExchangeValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverExchangeValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._randomValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._hostKey" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._signature" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.ValidateExchangeHash" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.PopulateClientExchangeValue" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.#ctor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Finish" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateCompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateDecompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CanTrustHostKey(Renci.SshNet.Security.KeyHostAlgorithm)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CalculateHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Hash(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchange.SendMessage(Renci.SshNet.Messages.Message)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Finalize" />
        <element api="P:Renci.SshNet.Security.KeyExchange.Session" />
        <element api="P:Renci.SshNet.Security.KeyExchange.SharedKey" />
        <element api="P:Renci.SshNet.Security.KeyExchange.ExchangeHash" />
        <element api="E:Renci.SshNet.Security.KeyExchange.HostKeyReceived" />
        <element api="P:Renci.SshNet.Security.Algorithm.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientExchangeValue">
      <apidata name="_clientExchangeValue" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientPayload">
      <apidata name="_clientPayload" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._group">
      <apidata name="_group" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._hostKey">
      <apidata name="_hostKey" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._prime">
      <apidata name="_prime" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._randomValue">
      <apidata name="_randomValue" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverExchangeValue">
      <apidata name="_serverExchangeValue" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverPayload">
      <apidata name="_serverPayload" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._signature">
      <apidata name="_signature" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])">
      <apidata name="HandleServerDhReply" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="hostKey">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="serverExchangeValue">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.PopulateClientExchangeValue">
      <apidata name="PopulateClientExchangeValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchange.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.ValidateExchangeHash">
      <apidata name="ValidateExchangeHash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchange.ValidateExchangeHash">
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1">
      <apidata name="KeyExchangeDiffieHellmanGroup1Sha1" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" ref="true" />
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.#ctor" />
        <element api="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.Name" />
        <element api="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.GroupPrime" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.CalculateHash" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.Finish" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._group" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._prime" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientPayload" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverPayload" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientExchangeValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverExchangeValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._randomValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._hostKey" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._signature" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.ValidateExchangeHash" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.PopulateClientExchangeValue" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateCompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateDecompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CanTrustHostKey(Renci.SshNet.Security.KeyHostAlgorithm)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Hash(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchange.SendMessage(Renci.SshNet.Messages.Message)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Finalize" />
        <element api="P:Renci.SshNet.Security.KeyExchange.Session" />
        <element api="P:Renci.SshNet.Security.KeyExchange.SharedKey" />
        <element api="P:Renci.SshNet.Security.KeyExchange.ExchangeHash" />
        <element api="E:Renci.SshNet.Security.KeyExchange.HostKeyReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.GroupPrime">
      <apidata name="GroupPrime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.GroupPrime">
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_GroupPrime" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Algorithm.Name">
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256">
      <apidata name="KeyExchangeDiffieHellmanGroupExchangeSha256" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Finish" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.#ctor" />
        <element api="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Name" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._group" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._prime" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientPayload" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverPayload" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientExchangeValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverExchangeValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._randomValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._hostKey" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._signature" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.ValidateExchangeHash" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.PopulateClientExchangeValue" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateCompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateDecompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CanTrustHostKey(Renci.SshNet.Security.KeyHostAlgorithm)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.SendMessage(Renci.SshNet.Messages.Message)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Finalize" />
        <element api="P:Renci.SshNet.Security.KeyExchange.Session" />
        <element api="P:Renci.SshNet.Security.KeyExchange.SharedKey" />
        <element api="P:Renci.SshNet.Security.KeyExchange.ExchangeHash" />
        <element api="E:Renci.SshNet.Security.KeyExchange.HostKeyReceived" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.CalculateHash">
      <apidata name="CalculateHash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchange.CalculateHash">
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Finish">
      <apidata name="Finish" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchange.Finish">
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Hash(System.Byte[])">
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchange.Hash(System.Byte[])">
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="hashBytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Algorithm.Name">
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupExchangeSha256" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1">
      <apidata name="KeyExchangeDiffieHellmanGroupSha1" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
          <type api="T:Renci.SshNet.Security.Algorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroup1Sha1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.CalculateHash" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.Finish" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.#ctor" />
        <element api="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.GroupPrime" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._group" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._prime" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientPayload" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverPayload" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._clientExchangeValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._serverExchangeValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._randomValue" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._hostKey" />
        <element api="F:Renci.SshNet.Security.KeyExchangeDiffieHellman._signature" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.ValidateExchangeHash" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.PopulateClientExchangeValue" />
        <element api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.HandleServerDhReply(System.Byte[],Renci.SshNet.Common.BigInteger,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientCipher" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateServerHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateClientHash" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateCompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CreateDecompressor" />
        <element api="M:Renci.SshNet.Security.KeyExchange.CanTrustHostKey(Renci.SshNet.Security.KeyHostAlgorithm)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Hash(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyExchange.SendMessage(Renci.SshNet.Messages.Message)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.KeyExchange.Finalize" />
        <element api="P:Renci.SshNet.Security.KeyExchange.Session" />
        <element api="P:Renci.SshNet.Security.KeyExchange.SharedKey" />
        <element api="P:Renci.SshNet.Security.KeyExchange.ExchangeHash" />
        <element api="E:Renci.SshNet.Security.KeyExchange.HostKeyReceived" />
        <element api="P:Renci.SshNet.Security.Algorithm.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.CalculateHash">
      <apidata name="CalculateHash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchange.CalculateHash">
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.Finish">
      <apidata name="Finish" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchange.Finish">
          <type api="T:Renci.SshNet.Security.KeyExchange" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.GroupPrime">
      <apidata name="GroupPrime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_GroupPrime" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.KeyExchangeDiffieHellman.Start(Renci.SshNet.Session,Renci.SshNet.Messages.Transport.KeyExchangeInitMessage)">
          <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellman" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Renci.SshNet.Messages.Transport.KeyExchangeInitMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyExchangeDiffieHellmanGroupSha1" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.KeyHostAlgorithm">
      <apidata name="KeyHostAlgorithm" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.KeyHostAlgorithm.#ctor(System.String,Renci.SshNet.Security.Key)" />
        <element api="M:Renci.SshNet.Security.KeyHostAlgorithm.#ctor(System.String,Renci.SshNet.Security.Key,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyHostAlgorithm.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.KeyHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])" />
        <element api="P:Renci.SshNet.Security.KeyHostAlgorithm.Key" />
        <element api="P:Renci.SshNet.Security.KeyHostAlgorithm.Data" />
        <element api="P:Renci.SshNet.Security.HostAlgorithm.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyHostAlgorithm.#ctor(System.String,Renci.SshNet.Security.Key)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyHostAlgorithm.#ctor(System.String,Renci.SshNet.Security.Key,System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyHostAlgorithm.Data">
      <apidata name="Data" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.HostAlgorithm.Data">
          <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Data" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.KeyHostAlgorithm.Key">
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <type api="T:Renci.SshNet.Security.Key" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyHostAlgorithm.Sign(System.Byte[])">
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.HostAlgorithm.Sign(System.Byte[])">
          <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.KeyHostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
      <apidata name="VerifySignature" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.HostAlgorithm.VerifySignature(System.Byte[],System.Byte[])">
          <type api="T:Renci.SshNet.Security.HostAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.KeyHostAlgorithm" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.RsaKey">
      <apidata name="RsaKey" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Security.RsaKey.#ctor" />
        <element api="M:Renci.SshNet.Security.RsaKey.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.RsaKey.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)" />
        <element api="M:Renci.SshNet.Security.RsaKey.Dispose" />
        <element api="M:Renci.SshNet.Security.RsaKey.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.RsaKey.Finalize" />
        <element api="P:Renci.SshNet.Security.RsaKey.Modulus" />
        <element api="P:Renci.SshNet.Security.RsaKey.Exponent" />
        <element api="P:Renci.SshNet.Security.RsaKey.D" />
        <element api="P:Renci.SshNet.Security.RsaKey.P" />
        <element api="P:Renci.SshNet.Security.RsaKey.Q" />
        <element api="P:Renci.SshNet.Security.RsaKey.DP" />
        <element api="P:Renci.SshNet.Security.RsaKey.DQ" />
        <element api="P:Renci.SshNet.Security.RsaKey.InverseQ" />
        <element api="P:Renci.SshNet.Security.RsaKey.KeyLength" />
        <element api="P:Renci.SshNet.Security.RsaKey.DigitalSignature" />
        <element api="P:Renci.SshNet.Security.RsaKey.Public" />
        <element api="F:Renci.SshNet.Security.Key._privateKey" />
        <element api="M:Renci.SshNet.Security.Key.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Key.VerifySignature(System.Byte[],System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.RsaKey.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.RsaKey.#ctor(Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger,Renci.SshNet.Common.BigInteger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="modulus">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="exponent">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="d">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="p">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="q">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
        <parameter name="inverseQ">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.RsaKey.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.D">
      <apidata name="D" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_D" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.DigitalSignature">
      <apidata name="DigitalSignature" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Key.DigitalSignature">
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_DigitalSignature" />
      <returns>
        <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.RsaKey.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.RsaKey.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.DP">
      <apidata name="DP" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DP" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.DQ">
      <apidata name="DQ" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DQ" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.Exponent">
      <apidata name="Exponent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exponent" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.RsaKey.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.InverseQ">
      <apidata name="InverseQ" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InverseQ" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.KeyLength">
      <apidata name="KeyLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Key.KeyLength">
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_KeyLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.Modulus">
      <apidata name="Modulus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Modulus" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.P">
      <apidata name="P" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_P" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.Public">
      <apidata name="Public" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Renci.SshNet.Security.Key.Public">
          <type api="T:Renci.SshNet.Security.Key" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Public" />
      <setter name="set_Public" />
      <returns>
        <arrayOf rank="1">
          <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.RsaKey.Q">
      <apidata name="Q" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Q" />
      <returns>
        <type api="T:Renci.SshNet.Common.BigInteger" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security" />
        <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Security.Cryptography">
      <apidata name="Renci.SshNet.Security.Cryptography" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Security.Cryptography.Cipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.AsymmetricCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.BlockCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" />
        <element api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" />
        <element api="T:Renci.SshNet.Security.Cryptography.StreamCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature" />
        <element api="T:Renci.SshNet.Security.Cryptography.MD5Hash" />
        <element api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" />
        <element api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" />
        <element api="T:Renci.SshNet.Security.Cryptography.HMac`1" />
        <element api="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.AsymmetricCipher">
      <apidata name="AsymmetricCipher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.AsymmetricCipher.#ctor" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.AsymmetricCipher.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.AsymmetricCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.BlockCipher">
      <apidata name="BlockCipher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.#ctor(System.Byte[],System.Int32,Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.BlockCipher.#ctor(System.Byte[],System.Int32,Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="blockSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </parameter>
        <parameter name="padding">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize">
      <apidata name="_blockSize" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize">
      <apidata name="BlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])">
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])">
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Cipher">
      <apidata name="Cipher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.AsymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToBigEndian(System.UInt32,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToBigEndian(System.UInt32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt32(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt32(System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt64(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt64(System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToBigEndian(System.UInt64,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToBigEndian(System.UInt64,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToLittleEndian(System.UInt32,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToLittleEndian(System.UInt32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt32(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt32(System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt64(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt64(System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToLittleEndian(System.UInt64,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToLittleEndian(System.UInt64,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt32(System.Byte[])">
      <apidata name="BigEndianToUInt32" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt32(System.Byte[],System.Int32)">
      <apidata name="BigEndianToUInt32" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt64(System.Byte[])">
      <apidata name="BigEndianToUInt64" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.BigEndianToUInt64(System.Byte[],System.Int32)">
      <apidata name="BigEndianToUInt64" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])">
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])">
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt32(System.Byte[])">
      <apidata name="LittleEndianToUInt32" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt32(System.Byte[],System.Int32)">
      <apidata name="LittleEndianToUInt32" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt64(System.Byte[])">
      <apidata name="LittleEndianToUInt64" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.LittleEndianToUInt64(System.Byte[],System.Int32)">
      <apidata name="LittleEndianToUInt64" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToBigEndian(System.UInt32,System.Byte[])">
      <apidata name="UInt32ToBigEndian" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="number">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToBigEndian(System.UInt32,System.Byte[],System.Int32)">
      <apidata name="UInt32ToBigEndian" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="number">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToLittleEndian(System.UInt32,System.Byte[])">
      <apidata name="UInt32ToLittleEndian" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="number">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.UInt32ToLittleEndian(System.UInt32,System.Byte[],System.Int32)">
      <apidata name="UInt32ToLittleEndian" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="number">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToBigEndian(System.UInt64,System.Byte[])">
      <apidata name="UInt64ToBigEndian" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="number">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToBigEndian(System.UInt64,System.Byte[],System.Int32)">
      <apidata name="UInt64ToBigEndian" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="number">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToLittleEndian(System.UInt64,System.Byte[])">
      <apidata name="UInt64ToLittleEndian" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="number">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Cipher.UInt64ToLittleEndian(System.UInt64,System.Byte[],System.Int32)">
      <apidata name="UInt64ToLittleEndian" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="number">
          <type api="T:System.UInt64" ref="false" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature">
      <apidata name="CipherDigitalSignature" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.#ctor(Renci.SshNet.Common.ObjectIdentifier,Renci.SshNet.Security.Cryptography.AsymmetricCipher)" />
        <element api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Verify(System.Byte[],System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Hash(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.DerEncode(System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.#ctor(Renci.SshNet.Common.ObjectIdentifier,Renci.SshNet.Security.Cryptography.AsymmetricCipher)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="oid">
          <type api="T:Renci.SshNet.Common.ObjectIdentifier" ref="false" />
        </parameter>
        <parameter name="cipher">
          <type api="T:Renci.SshNet.Security.Cryptography.AsymmetricCipher" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.DerEncode(System.Byte[])">
      <apidata name="DerEncode" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="hashData">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Hash(System.Byte[])">
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Sign(System.Byte[])">
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Sign(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Verify(System.Byte[],System.Byte[])">
      <apidata name="Verify" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Verify(System.Byte[],System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.DigitalSignature">
      <apidata name="DigitalSignature" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Verify(System.Byte[],System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.DigitalSignature.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DigitalSignature.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Sign(System.Byte[])">
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Verify(System.Byte[],System.Byte[])">
      <apidata name="Verify" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature">
      <apidata name="DsaDigitalSignature" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.#ctor(Renci.SshNet.Security.DsaKey)" />
        <element api="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Verify(System.Byte[],System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Dispose" />
        <element api="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Finalize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.#ctor(Renci.SshNet.Security.DsaKey)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <type api="T:Renci.SshNet.Security.DsaKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Sign(System.Byte[])">
      <apidata name="Sign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Sign(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.DsaDigitalSignature.Verify(System.Byte[],System.Byte[])">
      <apidata name="Verify" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.DigitalSignature.Verify(System.Byte[],System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="signature">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.DsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.HMac`1">
      <apidata name="HMac" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained ctor="true">
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.HMac`1.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.HMac`1.Initialize" />
        <element api="M:Renci.SshNet.Security.Cryptography.HMac`1.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.HMac`1.HashFinal" />
        <element api="M:Renci.SshNet.Security.Cryptography.HMac`1.Dispose(System.Boolean)" />
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:Renci.SshNet.Security.Cryptography.HMac`1.BlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.HMac`1.Key" />
        <element api="F:System.Security.Cryptography.KeyedHashAlgorithm.KeyValue">
          <apidata name="KeyValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <apidata name="HashSizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <apidata name="HashValue" group="member" subgroup="field" />
          <memberdata visibility="family or assembly" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.State">
          <apidata name="State" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="inputStream">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <apidata name="TransformBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="outputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="outputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <apidata name="TransformFinalBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <apidata name="HashSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_HashSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <apidata name="Hash" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Hash" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <apidata name="InputBlockSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_InputBlockSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <apidata name="OutputBlockSize" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_OutputBlockSize" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <apidata name="CanTransformMultipleBlocks" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTransformMultipleBlocks" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <apidata name="CanReuseTransform" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanReuseTransform" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <implements>
            <member api="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.HMac`1.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.HMac`1" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.HMac`1.BlockSize">
      <apidata name="BlockSize" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.HMac`1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.HMac`1.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.KeyedHashAlgorithm.Dispose(System.Boolean)">
          <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.HMac`1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.HMac`1.HashCore(System.Byte[],System.Int32,System.Int32)">
      <apidata name="HashCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="rgb">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="ib">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cb">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.HMac`1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.HMac`1.HashFinal">
      <apidata name="HashFinal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.HMac`1" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.HMac`1.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.HMac`1" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.HMac`1.Key">
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.KeyedHashAlgorithm.Key">
          <type api="T:System.Security.Cryptography.KeyedHashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.HMac`1" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.MD5Hash">
      <apidata name="MD5Hash" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.MD5Hash.#ctor" />
        <element api="M:Renci.SshNet.Security.Cryptography.MD5Hash.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.MD5Hash.HashFinal" />
        <element api="M:Renci.SshNet.Security.Cryptography.MD5Hash.Initialize" />
        <element api="P:Renci.SshNet.Security.Cryptography.MD5Hash.HashSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.MD5Hash.InputBlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.MD5Hash.OutputBlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.MD5Hash.CanReuseTransform" />
        <element api="P:Renci.SshNet.Security.Cryptography.MD5Hash.CanTransformMultipleBlocks" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <apidata name="HashSizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <apidata name="HashValue" group="member" subgroup="field" />
          <memberdata visibility="family or assembly" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.State">
          <apidata name="State" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="inputStream">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <apidata name="TransformBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="outputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="outputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <apidata name="TransformFinalBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <apidata name="Hash" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Hash" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.MD5Hash.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.MD5Hash.CanReuseTransform">
      <apidata name="CanReuseTransform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanReuseTransform" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.MD5Hash.CanTransformMultipleBlocks">
      <apidata name="CanTransformMultipleBlocks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanTransformMultipleBlocks" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.MD5Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
      <apidata name="HashCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="ibStart">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cbSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.MD5Hash.HashFinal">
      <apidata name="HashFinal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.MD5Hash.HashSize">
      <apidata name="HashSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HashSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.MD5Hash.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.MD5Hash.InputBlockSize">
      <apidata name="InputBlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_InputBlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.MD5Hash.OutputBlockSize">
      <apidata name="OutputBlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_OutputBlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.MD5Hash" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature">
      <apidata name="RsaDigitalSignature" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.DigitalSignature" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.#ctor(Renci.SshNet.Security.RsaKey)" />
        <element api="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Hash(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Dispose" />
        <element api="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Finalize" />
        <element api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Verify(System.Byte[],System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Sign(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.DerEncode(System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.#ctor(Renci.SshNet.Security.RsaKey)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="rsaKey">
          <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.RsaDigitalSignature.Hash(System.Byte[])">
      <apidata name="Hash" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.CipherDigitalSignature.Hash(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.CipherDigitalSignature" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.RsaDigitalSignature" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.SHA1Hash">
      <apidata name="SHA1Hash" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.SHA1Hash.#ctor" />
        <element api="M:Renci.SshNet.Security.Cryptography.SHA1Hash.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.SHA1Hash.HashFinal" />
        <element api="M:Renci.SshNet.Security.Cryptography.SHA1Hash.Initialize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA1Hash.HashSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA1Hash.InputBlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA1Hash.OutputBlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA1Hash.CanReuseTransform" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA1Hash.CanTransformMultipleBlocks" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <apidata name="HashSizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <apidata name="HashValue" group="member" subgroup="field" />
          <memberdata visibility="family or assembly" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.State">
          <apidata name="State" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="inputStream">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <apidata name="TransformBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="outputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="outputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <apidata name="TransformFinalBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <apidata name="Hash" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Hash" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SHA1Hash.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA1Hash.CanReuseTransform">
      <apidata name="CanReuseTransform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanReuseTransform" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA1Hash.CanTransformMultipleBlocks">
      <apidata name="CanTransformMultipleBlocks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanTransformMultipleBlocks" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SHA1Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
      <apidata name="HashCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="ibStart">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cbSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SHA1Hash.HashFinal">
      <apidata name="HashFinal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA1Hash.HashSize">
      <apidata name="HashSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HashSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SHA1Hash.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA1Hash.InputBlockSize">
      <apidata name="InputBlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_InputBlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA1Hash.OutputBlockSize">
      <apidata name="OutputBlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_OutputBlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA1Hash" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.SHA256Hash">
      <apidata name="SHA256Hash" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.SHA256Hash.#ctor" />
        <element api="M:Renci.SshNet.Security.Cryptography.SHA256Hash.HashCore(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.SHA256Hash.HashFinal" />
        <element api="M:Renci.SshNet.Security.Cryptography.SHA256Hash.Initialize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA256Hash.HashSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA256Hash.InputBlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA256Hash.OutputBlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA256Hash.CanReuseTransform" />
        <element api="P:Renci.SshNet.Security.Cryptography.SHA256Hash.CanTransformMultipleBlocks" />
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashSizeValue">
          <apidata name="HashSizeValue" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.HashValue">
          <apidata name="HashValue" group="member" subgroup="field" />
          <memberdata visibility="family or assembly" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="F:System.Security.Cryptography.HashAlgorithm.State">
          <apidata name="State" group="member" subgroup="field" />
          <memberdata visibility="family" />
          <fielddata literal="false" initonly="false" serialized="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.IO.Stream)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="inputStream">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[])">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.ComputeHash(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ComputeHash" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <apidata name="TransformBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="outputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="outputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
          <apidata name="TransformFinalBlock" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <parameters>
            <parameter name="inputBuffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="inputOffset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="inputCount">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <implements>
            <member api="M:System.Security.Cryptography.ICryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
              <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Security.Cryptography.HashAlgorithm.Clear">
          <apidata name="Clear" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="P:System.Security.Cryptography.HashAlgorithm.Hash">
          <apidata name="Hash" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Hash" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Security.Cryptography" />
            <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SHA256Hash.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA256Hash.CanReuseTransform">
      <apidata name="CanReuseTransform" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.CanReuseTransform">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanReuseTransform" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanReuseTransform">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA256Hash.CanTransformMultipleBlocks">
      <apidata name="CanTransformMultipleBlocks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanTransformMultipleBlocks" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.CanTransformMultipleBlocks">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SHA256Hash.HashCore(System.Byte[],System.Int32,System.Int32)">
      <apidata name="HashCore" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashCore(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="ibStart">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="cbSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SHA256Hash.HashFinal">
      <apidata name="HashFinal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.HashFinal">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA256Hash.HashSize">
      <apidata name="HashSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.HashSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_HashSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SHA256Hash.Initialize">
      <apidata name="Initialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Security.Cryptography.HashAlgorithm.Initialize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA256Hash.InputBlockSize">
      <apidata name="InputBlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.InputBlockSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_InputBlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.InputBlockSize">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SHA256Hash.OutputBlockSize">
      <apidata name="OutputBlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Security.Cryptography.HashAlgorithm.OutputBlockSize">
          <type api="T:System.Security.Cryptography.HashAlgorithm" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_OutputBlockSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Security.Cryptography.ICryptoTransform.OutputBlockSize">
          <type api="T:System.Security.Cryptography.ICryptoTransform" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SHA256Hash" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.StreamCipher">
      <apidata name="StreamCipher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.StreamCipher.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.StreamCipher.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.StreamCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.SymmetricCipher">
      <apidata name="SymmetricCipher" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.StreamCipher" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key">
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Key" />
      <setter name="set_Key" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography" />
        <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Security.Cryptography.Ciphers">
      <apidata name="Renci.SshNet.Security.Cryptography.Ciphers" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher">
      <apidata name="AesCipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="P:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.EncryptionKey" />
        <element api="P:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.DecryptionKey" />
        <element api="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </parameter>
        <parameter name="padding">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.DecryptionKey">
      <apidata name="DecryptionKey" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DecryptionKey" />
      <returns>
        <arrayOf rank="2">
          <type api="T:System.UInt32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher.EncryptionKey">
      <apidata name="EncryptionKey" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EncryptionKey" />
      <returns>
        <arrayOf rank="2">
          <type api="T:System.UInt32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.AesCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher">
      <apidata name="Arc4Cipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.StreamCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.Decrypt(System.Byte[])">
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.Encrypt(System.Byte[])">
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Arc4Cipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher">
      <apidata name="BlowfishCipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </parameter>
        <parameter name="padding">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.BlowfishCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher">
      <apidata name="CastCipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </parameter>
        <parameter name="padding">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CastCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode">
      <apidata name="CipherMode" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.Cipher" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.IV" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode._blockSize">
      <apidata name="_blockSize" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.Cipher">
      <apidata name="Cipher" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.IV">
      <apidata name="IV" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding">
      <apidata name="CipherPadding" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding.Pad(System.Int32,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding.Pad(System.Int32,System.Byte[])">
      <apidata name="Pad" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="blockSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher">
      <apidata name="DesCipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.GenerateWorkingKey(System.Boolean,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.ValidateKey" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.DesFunc(System.Int32[],System.Byte[],System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </parameter>
        <parameter name="padding">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.DesFunc(System.Int32[],System.Byte[],System.Int32,System.Byte[],System.Int32)">
      <apidata name="DesFunc" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="wKey">
          <arrayOf rank="1">
            <type api="T:System.Int32" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inOff">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outBytes">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outOff">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.GenerateWorkingKey(System.Boolean,System.Byte[])">
      <apidata name="GenerateWorkingKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="encrypting">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Int32" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.ValidateKey">
      <apidata name="ValidateKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher">
      <apidata name="RsaCipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.AsymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.#ctor(Renci.SshNet.Security.RsaKey)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.Decrypt(System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.#ctor(Renci.SshNet.Security.RsaKey)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <type api="T:Renci.SshNet.Security.RsaKey" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.Decrypt(System.Byte[])">
      <apidata name="Decrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Cipher.Decrypt(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher.Encrypt(System.Byte[])">
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Cipher.Encrypt(System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.RsaCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher">
      <apidata name="SerpentCipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </parameter>
        <parameter name="padding">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.SerpentCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher">
      <apidata name="TripleDesCipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.ValidateKey" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.GenerateWorkingKey(System.Boolean,System.Byte[])" />
        <element api="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </parameter>
        <parameter name="padding">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher.ValidateKey">
      <apidata name="ValidateKey" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher.ValidateKey">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.DesCipher" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TripleDesCipher" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher">
      <apidata name="TwofishCipher" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.BlockCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
          <type api="T:Renci.SshNet.Security.Cryptography.Cipher" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.BlockCipher._blockSize" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Encrypt(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.BlockCipher.Decrypt(System.Byte[])" />
        <element api="P:Renci.SshNet.Security.Cryptography.BlockCipher.BlockSize" />
        <element api="P:Renci.SshNet.Security.Cryptography.SymmetricCipher.Key" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.#ctor(System.Byte[],Renci.SshNet.Security.Cryptography.Ciphers.CipherMode,Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="key">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="mode">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </parameter>
        <parameter name="padding">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.SymmetricCipher.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.SymmetricCipher" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.TwofishCipher" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes">
      <apidata name="Renci.SshNet.Security.Cryptography.Ciphers.Modes" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode">
      <apidata name="CbcCipherMode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.Cipher" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.IV" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode._blockSize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CbcCipherMode" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode">
      <apidata name="CfbCipherMode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.Cipher" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.IV" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode._blockSize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CfbCipherMode" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode">
      <apidata name="CtrCipherMode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.Cipher" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.IV" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode._blockSize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.CtrCipherMode" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode">
      <apidata name="OfbCipherMode" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.#ctor(System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.Cipher" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.IV" />
        <element api="F:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode._blockSize" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.#ctor(System.Byte[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="iv">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="DecryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.DecryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
      <apidata name="EncryptBlock" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode.EncryptBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherMode" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="inputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="inputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="inputCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="outputBuffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="outputOffset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Modes" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Modes.OfbCipherMode" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Security.Cryptography.Ciphers.Paddings">
      <apidata name="Renci.SshNet.Security.Cryptography.Ciphers.Paddings" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding" />
        <element api="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding">
      <apidata name="PKCS5Padding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding.Pad(System.Int32,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Paddings" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Paddings" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding.Pad(System.Int32,System.Byte[])">
      <apidata name="Pad" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding.Pad(System.Int32,System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="blockSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Paddings" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS5Padding" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding">
      <apidata name="PKCS7Padding" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding.Pad(System.Int32,System.Byte[])" />
        <element api="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Paddings" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Paddings" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding.Pad(System.Int32,System.Byte[])">
      <apidata name="Pad" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding.Pad(System.Int32,System.Byte[])">
          <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.CipherPadding" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="blockSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="input">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Security.Cryptography.Ciphers.Paddings" />
        <type api="T:Renci.SshNet.Security.Cryptography.Ciphers.Paddings.PKCS7Padding" ref="true" />
      </containers>
    </api>
    <api id="N:Renci.SshNet.Sftp">
      <apidata name="Renci.SshNet.Sftp" group="namespace" />
      <elements>
        <element api="T:Renci.SshNet.Sftp.SubsystemSession" />
        <element api="T:Renci.SshNet.Sftp.SftpDownloadAsyncResult" />
        <element api="T:Renci.SshNet.Sftp.SftpFile" />
        <element api="T:Renci.SshNet.Sftp.SftpFileAttributes" />
        <element api="T:Renci.SshNet.Sftp.SftpFileStream" />
        <element api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" />
        <element api="T:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult" />
        <element api="T:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult" />
        <element api="T:Renci.SshNet.Sftp.SftpUploadAsyncResult" />
      </elements>
    </api>
    <api id="T:Renci.SshNet.Sftp.SftpDownloadAsyncResult">
      <apidata name="SftpDownloadAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Sftp.SftpDownloadAsyncResult.#ctor(System.AsyncCallback,System.Object)" />
        <element api="P:Renci.SshNet.Sftp.SftpDownloadAsyncResult.DownloadedBytes" />
        <element api="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult.EndInvoke" />
        <element api="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncState" />
        <element api="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle" />
        <element api="P:Renci.SshNet.Common.AsyncResult.IsCompleted" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpDownloadAsyncResult.#ctor(System.AsyncCallback,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpDownloadAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpDownloadAsyncResult.DownloadedBytes">
      <apidata name="DownloadedBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_DownloadedBytes" />
      <setter name="set_DownloadedBytes" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpDownloadAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Sftp.SftpFile">
      <apidata name="SftpFile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Sftp.SftpFile.SetPermissions(System.Int16)" />
        <element api="M:Renci.SshNet.Sftp.SftpFile.Delete" />
        <element api="M:Renci.SshNet.Sftp.SftpFile.MoveTo(System.String)" />
        <element api="M:Renci.SshNet.Sftp.SftpFile.UpdateStatus" />
        <element api="M:Renci.SshNet.Sftp.SftpFile.ToString" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.Attributes" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.FullName" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.Name" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.LastAccessTime" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.LastWriteTime" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.LastAccessTimeUtc" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.LastWriteTimeUtc" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.Length" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.UserId" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.GroupId" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.IsSocket" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.IsSymbolicLink" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.IsRegularFile" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.IsBlockDevice" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.IsDirectory" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.IsCharacterDevice" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.IsNamedPipe" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.OwnerCanRead" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.OwnerCanWrite" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.OwnerCanExecute" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.GroupCanRead" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.GroupCanWrite" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.GroupCanExecute" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.OthersCanRead" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.OthersCanWrite" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.OthersCanExecute" />
        <element api="P:Renci.SshNet.Sftp.SftpFile.Extensions" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.Attributes">
      <apidata name="Attributes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Attributes" />
      <setter name="set_Attributes" />
      <returns>
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFile.Delete">
      <apidata name="Delete" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.Extensions">
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Extensions" />
      <setter name="set_Extensions" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.FullName">
      <apidata name="FullName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FullName" />
      <setter name="set_FullName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.GroupCanExecute">
      <apidata name="GroupCanExecute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupCanExecute" />
      <setter name="set_GroupCanExecute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.GroupCanRead">
      <apidata name="GroupCanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupCanRead" />
      <setter name="set_GroupCanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.GroupCanWrite">
      <apidata name="GroupCanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupCanWrite" />
      <setter name="set_GroupCanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.GroupId">
      <apidata name="GroupId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupId" />
      <setter name="set_GroupId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.IsBlockDevice">
      <apidata name="IsBlockDevice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsBlockDevice" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.IsCharacterDevice">
      <apidata name="IsCharacterDevice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsCharacterDevice" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.IsDirectory">
      <apidata name="IsDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsDirectory" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.IsNamedPipe">
      <apidata name="IsNamedPipe" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsNamedPipe" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.IsRegularFile">
      <apidata name="IsRegularFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsRegularFile" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.IsSocket">
      <apidata name="IsSocket" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSocket" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.IsSymbolicLink">
      <apidata name="IsSymbolicLink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsSymbolicLink" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.LastAccessTime">
      <apidata name="LastAccessTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastAccessTime" />
      <setter name="set_LastAccessTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.LastAccessTimeUtc">
      <apidata name="LastAccessTimeUtc" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastAccessTimeUtc" />
      <setter name="set_LastAccessTimeUtc" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.LastWriteTime">
      <apidata name="LastWriteTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastWriteTime" />
      <setter name="set_LastWriteTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.LastWriteTimeUtc">
      <apidata name="LastWriteTimeUtc" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastWriteTimeUtc" />
      <setter name="set_LastWriteTimeUtc" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFile.MoveTo(System.String)">
      <apidata name="MoveTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="destFileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.OthersCanExecute">
      <apidata name="OthersCanExecute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OthersCanExecute" />
      <setter name="set_OthersCanExecute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.OthersCanRead">
      <apidata name="OthersCanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OthersCanRead" />
      <setter name="set_OthersCanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.OthersCanWrite">
      <apidata name="OthersCanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OthersCanWrite" />
      <setter name="set_OthersCanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.OwnerCanExecute">
      <apidata name="OwnerCanExecute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerCanExecute" />
      <setter name="set_OwnerCanExecute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.OwnerCanRead">
      <apidata name="OwnerCanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerCanRead" />
      <setter name="set_OwnerCanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.OwnerCanWrite">
      <apidata name="OwnerCanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerCanWrite" />
      <setter name="set_OwnerCanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFile.SetPermissions(System.Int16)">
      <apidata name="SetPermissions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mode">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFile.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFile.UpdateStatus">
      <apidata name="UpdateStatus" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFile.UserId">
      <apidata name="UserId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserId" />
      <setter name="set_UserId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Sftp.SftpFileAttributes">
      <apidata name="SftpFileAttributes" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Sftp.SftpFileAttributes.SetPermissions(System.Int16)" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.LastAccessTime" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.LastWriteTime" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.Size" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.UserId" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupId" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.IsSocket" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.IsSymbolicLink" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.IsRegularFile" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.IsBlockDevice" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.IsDirectory" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.IsCharacterDevice" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.IsNamedPipe" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanRead" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanWrite" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanExecute" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanRead" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanWrite" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanExecute" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanRead" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanWrite" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanExecute" />
        <element api="P:Renci.SshNet.Sftp.SftpFileAttributes.Extensions" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.Extensions">
      <apidata name="Extensions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Extensions" />
      <setter name="set_Extensions" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanExecute">
      <apidata name="GroupCanExecute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupCanExecute" />
      <setter name="set_GroupCanExecute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanRead">
      <apidata name="GroupCanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupCanRead" />
      <setter name="set_GroupCanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupCanWrite">
      <apidata name="GroupCanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupCanWrite" />
      <setter name="set_GroupCanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.GroupId">
      <apidata name="GroupId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GroupId" />
      <setter name="set_GroupId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.IsBlockDevice">
      <apidata name="IsBlockDevice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsBlockDevice" />
      <setter name="set_IsBlockDevice" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.IsCharacterDevice">
      <apidata name="IsCharacterDevice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsCharacterDevice" />
      <setter name="set_IsCharacterDevice" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.IsDirectory">
      <apidata name="IsDirectory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsDirectory" />
      <setter name="set_IsDirectory" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.IsNamedPipe">
      <apidata name="IsNamedPipe" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsNamedPipe" />
      <setter name="set_IsNamedPipe" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.IsRegularFile">
      <apidata name="IsRegularFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsRegularFile" />
      <setter name="set_IsRegularFile" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.IsSocket">
      <apidata name="IsSocket" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsSocket" />
      <setter name="set_IsSocket" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.IsSymbolicLink">
      <apidata name="IsSymbolicLink" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsSymbolicLink" />
      <setter name="set_IsSymbolicLink" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.LastAccessTime">
      <apidata name="LastAccessTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastAccessTime" />
      <setter name="set_LastAccessTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.LastWriteTime">
      <apidata name="LastWriteTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LastWriteTime" />
      <setter name="set_LastWriteTime" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanExecute">
      <apidata name="OthersCanExecute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OthersCanExecute" />
      <setter name="set_OthersCanExecute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanRead">
      <apidata name="OthersCanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OthersCanRead" />
      <setter name="set_OthersCanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.OthersCanWrite">
      <apidata name="OthersCanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OthersCanWrite" />
      <setter name="set_OthersCanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanExecute">
      <apidata name="OwnerCanExecute" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerCanExecute" />
      <setter name="set_OwnerCanExecute" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanRead">
      <apidata name="OwnerCanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerCanRead" />
      <setter name="set_OwnerCanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.OwnerCanWrite">
      <apidata name="OwnerCanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OwnerCanWrite" />
      <setter name="set_OwnerCanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileAttributes.SetPermissions(System.Int16)">
      <apidata name="SetPermissions" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mode">
          <type api="T:System.Int16" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.Size">
      <apidata name="Size" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Size" />
      <setter name="set_Size" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileAttributes.UserId">
      <apidata name="UserId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UserId" />
      <setter name="set_UserId" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileAttributes" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Sftp.SftpFileStream">
      <apidata name="SftpFileStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.Finalize" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.EndRead(System.IAsyncResult)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.EndWrite(System.IAsyncResult)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.Close" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.Flush" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.ReadByte" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.SetLength(System.Int64)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.WriteByte(System.Byte)" />
        <element api="M:Renci.SshNet.Sftp.SftpFileStream.Dispose(System.Boolean)" />
        <element api="M:System.IO.Stream.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.CanRead" />
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.CanSeek" />
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.CanWrite" />
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.Length" />
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.Position" />
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.IsAsync" />
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.Name" />
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.Handle" />
        <element api="P:Renci.SshNet.Sftp.SftpFileStream.Timeout" />
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle">
          <apidata name="CreateWaitHandle" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant">
          <apidata name="ObjectInvariant" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.Stream.CanTimeout">
          <apidata name="CanTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTimeout" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.ReadTimeout">
          <apidata name="ReadTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ReadTimeout" />
          <setter name="set_ReadTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.WriteTimeout">
          <apidata name="WriteTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_WriteTimeout" />
          <setter name="set_WriteTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <apidata name="BeginRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
      <apidata name="BeginWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="callback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.IAsyncResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.CanRead">
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.CanSeek">
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.CanWrite">
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Close">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Dispose(System.Boolean)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.EndRead(System.IAsyncResult)">
      <apidata name="EndRead" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.EndWrite(System.IAsyncResult)">
      <apidata name="EndWrite" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="asyncResult">
          <type api="T:System.IAsyncResult" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.Handle">
      <apidata name="Handle" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_Handle" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.IsAsync">
      <apidata name="IsAsync" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsAsync" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.Read(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.ReadByte">
      <apidata name="ReadByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.ReadByte">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.SetLength(System.Int64)">
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileStream.Timeout">
      <apidata name="Timeout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Timeout" />
      <setter name="set_Timeout" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpFileStream.WriteByte(System.Byte)">
      <apidata name="WriteByte" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.WriteByte(System.Byte)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Byte" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileStream" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Sftp.SftpFileSytemInformation">
      <apidata name="SftpFileSytemInformation" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.BlockSize" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.TotalBlocks" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.FreeBlocks" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.AvailableBlocks" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.TotalNodes" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.FreeNodes" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.AvailableNodes" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.Sid" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.IsReadOnly" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.SupportsSetUid" />
        <element api="P:Renci.SshNet.Sftp.SftpFileSytemInformation.MaxNameLenght" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.AvailableBlocks">
      <apidata name="AvailableBlocks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_AvailableBlocks" />
      <setter name="set_AvailableBlocks" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.AvailableNodes">
      <apidata name="AvailableNodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_AvailableNodes" />
      <setter name="set_AvailableNodes" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.BlockSize">
      <apidata name="BlockSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_BlockSize" />
      <setter name="set_BlockSize" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.FreeBlocks">
      <apidata name="FreeBlocks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FreeBlocks" />
      <setter name="set_FreeBlocks" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.FreeNodes">
      <apidata name="FreeNodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FreeNodes" />
      <setter name="set_FreeNodes" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.MaxNameLenght">
      <apidata name="MaxNameLenght" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_MaxNameLenght" />
      <setter name="set_MaxNameLenght" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.Sid">
      <apidata name="Sid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Sid" />
      <setter name="set_Sid" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.SupportsSetUid">
      <apidata name="SupportsSetUid" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_SupportsSetUid" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.TotalBlocks">
      <apidata name="TotalBlocks" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_TotalBlocks" />
      <setter name="set_TotalBlocks" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpFileSytemInformation.TotalNodes">
      <apidata name="TotalNodes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_TotalNodes" />
      <setter name="set_TotalNodes" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpFileSytemInformation" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult">
      <apidata name="SftpListDirectoryAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.AsyncResult`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:Renci.SshNet.Sftp.SftpFile" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult.#ctor(System.AsyncCallback,System.Object)" />
        <element api="P:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult.FilesRead" />
        <element api="M:Renci.SshNet.Common.AsyncResult`1.SetAsCompleted(`0,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult`1.EndInvoke" />
        <element api="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncState" />
        <element api="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle" />
        <element api="P:Renci.SshNet.Common.AsyncResult.IsCompleted" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult.#ctor(System.AsyncCallback,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult.FilesRead">
      <apidata name="FilesRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FilesRead" />
      <setter name="set_FilesRead" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpListDirectoryAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult">
      <apidata name="SftpSynchronizeDirectoriesAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.AsyncResult`1" ref="true">
            <specialization>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.IO.FileInfo" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
          <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult.#ctor(System.AsyncCallback,System.Object)" />
        <element api="P:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult.FilesRead" />
        <element api="M:Renci.SshNet.Common.AsyncResult`1.SetAsCompleted(`0,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult`1.EndInvoke" />
        <element api="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncState" />
        <element api="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle" />
        <element api="P:Renci.SshNet.Common.AsyncResult.IsCompleted" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult.#ctor(System.AsyncCallback,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult.FilesRead">
      <apidata name="FilesRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FilesRead" />
      <setter name="set_FilesRead" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpSynchronizeDirectoriesAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Sftp.SftpUploadAsyncResult">
      <apidata name="SftpUploadAsyncResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Renci.SshNet.Common.AsyncResult" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Renci.SshNet.Sftp.SftpUploadAsyncResult.#ctor(System.AsyncCallback,System.Object)" />
        <element api="P:Renci.SshNet.Sftp.SftpUploadAsyncResult.UploadedBytes" />
        <element api="M:Renci.SshNet.Common.AsyncResult.SetAsCompleted(System.Exception,System.Boolean)" />
        <element api="M:Renci.SshNet.Common.AsyncResult.EndInvoke" />
        <element api="P:Renci.SshNet.Common.AsyncResult.EndInvokeCalled" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncState" />
        <element api="P:Renci.SshNet.Common.AsyncResult.CompletedSynchronously" />
        <element api="P:Renci.SshNet.Common.AsyncResult.AsyncWaitHandle" />
        <element api="P:Renci.SshNet.Common.AsyncResult.IsCompleted" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SftpUploadAsyncResult.#ctor(System.AsyncCallback,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="asyncCallback">
          <type api="T:System.AsyncCallback" ref="true" />
        </parameter>
        <parameter name="state">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpUploadAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SftpUploadAsyncResult.UploadedBytes">
      <apidata name="UploadedBytes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_UploadedBytes" />
      <setter name="set_UploadedBytes" />
      <returns>
        <type api="T:System.UInt64" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SftpUploadAsyncResult" ref="true" />
      </containers>
    </api>
    <api id="T:Renci.SshNet.Sftp.SubsystemSession">
      <apidata name="SubsystemSession" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="F:Renci.SshNet.Sftp.SubsystemSession._operationTimeout" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.#ctor(Renci.SshNet.Session,System.String,System.TimeSpan)" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.Connect" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.Disconnect" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.SendData(System.Byte[])" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.OnChannelOpen" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.OnDataReceived(System.UInt32,System.Byte[])" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.RaiseError(System.Exception)" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.Dispose" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.Dispose(System.Boolean)" />
        <element api="M:Renci.SshNet.Sftp.SubsystemSession.Finalize" />
        <element api="P:Renci.SshNet.Sftp.SubsystemSession.ChannelNumber" />
        <element api="E:Renci.SshNet.Sftp.SubsystemSession.ErrorOccurred" />
        <element api="E:Renci.SshNet.Sftp.SubsystemSession.Disconnected" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.#ctor(Renci.SshNet.Session,System.String,System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="session">
          <type api="T:Renci.SshNet.Session" ref="true" />
        </parameter>
        <parameter name="subsystemName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="operationTimeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="F:Renci.SshNet.Sftp.SubsystemSession._operationTimeout">
      <apidata name="_operationTimeout" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="P:Renci.SshNet.Sftp.SubsystemSession.ChannelNumber">
      <apidata name="ChannelNumber" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ChannelNumber" />
      <setter name="set_ChannelNumber" />
      <returns>
        <type api="T:System.UInt32" ref="false" />
      </returns>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.Connect">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.Disconnect">
      <apidata name="Disconnect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Sftp.SubsystemSession.Disconnected">
      <apidata name="Disconnected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disconnected" />
      <remover name="remove_Disconnected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:System.EventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="disposing">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="E:Renci.SshNet.Sftp.SubsystemSession.ErrorOccurred">
      <apidata name="ErrorOccurred" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ErrorOccurred" />
      <remover name="remove_ErrorOccurred" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Renci.SshNet.Common.ExceptionEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.Finalize">
      <apidata name="Finalize" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.Finalize">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.OnChannelOpen">
      <apidata name="OnChannelOpen" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.OnDataReceived(System.UInt32,System.Byte[])">
      <apidata name="OnDataReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="dataTypeCode">
          <type api="T:System.UInt32" ref="false" />
        </parameter>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.RaiseError(System.Exception)">
      <apidata name="RaiseError" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
    <api id="M:Renci.SshNet.Sftp.SubsystemSession.SendData(System.Byte[])">
      <apidata name="SendData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="data">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Renci.SshNet" module="Renci.SshNet" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Renci.SshNet.Sftp" />
        <type api="T:Renci.SshNet.Sftp.SubsystemSession" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>